@startuml

title US26: Get number of students enrolled in programmes from specified department in a given school year

actor "Department Director" as DepartmentDir #Orange/White
participant ":UI" as UI #DeepPink/White
participant ":CountStudentsInProgrammesFromDepartmentInSchoolYearController" as Controller #Violet/White
participant ":SchoolYearRepo" as SchoolYearRepo #Cyan/White
participant ":DepartmentRepo" as DepartmentRepo #Cyan/White
participant ":ProgrammeEditionEnrollmentRepo" as ProgrammeEditionEnrolRepo #Cyan/White
participant "pee[i]:ProgrammeEditionEnrollment" as ProgrammeEditionEnrollmenti #Cyan/White
participant ":Student" as Student #Cyan/White
participant ":studentUniqueNumbers" as StudentUniqueNumbers #Cyan/White
participant ":ProgrammeEdition" as ProgrammeEdition #Cyan/White
participant ":SchoolYear" as SchoolYear #Cyan/White
participant ":Programme" as Programme #Cyan/White


activate DepartmentDir
DepartmentDir -> UI: I want to get number of students enrolled in programmes from my department in a given school year
activate UI
UI-->DepartmentDir: Choose Department
DepartmentDir ->UI: Department selected
UI --> DepartmentDir: Choose SchoolYear
DepartmentDir ->UI: School Year selected

UI-> Controller: countStudentsInProgrammesFromDepartmentInSchoolYear(d1,sy1)
activate Controller
Controller -> SchoolYearRepo: schoolYearExists(sy1)
activate SchoolYearRepo
SchoolYearRepo --> Controller: true
deactivate SchoolYearRepo
Controller -> DepartmentRepo: departmentExists(d1)
activate DepartmentRepo
DepartmentRepo-->Controller: true
deactivate DepartmentRepo
Controller -> ProgrammeEditionEnrolRepo: countStudentsInProgrammesFromDepartmentInSchoolYear(d1,sy1)
activate ProgrammeEditionEnrolRepo

ProgrammeEditionEnrolRepo -> StudentUniqueNumbers: new HashSet<>()
activate StudentUniqueNumbers
loop for each ProgrammeEditionEnrollment[i] in ProgrammeEditionEnrolRepo
ProgrammeEditionEnrolRepo ->ProgrammeEditionEnrollmenti :isEnrollmentAssociatedToDepartmentAndSchoolYear(d1,sy1)
activate ProgrammeEditionEnrollmenti
ProgrammeEditionEnrollmenti -> ProgrammeEdition: isEditionAssociatedToDepartmentAndSchoolYear(d1,sy1)
activate ProgrammeEdition
ProgrammeEdition->SchoolYear: isSameSchoolYear(sy1)
activate SchoolYear
SchoolYear -->ProgrammeEdition: true
deactivate SchoolYear
ProgrammeEdition->Programme: isInDepartment(d1)
activate Programme
Programme-->ProgrammeEdition:true
deactivate Programme
ProgrammeEdition-->ProgrammeEditionEnrollmenti: true
deactivate ProgrammeEdition
ProgrammeEditionEnrollmenti-->ProgrammeEditionEnrolRepo: true
deactivate ProgrammeEditionEnrollmenti
alt isEnrollmentAssociatedToDepartmentAndSchoolYear
ProgrammeEditionEnrolRepo -> ProgrammeEditionEnrollmenti: getStudentUniqueNumber ()
activate ProgrammeEditionEnrollmenti
ProgrammeEditionEnrollmenti -> Student:getUniqueNumber
activate Student
Student -->ProgrammeEditionEnrollmenti: uniqueNumber
deactivate Student
ProgrammeEditionEnrollmenti --> ProgrammeEditionEnrolRepo: uniqueNumber
deactivate ProgrammeEditionEnrollmenti
ProgrammeEditionEnrolRepo -> StudentUniqueNumbers: add(uniqueNumber)
end
end
StudentUniqueNumbers --> ProgrammeEditionEnrolRepo: studentUniqueNumbers.size()
deactivate StudentUniqueNumbers
ProgrammeEditionEnrolRepo-->Controller: studentUniqueNumbers.size()
deactivate ProgrammeEditionEnrolRepo
Controller --> UI:  studentUniqueNumbers.size()
deactivate Controller
UI-->DepartmentDir: studentUniqueNumbers.size()
deactivate DepartmentDir
deactivate UI


@enduml