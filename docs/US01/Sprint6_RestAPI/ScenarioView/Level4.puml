@startuml

title US01: As an Administrator, I want to configure teacher categories in the system \n (Scenario View - Level 4 - Backend)

skinparam defaultTextAlignment center
skinparam shadowing true

autonumber

participant ":Router" as router
-> router: POST /teacher-categories + body {"name": "Assistant"}
activate router #E1F5FE

note over router: The conversion from JSON to DTO is done automatically through the Spring Boot Framework

participant ":US01_ConfigureTeacherCategoryRESTController" as Controller
router -> Controller: configureTeacherCategory (tcRequestDTO)
activate Controller #E1F5FE

ref over Controller
    Convert tcRequestDTO to NameVO
end

participant ":ITeacherCategoryService" as service
Controller -> service: configureTeacherCategory (nameVO)
activate service #E1F5FE

participant ":ITeacherCategoryFactory" as Factory
service -> Factory: createTeacherCategory (nameVO)
activate Factory #E1F5FE

create "tcID:TeacherCategoryID"
Factory -> "tcID:TeacherCategoryID": create ()

create "tc:TeacherCategory"
Factory -> "tc:TeacherCategory": create (tcID, nameVO)

Factory --> service: tc
deactivate Factory

participant ":ITeacherCategoryRepository" as Repository
service -> Repository: existsByName (nameVO)
activate Repository #E1F5FE
Repository --> service: false
deactivate Repository

service -> Repository: save (tc)
activate Repository #E1F5FE

ref over Repository
    Convert teacherCategory to DataModel
end

participant ":ITeacherCategoryRepositorySpringData" as springDataRepository
Repository -> springDataRepository: save (tcDataModel)
activate springDataRepository #E1F5FE
springDataRepository --> Repository : tcDataModelSaved
deactivate springDataRepository

ref over Repository
    Convert tcDataModelSaved to Domain
end

Repository --> service: tcSaved
deactivate Repository

ref over service
    Convert tcSaved to DTO
end

service --> Controller: tcSavedDTO
deactivate service

ref over Controller
    Convert tcSavedDTO to tcSavedResponseDTO
end

participant ":ITeacherCategoryHateoasAssembler" as hateoasAssembler
Controller -> hateoasAssembler: toModel (tcSavedResponseDTO)
activate hateoasAssembler #E1F5FE

hateoasAssembler --> Controller: EntityModel<TeacherCategoryResponseDTO>
deactivate hateoasAssembler

Controller --> router: 201 + body {EntityModel<TeacherCategoryResponseDTO>}
deactivate Controller

note over router: The conversion from DTO to JSON is done automatically through the Spring Boot Framework

<-- router: 201 + body {EntityModel<TeacherCategoryResponseDTO>}
deactivate router

@enduml