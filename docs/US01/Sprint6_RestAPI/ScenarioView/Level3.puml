@startuml

title US01: As an Administrator, I want to configure teacher categories in the system \n (Scenario View - Level 3)

skinparam backgroundColor white
skinparam ranksep 60
skinparam nodesep 60
skinparam linetype ortho
skinparam defaultTextAlignment center
skinparam shadowing true

legend left
Legend:

    - Orange: Drivers and Frameworks
    - Blue: Interface Adapters
    - Green: Service Layer
    - Yellow: Domain Layer

end legend


' ======= CONTROLLER =======

class TeacherCategoryRESTController #E0FFFF{
      + US01_ConfigureTeacherCategoryController (service : ITeacherCategoryService)
      + configureTeacherCategory(name: String): EntityModel<TeacherCategoryResponseDTO>
      + getTeacherCategoryById (id: String): TeacherCategoryResponseDTO
      + getAllTeacherCategories (): Iterable<TeacherCategoryResponseDTO>
}

' ======= SERVICE =======

interface ITeacherCategoryService #E0FFFF{
    + configureTeacherCategory(name: String): \n TeacherCategoryResponseDTO
}

class TeacherCategoryServiceImpl #C1FFC1{
    + TeacherCategoryServiceImpl (factory: ITeacherCategoryFactory, repository: ITeacherCategoryRepository)
    + configureTeacherCategory(name: String): TeacherCategoryResponseDTO
}

' ======= REPOSITORY =======

interface ITeacherCategoryRepository #FAFAD2{
      + existsByName(name: Name): boolean
}

class TeacherCategoryRepositorySpringDataImpl #E0FFFF {
   + save(teacherCategory: TeacherCategory): TeacherCategory
   + existsByName(name: Name): boolean
}

interface ITeacherCategoryRepositorySpringData #FFDAB9{
      + existsByName(name: Name): boolean
}

' ======= FACTORY =======

interface ITeacherCategoryFactory  	#FAFAD2{
  + createTeacherCategory(name: Name): TeacherCategory
}

class TeacherCategoryFactoryImpl #FAFAD2{
  + createTeacherCategory(name: Name): TeacherCategory
}

' ======= AGGREGATE =======

package "TeacherCategory Aggregate"  {
    entity TeacherCategory <<Root>> <<Entity>> #FAFAD2{
      + TeacherCategory(id: TeacherCategoryID, name: Name)
      + getName(): Name
      + identity(): TeacherCategoryID
      + sameAs(Object obj): boolean
      + equals(Object obj): boolean
      + hashCode(): int
    }
}

' ======= VALUE OBJECTS =======

class Name <<Value Object>> #FAFAD2{
  - _name: String
  + Name(name: String)
  + getName(): String
  + equals(obj: Object): boolean
  + hashCode(): int
}

class TeacherCategoryID <<Value Object>> #FAFAD2{
   - _id: UUID
   + TeacherCategoryID()
   + getValue(): UUID
   + equals(Object obj): boolean
   + hashCode(): int
}

' ======= DATAMODEL =======

class TeacherCategoryDataModel #E0FFFF{
   - name: String
   + TeacherCategoryDataModel()
   + TeacherCategoryDataModel(id: TeacherCategoryIDDataModel, name: String)
   + getId(): TeacherCategoryIDDataModel
   + getName(): Name
   + equals(Object obj): boolean
   + hashCode(): int
}

class TeacherCategoryIDDataModel #E0FFFF {
   - value: UUID
   + TeacherCategoryIDDataModel()
   + TeacherCategoryIDDataModel(value: UUID)
   + getValue(): UUID
   + equals(Object obj): boolean
   + hashCode(): int
}

' ======= MAPPERS =======

interface ITeacherCategoryIDMapper #E0FFFF{
   + toDataModel (id: TeacherCategoryID): TeacherCategoryIDDataModel
   + toDomain (idDataModel: TeacherCategoryIDDataModel): TeacherCategoryID
}

class TeacherCategoryIDMapperImpl #E0FFFF{
   + toDataModel (id: TeacherCategoryID): TeacherCategoryIDDataModel
   + toDomain (idDataModel: TeacherCategoryIDDataModel): TeacherCategoryID
}

interface ITeacherCategoryMapper #E0FFFF{
   + toDataModel (teacherCategory: TeacherCategory): TeacherCategoryDataModel
   + toDomainModel (dataModel: TeacherCategoryDataModel): TeacherCategory
}

class TeacherCategoryMapperImpl #E0FFFF{
   + toDataModel (teacherCategory: TeacherCategory): TeacherCategoryDataModel
   + toDomainModel (dataModel: TeacherCategoryDataModel): TeacherCategory
}


' ======= DTO =======

class TeacherCategoryResponseDTO <<record>> #E0FFFF {
    + _id: String
    + _name: String
}

class TeacherCategoryDTO <<record>> #E0FFFF {
    + _id: String
    + _name: String
}

class TeacherCategoryRequestDTO <<record>> #E0FFFF {
    + _name: String
}

' ======= Assembler =======

interface ITeacherCategoryInternalAssembler #E0FFFF  {
    + toDTO (teacherCategory: TeacherCategory): TeacherCategoryDTO
}

class TeacherCategoryInternalAssemblerImpl #E0FFFF {
    + toDTO (teacherCategory: TeacherCategory): TeacherCategoryDTO
}

interface ITeacherCategoryExternalAssembler #E0FFFF  {
    + toResponseDTO (teacherCategoryDTO: TeacherCategoryDTO): TeacherCategoryResponseDTO
    + toVO (teacherCategoryRequestDTO: TeacherCategoryRequestDTO): Name
}

class TeacherCategoryExternalAssemblerImpl #E0FFFF {
    + toResponseDTO (teacherCategoryDTO: TeacherCategoryDTO): TeacherCategoryResponseDTO
    + toVO (teacherCategoryRequestDTO: TeacherCategoryRequestDTO): Name
}

interface ITeacherCategoryHateoasAssembler #E0FFFF  {
    + toModel (teacherCategoryResponseDTO: TeacherCategoryResponseDTO): \n EntityModel<TeacherCategoryResponseDTO>
}

class TeacherCategoryHateoasAssemblerImpl #E0FFFF {
    + toModel (teacherCategoryResponseDTO: TeacherCategoryResponseDTO): \n EntityModel<TeacherCategoryResponseDTO>
}

' ======= NAVIGABILITY =======

TeacherCategoryRESTController "1" .u.> "_service  1             " ITeacherCategoryService
TeacherCategoryRESTController "1" ..> "1" TeacherCategoryRequestDTO
TeacherCategoryRESTController "1"..> "_assembler 1" ITeacherCategoryExternalAssembler
TeacherCategoryRESTController "1".u.> "_hateoasAssembler 1" ITeacherCategoryHateoasAssembler
TeacherCategoryHateoasAssemblerImpl ..|> ITeacherCategoryHateoasAssembler
ITeacherCategoryHateoasAssembler "1" ..> "1" TeacherCategoryResponseDTO

TeacherCategoryExternalAssemblerImpl ..|> ITeacherCategoryExternalAssembler
ITeacherCategoryExternalAssembler "1"..> "1" TeacherCategoryDTO
ITeacherCategoryExternalAssembler "1"..> "1" TeacherCategoryRequestDTO

TeacherCategoryServiceImpl ..|> ITeacherCategoryService
TeacherCategoryServiceImpl "1"--> "_factory 1             " ITeacherCategoryFactory
TeacherCategoryServiceImpl "1" --> "_repository 1        " ITeacherCategoryRepository
TeacherCategoryServiceImpl "1" --> "_assembler 1        " ITeacherCategoryInternalAssembler
TeacherCategoryInternalAssemblerImpl ..|> ITeacherCategoryInternalAssembler

ITeacherCategoryInternalAssembler "1"..> "1" TeacherCategory

TeacherCategoryFactoryImpl..|> ITeacherCategoryFactory
ITeacherCategoryFactory "1"..> "1" TeacherCategory

TeacherCategoryRepositorySpringDataImpl ..|> ITeacherCategoryRepository
TeacherCategoryRepositorySpringDataImpl "1"-u-> "1 _springData" ITeacherCategoryRepositorySpringData
TeacherCategoryRepositorySpringDataImpl "1".u.> "1" TeacherCategory
TeacherCategoryRepositorySpringDataImpl "1"..> "1" Name
TeacherCategoryRepositorySpringDataImpl "1"-u-> "_mapper 1        " ITeacherCategoryMapper
TeacherCategoryRepositorySpringDataImpl "1" -->"   _idMapper   1            " ITeacherCategoryIDMapper
ITeacherCategoryRepositorySpringData "1" ..> "1" TeacherCategoryDataModel
ITeacherCategoryRepositorySpringData "1" .l.> "1" Name
ITeacherCategoryRepository "1" .u.> "1" Name

TeacherCategoryMapperImpl ..|> ITeacherCategoryMapper
TeacherCategoryIDMapperImpl ..|> ITeacherCategoryIDMapper
TeacherCategoryIDMapperImpl "1" ..> "1 " TeacherCategoryIDDataModel
TeacherCategoryIDMapperImpl "1" .u.> "1"  TeacherCategoryID
TeacherCategoryMapperImpl "1   ".l.> "1   " TeacherCategoryDataModel
TeacherCategoryMapperImpl "1".l.> "1" TeacherCategory
TeacherCategoryMapperImpl "1" -u-> "1 _factory" ITeacherCategoryFactory
TeacherCategoryMapperImpl "1" -u-> "1 _idMapper" ITeacherCategoryIDMapper

TeacherCategoryDataModel "1" --> "_idDataModel 1 "TeacherCategoryIDDataModel

TeacherCategory "1"-u-> "                                            _name 1"Name
TeacherCategory "1"-l-> "_id 1    "TeacherCategoryID

@enduml
