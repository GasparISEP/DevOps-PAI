@startuml
actor admin
autonumber

title: US01 - Sequence Diagram - Configure TeacherCategory (Spring Data JPA)

skinparam sequence {
  ParticipantFontSize 16
  ActorFontSize 16
  FontSize 14
  LifeLineBorderColor DarkSlateGray
  LifeLineBackgroundColor #E6F2E6
  ParticipantBorderColor Black
  ParticipantBackgroundColor White
  ArrowColor Black
  ArrowThickness 1
  FontName Helvetica
}
skinparam nodesep 100
skinparam ranksep 120
skinparam linetype ortho

participant UI
participant ":US01_ConfigureTeacherCategoryController" as Controller
participant ":ITeacherCategoryApplicationService" as AppServiceInterface
participant ":TeacherCategoryApplicationService" as AppServiceImpl
participant ":Name (VO)" as NameVO
participant ":ITeacherCategoryRepository" as Repository
participant ":ITeacherCategoryFactory" as Factory
participant ":TeacherCategory" as DomainAggregate
participant ":ITeacherCategoryMapper" as Mapper
participant ":ITeacherCategoryRepositorySpringData" as JpaRepo
participant ":TeacherCategoryDataModel" as DataModel

== UI Interaction ==

admin -> UI ++ : "I want to register a new TeacherCategory"
UI --> admin -- : "Please provide category name"

admin -> UI ++ : "Expert"
UI -> Controller ++ : configureTeacherCategory("Expert")

== Controller delegates to Service ==

Controller -> AppServiceInterface ++ : registerCategory("Expert")
AppServiceInterface -> AppServiceImpl ++ : registerCategory("Expert")

== Value Object Creation ==

AppServiceImpl -> NameVO ++ : new Name("Expert")
NameVO --> AppServiceImpl -- : validated Name object

== Check Existence in Repository ==

AppServiceImpl -> Repository ++ : existsByName(name)
Repository -> JpaRepo ++ : existsByName(name.getName())
JpaRepo --> Repository -- : false
Repository --> AppServiceImpl -- : false

== Aggregate Creation using Factory ==

AppServiceImpl -> Factory ++ : createTeacherCategory(name)
Factory -> DomainAggregate ++ : new TeacherCategory(id, name)
Factory --> AppServiceImpl -- : TeacherCategory

== Persistence Layer ==

AppServiceImpl -> Repository ++ : save(TeacherCategory)
Repository -> Mapper ++ : toDataModel(TeacherCategory)
Mapper -> DataModel ++ : create(id, name)
Mapper --> Repository -- : TeacherCategoryDataModel
Repository -> JpaRepo ++ : save(TeacherCategoryDataModel)
JpaRepo --> Repository -- : saved
Repository --> AppServiceImpl -- : saved aggregate

== Response to UI ==

AppServiceImpl --> AppServiceInterface -- : true
AppServiceInterface --> Controller -- : true
Controller --> UI -- : true
UI --> admin -- : "TeacherCategory registered successfully"

@enduml
