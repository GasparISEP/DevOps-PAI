@startuml

autonumber

title US20 - Define RUC for a Course Edition (Final Architecture with Two Services)

actor PD
participant UI
participant Controller
participant ITeacherService as TeacherService
participant ICourseEditionService as CourseService
participant TeacherRepo
participant CourseRepo
participant SpringTeacherRepo
participant SpringCourseRepo
participant TeacherMapper
participant CourseMapper
participant CourseEdition

PD -> UI : I want to define the RUC for a Course Edition

== Load All Teachers ==
UI -> Controller : getAllTeachers()
activate Controller
Controller -> TeacherService : getAllTeachers()
activate TeacherService
TeacherService -> TeacherRepo : findAll()
TeacherRepo -> SpringTeacherRepo : findAll()
SpringTeacherRepo --> TeacherRepo : List<TeacherJpa>
TeacherRepo -> TeacherMapper : toDomain()
TeacherMapper --> TeacherRepo : List<Teacher>
TeacherRepo --> TeacherService : List<Teacher>
TeacherService --> Controller : List<Teacher>
Controller --> UI : List<Teacher>
deactivate TeacherService
deactivate Controller

== Load All Course Editions ==
UI -> Controller : getAllCourseEditions()
activate Controller
Controller -> CourseService : findAll()
activate CourseService
CourseService -> CourseRepo : findAll()
CourseRepo -> SpringCourseRepo : findAll()
SpringCourseRepo --> CourseRepo : List<CourseEditionJpa>
CourseRepo -> CourseMapper : toDomain()
CourseMapper --> CourseRepo : List<CourseEdition>
CourseRepo --> CourseService : List<CourseEdition>
CourseService --> Controller : List<CourseEdition>
Controller --> UI : List<CourseEdition>
deactivate CourseService
deactivate Controller

== Assign RUC to Course Edition ==
UI -> Controller : defineRucForCourseEdition(courseEditionID, teacherID)
activate Controller
Controller -> CourseService : containsOfIdentity(courseEditionID)
CourseService -> CourseRepo : containsOfIdentity()
CourseRepo -> SpringCourseRepo : existsById()
SpringCourseRepo --> CourseRepo : boolean
CourseRepo --> CourseService : boolean
CourseService --> Controller : boolean

Controller -> TeacherService : existsById(teacherID)
TeacherService -> TeacherRepo : containsOfIdentity()
TeacherRepo -> SpringTeacherRepo : existsById()
SpringTeacherRepo --> TeacherRepo : boolean
TeacherRepo --> TeacherService : boolean
TeacherService --> Controller : boolean

Controller -> CourseService : assignRucToCourseEdition(teacherID, courseEditionID)
activate CourseService
CourseService -> CourseRepo : ofIdentity(courseEditionID)
CourseRepo -> SpringCourseRepo : findById()
SpringCourseRepo --> CourseRepo : CourseEditionJpa
CourseRepo -> CourseMapper : toDomain()
CourseMapper --> CourseRepo : CourseEdition
CourseRepo --> CourseService : CourseEdition

CourseService -> CourseEdition : setRuc(teacherID)
CourseEdition --> CourseService : success

CourseService -> CourseRepo : save(CourseEdition)
CourseRepo -> CourseMapper : toJpa()
CourseMapper --> CourseRepo : CourseEditionJpa
CourseRepo -> SpringCourseRepo : save(CourseEditionJpa)
SpringCourseRepo --> CourseRepo : CourseEditionJpa
CourseRepo -> CourseMapper : toDomain()
CourseMapper --> CourseRepo : CourseEdition
CourseRepo --> CourseService : CourseEdition

CourseService --> Controller : success
Controller --> UI : RUC defined
deactivate CourseService
deactivate Controller

@enduml
