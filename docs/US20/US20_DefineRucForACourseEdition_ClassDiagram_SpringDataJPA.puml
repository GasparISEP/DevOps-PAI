@startuml

skinparam linetype ortho
skinparam ranksep 50
skinparam nodesep 100

' Presentation Layer
class US20_DefineRucForCourseEditionController {
  - courseService: ICourseEditionService
  - teacherService: ITeacherService
  + getAllTeachers()
  + getAllCourseEditions()
  + defineRucForCourseEdition(courseEditionID: CourseEditionID, teacherID: TeacherID)
}

' Application Layer
interface ICourseEditionService {
  + assignRucToCourseEdition(teacherID: TeacherID, courseEditionID: CourseEditionID): boolean
  + findAll(): Iterable<CourseEdition>
  + ofIdentity(id: CourseEditionID): Optional<CourseEdition>
  + containsOfIdentity(id: CourseEditionID): boolean
}

interface ITeacherService {
  + getAllTeachers(): Iterable<Teacher>
  + existsById(teacherID: TeacherID): boolean
}

class CourseEditionServiceImpl {
  - repo: ICourseEditionRepository
  - factory: ICourseEditionFactory
  + assignRucToCourseEdition(...)
  + findAll()
  + ofIdentity(...)
  + containsOfIdentity(...)
}

class TeacherServiceImpl {
  - repo: ITeacherRepository
  - factory: ITeacherFactory
  + getAllTeachers()
  + existsById(...)
}

' Domain Layer
interface ICourseEditionRepository {
  + save(courseEdition: CourseEdition): CourseEdition
  + ofIdentity(id: CourseEditionID): Optional<CourseEdition>
  + findAll(): Iterable<CourseEdition>
  + containsOfIdentity(id: CourseEditionID): boolean
}

interface ITeacherRepository {
  + findAll(): Iterable<Teacher>
  + containsOfIdentity(id: TeacherID): boolean
}

class CourseEdition {
  - id: CourseEditionID
  - ruc: TeacherID
  + setRuc(teacherID: TeacherID): boolean
  + getRuc(): TeacherID
}

class Teacher {
  - id: TeacherID
}

' Infrastructure Layer
class CourseEditionRepositorySpringDataImpl {
  - springDataRepo: ICourseEditionRepositorySpringData
  - mapper: CourseEditionMapper
  + save(...)
  + ofIdentity(...)
  + findAll()
  + containsOfIdentity(...)
}

class TeacherRepositorySpringDataImpl {
  - springDataRepo: ITeacherRepositorySpringData
  - mapper: TeacherMapper
  + findAll()
  + containsOfIdentity(...)
}

interface ICourseEditionRepositorySpringData <<JpaRepository>>
interface ITeacherRepositorySpringData <<JpaRepository>>

class CourseEditionDataModel <<JPA Entity>>
class TeacherDataModel <<JPA Entity>>

class CourseEditionMapper
class TeacherMapper

' Associations
US20_DefineRucForCourseEditionController --> ICourseEditionService
US20_DefineRucForCourseEditionController --> ITeacherService

ICourseEditionService <|.. CourseEditionServiceImpl
ITeacherService <|.. TeacherServiceImpl

CourseEditionServiceImpl --> ICourseEditionRepository
TeacherServiceImpl --> ITeacherRepository

ICourseEditionRepository <|.. CourseEditionRepositorySpringDataImpl
ITeacherRepository <|.. TeacherRepositorySpringDataImpl

CourseEditionRepositorySpringDataImpl --> ICourseEditionRepositorySpringData
TeacherRepositorySpringDataImpl --> ITeacherRepositorySpringData

CourseEditionRepositorySpringDataImpl --> CourseEditionMapper
TeacherRepositorySpringDataImpl --> TeacherMapper

ICourseEditionRepositorySpringData --> CourseEditionDataModel
ITeacherRepositorySpringData --> TeacherDataModel

CourseEditionMapper --> CourseEditionDataModel
TeacherMapper --> TeacherDataModel

ICourseEditionRepository ..> CourseEdition
ITeacherRepository ..> Teacher
CourseEdition --> TeacherID

@enduml
