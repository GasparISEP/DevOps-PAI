@startuml

top to bottom direction
skinparam ranksep 200
skinparam nodesep 100
skinparam linetype ortho

class US06_IWantToUpdateTheDepartmentDirectorOfADepartmentController {
    +US06_IWantToUpdateTheDepartmentDirectorOfADepartmentController(IDepartmentRepository)
    +updateDepartmentDirector (departmentID: DepartmentID, teacherID: TeacherID) : boolean
    +getAllDepartments () : Set<Department>
}

package "Department Aggregate" #LightBlue {
    entity "<<Root>>\n Department" {
     +Department(departmentID: DepartmentID, name: Name, acronym: Acronym, teacherID: TeacherID)
     +changeDirector(furtherDirectorID: TeacherID) : boolean
    }
}

class "<<Value Object>>\n DepartmentID" {
     +DepartmentID ()
}
class "<<Value Object>>\n Name" {
     +Name ()
}
class "<<Value Object>>\n Acronym" {
     +Acronym ()
}

package "Teacher Aggregate"#LightBlue{
entity "<<Root>>Teacher" {
    +Teacher(teacherID: TeacherId, name: Name, email: Email, nif: NIF, phoneNumber: PhoneNumber, academicBackground: AcademicBackground,
                address: Address, departmentID: DepartmentID)
    +isInDepartment(departmentID: DepartmentID) :boolean
}
}

class "<<Value Object>>\n TeacherID" {
     +TeacherID()
}
class "<<Value Object>>\n NIF" {
     +nif()
}

class "<<Value Object>>\n AcademicBackground" {
     +AcademicBackground()
}
class "<<Value Object>>\n PhoneNumber" {
     +PhoneNumber()
}
class "<<Value Object>>\n Email" {
     +Email()
}



class "<<Value Object>>\n Address" {
     +Address(street: Street, postalCode: PostalCode, location: Location, country: Country)
}

class "<<Value Object>>\n Street" {
     +Street()
}

class "<<Value Object>>\n PostalCode" {
     +PostalCode()
}

class "<<Value Object>>\n Location" {
     +Location()
}

class "<<Value Object>>\n Country" {
     +Country()
}

package "TeacherCategory Aggregate"#LightBlue{
entity "<<Root>>TeacherCategory" {
    +TeacherCategory(teacherCategoryID: TeacherCategoryId, name: Name)
}
}

class "<<Value Object>>\n TeacherCategoryID" {
     +TeacherCategoryID ()
}

interface IDepartmentRepository {
    +DepartmentRepository(departmentFactoryInterface: DepartmentFactory, departmentListFactoryInterface: DepartmentListFactory )
    +DepartmentExists(Department department) :boolean
}

class DepartmentRepository {
    +DepartmentRepository(departmentFactoryInterface: DepartmentFactory, departmentListFactoryInterface: DepartmentListFactory )
    +DepartmentExists(Department department) :boolean
}


class DepartmentRepository {
    +departmentRepository(departmentFactory : DepartmentFactory, departmentListFactory : DepartmentLisFactory)
    +updateOfDepartmentDirector (department: Department, furtherDirector: Teacher) :boolean
    +getAllDepartments () : Set<Department>
}


US06_IWantToUpdateTheDepartmentDirectorOfADepartmentController "1" ..> "1          " IDepartmentRepository
IDepartmentRepository <|.. DepartmentRepository
"Teacher Aggregate" "1" --> "1  _address" "<<Value Object>>\n Address"
"Teacher Aggregate" "1" --> "* _teacherCategory" "TeacherCategory Aggregate"
"Department Aggregate" "_listDepartment *         " <-- "1" DepartmentRepository



"Department Aggregate" "1" --> "1 _departmentID" "<<Value Object>>\n DepartmentID"
"Department Aggregate" "1" --> "1 _acronym" "<<Value Object>>\n Acronym"
"Department Aggregate" "1" --> "1 _name" "<<Value Object>>\n Name"
"Department Aggregate" "1" --> "1 _departmentDirector" "<<Value Object>>\n TeacherID"

"Teacher Aggregate" "1" --> "1 _teacherID" "<<Value Object>>\n TeacherID"
"Teacher Aggregate" "1" --> "1 _name" "<<Value Object>>\n Name"
"Teacher Aggregate" "1" --> "1 _email" "<<Value Object>>\n Email"
"Teacher Aggregate" "1" --> "1 _nif" "<<Value Object>>\n NIF"
"Teacher Aggregate" "1" --> "1 _phoneNumber" "<<Value Object>>\n PhoneNumber"
"Teacher Aggregate" "1" --> "1 _academicBackground" "<<Value Object>>\n AcademicBackground"
"Teacher Aggregate" "1..*" --> "1 _departmentID" "<<Value Object>>\n DepartmentID"




"TeacherCategory Aggregate" "1" --> "1 _teacherCategoryID" "<<Value Object>>\n TeacherCategoryID"
"TeacherCategory Aggregate" "1" --> "1 _name" "<<Value Object>>\n Name"


"<<Value Object>>\n Address" "1" --> "1 _street" "<<Value Object>>\n Street"
"<<Value Object>>\n Address" "1" --> "1 _postalCode" "<<Value Object>>\n PostalCode"
"<<Value Object>>\n Address" "1" --> "1 _location" "<<Value Object>>\n Location"
"<<Value Object>>\n Address" "1" --> "1 _country" "<<Value Object>>\n Country"


@enduml
