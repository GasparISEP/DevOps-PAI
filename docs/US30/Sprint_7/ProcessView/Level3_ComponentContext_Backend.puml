@startuml
title: US30: As an ASC, I want to add a course to a programme using a Web UI\n(Process View - Level 3: Components (Core Backend flow))
autonumber

skinparam {
  ActivityPadding 2
  ActivityMargin 2
  BoxPadding 2
}
skinparam sequence {
    LifeLineBorderColor Grey
    LifeLineBackgroundColor HoneyDew
}
skinparam defaultTextAlignment center
skinparam shadowing true

participant "<<component>>\n:Router" as Router #E1F5FE
participant "<<component>>\n:CourseInStudyPlanRestController\n(REST Controller)" as Controller #E1F5FE
participant "<<component>>\n:ICourseInStudyPlanAssembler\n(Assembler)" as Assembler #E1F5FE
participant "<<component>>\n:IAddCourseToAProgrammeService\n(Service)" as Service #E1F5FE
participant "<<component>>\n:ICourseInStudyPlanFactory\n(Factory)" as Factory #E1F5FE
participant "<<component>>\n:ICourseInStudyPlanRepository\n(Repository)" as Repository #E1F5FE
database DB as DB #E1F5FE
participant "<<component>>\n:ICourseInStudyPlanBusinessAssembler\n(Assembler)" as BAssembler #E1F5FE


note over Router
This diagram shows only the essential components involved
in the creation (POST) of a CourseInStudyPlan.
It excludes the components used for auxiliary GET requests,
as this is a focused ("zoomed-in") view on the creation action.
end note

-> Router: POST /courses-in-study-plan (JSON)
activate Router
note over Router
Spring converts JSON into
CourseInStudyPlanRequestDTO
end note
Router -> Controller: addCourseToAProgramme\n(requestDTO)
activate Controller


Controller -> Assembler: toCommand(requestDTO)
activate Assembler
Assembler --> Controller: CourseInStudyPlanCommand
deactivate Assembler



Controller -> Service: addCourseToAProgramme(command)
activate Service


Service -> Factory: newCourseInStudyPlan\n(command)
activate Factory

Factory --> Service: CourseInStudyPlan\n(domain object)
deactivate Factory

Service -> Repository: containsOfIdentity(courseInStudyPlan.identity())
activate Repository
Repository --> Service: false (not exists)
deactivate Repository

Service -> Repository: getTotalCreditsEctsInStudyPlanSoFar(...)
activate Repository
note over Repository
Uses internal list<CourseInStudyPlan>
via findAll()
Filters and sums ECTS credits
end note
Repository --> Service: totalECTS
deactivate Repository


Service -> Repository: save(courseInStudyPlan)
activate Repository

Repository -> DB: INSERT course_in_study_plan\n(data)
activate DB
DB --> Repository: success
deactivate DB

Repository --> Service: saved CourseInStudyPlan
deactivate Repository

Service -> BAssembler: toDTO(saved CourseInStudyPlan)
activate BAssembler
BAssembler --> Service: CourseInStudyPlanServiceDTO
deactivate BAssembler

    Service -> Assembler: toResponseDTO\n(courseInStudyPLanServiceDTO)
    activate Assembler
    Assembler --> Service: CourseInStudyPlanResponseDTO
    deactivate Assembler
    Service --> Controller: CourseInStudyPlanResponseDTO
    deactivate Service
    Controller --> Router: 201 Created + body\n{CourseInStudyPlanResponseDTO (JSON) + hypermedia}

note over Router: The conversion from DTO to JSON\n is done automatically through\n the Spring Boot Framework


deactivate Controller

<-- Router: Success response
deactivate Router
@enduml