@startuml
'https://plantuml.com/class-diagram


class US03addCourseToProgrammeController {
    - courseRepository: CourseRepository
    - studyPlanRepository: StudyPlanRepository
    - courseInStudyPlanRepository: CourseInStudyPlanRepository
    + getAllProgrammes(): List<Programme>
    + getAllCourses(): List<Course>
    + getAllStudyPlans(): List<StudyPlan>
    + addCourseToProgramme(studyPlanID: StudyPlanID, courseID: CourseID, semester: Semester, curricularYear: CurricularYear): boolean
}

class StudyPlanRepositoryImpl {
    - _studyPlanRepository
    + getAllStudyPlans()
}


class CourseRepositoryImpl {
    - _courseFactory: CourseFactory
    -_courseRepository:ArrayList<Course>
    +registerCourse (courseName: Name, acronym: Acronym, quantityCreditsECTS: QuantityCreditsEcts, durationCourseInCurricularYear: DurationCourseInCurricularYear)
    +isCourseRegistered (course: Course)
    +getAllCourses()
}

interface IRepository {
}

interface ICourseInStudyPlanFactory {
}

class CourseInStudyPlanFactoryImpl {
 + newCourseInStudyPlan();
}


interface ICourseInStudyPlanRepository {
}

interface IStudyPlanRepository {
}

interface ICourseRepository {
}

class CourseInStudyPlanRepositoryImpl {
     + registerCourseInStudyPlan(semester: Semester, curricularYear: CurricularYear, course: CourseID, studyPlanID:  StudyPlanID)

}

package "CourseInStudyPlan Aggregate" {
    class "<<root>>\nCourseInStudyPlan" {
        - courseInStudyPlanID: CourseInStudyPlanID
        - studyPlanID: StudyPlanID
        - courseID: CourseID
        - curricularYear: CurricularYear
        - semester: Semester
        +CourseInStudyPlan(semester: Semester, curricularYear: CurricularYear, course: CourseID, studyPlanID:  StudyPlanID)
        +equals(ObjectToCompare: Object): boolean
        +getCourse(): Course
        +getSemester(): Semester
        +getCurricularYear(): CurricularYear
    }
    class Semester <<ValueObject>> {
        -_semester: int
        +isSemesterValid(int semester): boolean
        +getSemester(): int
    }

    class CurricularYear <<ValueObject>> {
            -_curricularYear: int
            +CurricularYear(int curricularYear)
            +isCurricularYearPositive(int curricularYear): boolean
            +getCurricularYear(): int
    }

    class CourseInStudyPlanID <<ValueObject>> {
        - uuid: UUID
    }

    class CourseID <<ValueObject>> {
        - uuid: UUID
    }

    class StudyPlanID <<ValueObject>> {
        - uuid: UUID
    }
}




US03addCourseToProgrammeController "1" -down--> "*" IStudyPlanRepository: uses
US03addCourseToProgrammeController "1" -down--> "*" ICourseInStudyPlanRepository: uses
US03addCourseToProgrammeController "1" -down--> "*" ICourseRepository: uses

CourseInStudyPlanRepositoryImpl -up..|> ICourseInStudyPlanRepository: implements
CourseRepositoryImpl -up...|> ICourseRepository : implements
StudyPlanRepositoryImpl -up..|> IStudyPlanRepository: implements

ICourseInStudyPlanRepository -down--|> IRepository: extends
ICourseRepository -down--|> IRepository: extends
IStudyPlanRepository -down--|> IRepository: extends

CourseInStudyPlanRepositoryImpl "1" -down-> "1" ICourseInStudyPlanFactory: uses
CourseInStudyPlanFactoryImpl -right..|> ICourseInStudyPlanFactory: implements
ICourseInStudyPlanFactory "1" -right-> "1..*" "CourseInStudyPlan Aggregate": creates

"<<root>>\nCourseInStudyPlan" --> CourseID: refers to
"<<root>>\nCourseInStudyPlan" --> StudyPlanID: refers to
"<<root>>\nCourseInStudyPlan" <-- CourseInStudyPlanID: has
"<<root>>\nCourseInStudyPlan" --> CurricularYear: has
"<<root>>\nCourseInStudyPlan" --> Semester: has



@enduml