@startuml
'https://plantuml.com/class-diagram
skinparam packageBorderColor  #F0B0B0
skinparam arrowThickness 1.2
skinparam linetype ortho


package together {

title US03addCourseToProgramme

        package Controller {
             class US03addCourseToProgrammeController {
                - courseRepository: CourseRepository
                - studyPlanRepository: StudyPlanRepository
                - courseInStudyPlanRepository: CourseInStudyPlanRepository
                + getAllProgrammes(): List<Programme>
                + getAllCourses(): List<Course>
                + getAllStudyPlans(): List<StudyPlan>
                + addCourseToProgramme(studyPlanID: StudyPlanID, courseID: CourseID, semester: Semester, curricularYear: CurricularYear): boolean
            }

        }

        package Service {

            package ServiceStudyPlan{
                class ServiceStudyPlanImpl
                interface IServiceStudyPlan <<interface>> {}
            }

            package ServiceCourse{
                class ServiceCourseImpl
                interface IServiceCourse <<interface>> {}
            }

            package ServiceCourseInStudyPlan{
                class ServiceCourseInStudyPlanImpl
                interface IServiceCourseInStudyPlan <<interface>> {}
            }
        }

        package Repository {



                class StudyPlanRepositorySpringDataImpl {
                    - _studyPlanRepository
                    + getAllStudyPlans()
                }
                interface "IStudyPlanRepository <<interface>>"  {}
                interface "IStudyPlanRepositorySpringData<<interface>>"




                class CourseRepositorySpringDataImpl {
                    - _courseFactory: CourseFactory
                    -_courseRepository:ArrayList<Course>
                    +registerCourse (courseName: Name, acronym: Acronym, quantityCreditsECTS: QuantityCreditsEcts, durationCourseInCurricularYear: DurationCourseInCurricularYear)
                    +isCourseRegistered (course: Course)
                    +getAllCourses()
                }
                interface "ICourseRepositorySpringData<<interface>>"
                interface "ICourseRepository <<interface>>" {}



                class CourseInStudyPlanRepositorySpringDataImpl {
                     + registerCourseInStudyPlan(semester: Semester, curricularYear: CurricularYear, course: CourseID, studyPlanID:  StudyPlanID)
                }
                interface "ICourseInStudyPlanRepository <<interface>>" {}
                interface "ICourseInStudyPlanRepositorySpringData<<interface>>"

        }
           'interface "IRepository <<interface>>" {}



package Domain{

        package "StudyPlan Aggregate" {

             class StudyPlanID <<ValueObject>> {
                    - uuid: UUID
             }
        }

        package "Course Aggregate" {
             class CourseID <<ValueObject>> {
                    - uuid: UUID
             }
        }

        package "CourseInStudyPlan Aggregate" {

            class "<<root>>\nCourseInStudyPlan" {
                - courseInStudyPlanID: CourseInStudyPlanID
                - studyPlanID: StudyPlanID
                - courseID: CourseID
                - curricularYear: CurricularYear
                - semester: Semester
                +CourseInStudyPlan(semester: Semester,
                curricularYear: CurricularYear, course: CourseID,
                studyPlanID:  StudyPlanID)
                +equals(ObjectToCompare: Object): boolean
                +getCourse(): Course
                +getSemester(): Semester
                +getCurricularYear(): CurricularYear
            }

            class Semester <<ValueObject>> {
                -_semester: int
                +isSemesterValid(int semester): boolean
                +getSemester(): int
            }

            class CurricularYear <<ValueObject>> {
                    -_curricularYear: int
                    +CurricularYear(int curricularYear)
                    +isCurricularYearPositive(int curricularYear): boolean
                    +getCurricularYear(): int
            }

            class CourseInStudyPlanID <<ValueObject>> {
                - uuid: UUID
            }

            interface ICourseInStudyPlanFactory <<interface>> {}

            class CourseInStudyPlanFactoryImpl {
             + newCourseInStudyPlan();
            }
        }


}

}


Controller ---> Service #F0B0B0
Service ----> Repository #F0B0B0
Repository ------> Domain #F0B0B0



US03addCourseToProgrammeController "1" .down..> "*" IServiceCourse: uses
US03addCourseToProgrammeController "1" .down..> "*" IServiceStudyPlan: uses
US03addCourseToProgrammeController "1" .down..> "*" IServiceCourseInStudyPlan: uses

IServiceCourse " " <|... " " ServiceCourseImpl: implements
IServiceStudyPlan  " " <|... " " ServiceStudyPlanImpl: implements
IServiceCourseInStudyPlan  " " <|... " " ServiceCourseInStudyPlanImpl: implements

IServiceCourse  "1" ..> "*" "ICourseRepository <<interface>>"
IServiceStudyPlan  "1" ..> "*" "IStudyPlanRepository <<interface>>"
IServiceCourseInStudyPlan  "1" ..> "*" "ICourseInStudyPlanRepository <<interface>>"

CourseInStudyPlanRepositorySpringDataImpl ..|> "ICourseInStudyPlanRepository <<interface>>" : implements
CourseRepositorySpringDataImpl ..|> "ICourseRepository <<interface>>" : implements
StudyPlanRepositorySpringDataImpl ..|> "IStudyPlanRepository <<interface>>" : implements

CourseInStudyPlanRepositorySpringDataImpl ..|> "ICourseInStudyPlanRepositorySpringData<<interface>>"
CourseRepositorySpringDataImpl ..|> "ICourseRepositorySpringData<<interface>>"
StudyPlanRepositorySpringDataImpl ..|> "IStudyPlanRepositorySpringData<<interface>>"

'ICourseInStudyPlanRepository -down--|> IRepository: extends
'ICourseRepository -down--|> IRepository: extends
'IStudyPlanRepository -down--|> IRepository: extends

StudyPlanRepositorySpringDataImpl --> StudyPlanID
CourseRepositorySpringDataImpl --> CourseID
CourseInStudyPlanRepositorySpringDataImpl --> CourseInStudyPlanID

IServiceCourseInStudyPlan "1" --> "1" ICourseInStudyPlanFactory: uses
CourseInStudyPlanFactoryImpl ..|> ICourseInStudyPlanFactory: implements
ICourseInStudyPlanFactory "1" --> "1..*" "<<root>>\nCourseInStudyPlan": creates

"<<root>>\nCourseInStudyPlan" --> CourseID: refers to
"<<root>>\nCourseInStudyPlan" --> StudyPlanID: refers to
"<<root>>\nCourseInStudyPlan" <-- CourseInStudyPlanID: has
"<<root>>\nCourseInStudyPlan" --> CurricularYear: has
"<<root>>\nCourseInStudyPlan" --> Semester: has

@enduml