@startuml
autonumber
skinparam sequence {
   LifelineBorderColor black
   LifelineBackgroundColor LightBlue
 }
title US04: Register a Teacher in the System
actor Administrator #LightBlue/White
participant ": UI" as UI #LightBlue/White
participant ":US04_IWantToRegisterATeacherInTheSystemController" as Controller #LightBlue/White
participant "ITeacherService" as ITeacherService #LightBlue/White
participant "TeacherServiceImpl" as TeacherServiceImpl #LightBlue/White
participant ": ITeacherFactory" as ITeacherFactory #LightBlue/White
participant ": TeacherFactoryImpl" as TeacherFactoryImpl #LightBlue/White
participant ": Teacher" as Teacher
participant ": TeacherMapper" as TeacherMapper
participant ": TeacherDataModel" as TeacherDataModel
participant ": IDepartmentRepository" as IDepartmentRepository #LightBlue/White
participant ": IDepartmentRepositorySpringData" as IDepartmentRepositorySpringData #LightBlue/White
participant ": DepartmentRepositorySpringDataImpl" as DepartmentRepositorySpringDataImpl #LightBlue/White
participant ": ITeacherRepository" as ITeacherRepository #LightBlue/White
participant ": ITeacherRepositorySpringData" as ITeacherRepositorySpringData #LightBlue/White
participant ": TeacherRepositorySpringDataImpl" as TeacherRepositorySpringDataImpl #LightBlue/White
Administrator -> UI : I want to register a teacher in the system.
activate UI #ddfada

UI --> Administrator: What data: teacherAcronym, name, email, nif, phoneNumber,\n academicBackground,street,postalcode,location,country,departmentID?
Administrator -> UI: Enter data: teacherAcronym, name, email, nif, phoneNumber,\n academicBackground,street,postalcode,location,country, departmentID!
UI --> Administrator : Sure?
Administrator -> UI: Yes!
UI -> Controller : registerATeacherInTheSystem( teacherAcronym, name, email, nif, phoneNumber,\n academicBackground,street,postalcode,location,country, departmentID)
activate Controller #ddfada
ref over Controller
    Convert acronym and name to VO
end ref
Controller -> ITeacherService : isDepartmentInDepartmentRepository(departmentID)
activate ITeacherService
ITeacherService -> TeacherServiceImpl : isDepartmentInDepartmentRepository(departmentID)
activate TeacherServiceImpl
TeacherServiceImpl -> IDepartmentRepository : isDepartmentInDepartmentRepository(departmentID)

note left of Controller
The IDepartmentRepository interface is injected into the controller,
 acting as an intermediary. It delegates tasks to DepartmentRepositoryImpl,
 which is responsible for handling data storage and retrieval.
  Thats why both are included in the sequence diagram to reflect this flow.
end note
activate IDepartmentRepository  #ddfada
IDepartmentRepository -> IDepartmentRepositorySpringData
activate IDepartmentRepositorySpringData
IDepartmentRepositorySpringData -> DepartmentRepositorySpringDataImpl : isDepartmentInDepartmentRepository(departmentID)
activate DepartmentRepositorySpringDataImpl  #ddfada
DepartmentRepositorySpringDataImpl -->IDepartmentRepositorySpringData : True
deactivate DepartmentRepositorySpringDataImpl
IDepartmentRepositorySpringData -->IDepartmentRepository : True
deactivate IDepartmentRepositorySpringData
IDepartmentRepository -->TeacherServiceImpl : True
deactivate IDepartmentRepository
TeacherServiceImpl -->ITeacherService : True
deactivate TeacherServiceImpl
ITeacherService -->Controller : True
deactivate ITeacherService
Controller -> ITeacherService: registerTeacher(teacherAcronym, name, email, nif, phoneNumber,\n academicBackground,Street,PostalCode,Location,Country, departmentID)
activate ITeacherService #ddfada
ITeacherService -> TeacherServiceImpl: registerTeacher(teacherAcronym, name, email, nif, phoneNumber,\n academicBackground,Street,PostalCode,Location,Country, departmentID)
activate TeacherServiceImpl #ddfada
TeacherServiceImpl -> ITeacherFactory: createTeacher(teacherAcronym, name, email, nif, phoneNumber,\n academicBackground,Street,PostalCode,Location,Country, departmentID)
activate ITeacherFactory #ddfada
ITeacherFactory -> TeacherFactoryImpl: createTeacher(teacherAcronym, name, email, nif, phoneNumber,\n academicBackground,Street,PostalCode,Location,Country, departmentID)
activate TeacherFactoryImpl #ddfada
TeacherFactoryImpl ->Teacher **: createTeacher (acronym,name,email,nif,phoneNumber,academicBackground,street,postalCode,location,country,date,category,workingPercentage,department)
activate Teacher
Teacher --> TeacherFactoryImpl :t1
deactivate Teacher
TeacherFactoryImpl --> ITeacherFactory : t1
deactivate TeacherFactoryImpl
ITeacherFactory --> TeacherServiceImpl : t1
deactivate ITeacherFactory

TeacherServiceImpl -> TeacherMapper : toDataModel(t1)
activate TeacherMapper
TeacherMapper -> TeacherDataModel** :toDataModel(t1)
activate TeacherDataModel
TeacherDataModel --> TeacherMapper: tdm1
deactivate TeacherDataModel
TeacherMapper -> ITeacherRepository: add()
activate ITeacherRepository
ITeacherRepository -> ITeacherRepositorySpringData: add()
activate ITeacherRepositorySpringData
ITeacherRepositorySpringData -> TeacherRepositorySpringDataImpl: add()
activate TeacherRepositorySpringDataImpl
TeacherRepositorySpringDataImpl-->ITeacherRepositorySpringData :true
deactivate TeacherRepositorySpringDataImpl
ITeacherRepositorySpringData --> ITeacherRepository : true
deactivate ITeacherRepositorySpringData
ITeacherRepository --> TeacherMapper: true
deactivate ITeacherRepository
TeacherMapper --> TeacherServiceImpl: true
deactivate TeacherMapper

TeacherServiceImpl --> ITeacherService: true
deactivate TeacherServiceImpl








ITeacherService --> Controller : true
Controller --> UI: True
UI --> Administrator : Success

@enduml
