@startuml

title US04: \n As an Administrator, I want to register a teacher in the system. \n Process View Level 3
autonumber

skinparam sequence {
    LifelineBorderColor black
    LifelineBackgroundColor LightBlue
    ActorBorderColor black
    ActorBackgroundColor LightGray
    GroupBorderColor #cccccc
    GroupBackgroundColor #f2f2f2
}

actor Administrator
participant ":UI" as UI
participant ":US04_IWantToRegisterATeacherInTheSystemRestController" as RC
participant ":DepartmentRestController" as DRC
participant ":IDepartmentService" as DS
participant ":IDepartmentRepository" as DR
participant ":IDepartmentAssembler" as DA
participant ":ITeacherService" as TS
participant ":ITeacherRepository" as TR
participant ":ITeacherAssembler" as TA
participant IDepartmentRepository
participant ":ITeacherFactory" as TF


group Human Interaction
Administrator -> UI ++: Request to register Teacher.
UI --> Administrator --: Prompt: "Enter Teacher's Information"
Administrator -> UI ++: Input: "teacherID, name, email, NIF, countryCode, \n phoneNumber, academicBackground, \n street, postalCode, location, country"
end group

group HTTP Request
UI -> DRC ++: (GET) /departments
end group

group Application Service Invocation
DRC -> DS ++: findDepartments(searchTerm)
DS -> DR ++: findDepartments(searchTerm)

DR --> DS --: List<Department>

DS --> DRC --: List<Department>

DRC -> DA ++: toDto(Department)

DA --> DRC --: DepartmentDto
end group
group HTTP Response
DRC --> UI--:  200 OK (List<DepartmentDto>)
end group

group Human Interaction
UI --> Administrator --: Display Department List. \n Prompt: "Select one Department.
Administrator -> UI ++: Select Department
end group

group HTTP Request
UI -> RC ++: POST /api/teacher
end group

group Application Service Invocation
RC -> TA ++: toDomain(TeacherDTO)

TA --> RC --: teacherAcronym, name, email, nif, phoneNumber,\n academicBackground,street,postalcode,location,country, departmentID



RC -> TS: registerATeacherInTheSystem(TeacherDTO)
activate TS #E1F5FE


TS -> IDepartmentRepository: isDepartmentInDepartmentRepository(departmentID)
activate IDepartmentRepository #E1F5FE
ref over IDepartmentRepository
    Convert Domain to DataModel
end ref
IDepartmentRepository -> IDepartmentRepository:containsOfIdentity(DepartmentID)

IDepartmentRepository --> TS : True
deactivate IDepartmentRepository
TS -> TF :createTeacher(teacherID, name, email, nif, phoneNumber, \n academicBackground, street, postalCode, location, country, departmentID)
activate TF #E1F5FE
TF --> TS : Teacher
deactivate TF

TS -> TR : existsByTeacherIdOrNif(teacher.identity(), nif)
activate TR #E1F5FE
TR --> TS : False
deactivate TR
TS -> TR : save(teacher)
activate TR #E1F5FE
TR --> TS : void
deactivate TR
TS -> RC : True
deactivate TS
end group

RC --> UI: 201 Created
deactivate RC
UI --> Client: Teacher successfully registered!
deactivate UI

@enduml
