@startuml

title US04: As an Administrator, I want to register a teacher in the system.
autonumber

actor Administrator
participant ":UI" as UI
participant ":US04_IWantToRegisterATeacherInTheSystemRestController" as RC
participant ":DepartmentRestController" as DRC
participant ":IDepartmentService" as DS
participant ":IDepartmentRepository" as DR
participant ":IDepartmentAssembler" as DA
participant ":ITeacherService" as TS
participant ":ITeacherRepository" as TR
participant ":ITeacherAssembler" as TA
participant IDepartmentRepository
participant ":ITeacherFactory" as TF


Administrator -> UI: I want to register a teacher.
activate UI #E1F5FE
UI --> Administrator --: What are the Teacher's attributes?
deactivate UI
Administrator -> UI: acronym, name, email, NIF, phoneNumber, \n academicBackground, street, postalCode, \n location, country
activate UI #E1F5FE
UI -> DRC: GET /api/departments?search={searchTerm}
activate DRC #E1F5FE
DRC -> DS: findDepartments(searchTerm)
activate DS #E1F5FE
DS -> DR: findDepartments(searchTerm)
activate DR #E1F5FE
DR --> DS: List<Department>
deactivate DR
DS --> DRC: List<Department>
deactivate DS
DRC -> DA: toDto(Department)
activate DA #E1F5FE
DA --> DRC: DepartmentDto
deactivate DA
DRC --> UI--:  200 OK (List<DepartmentDto>)
deactivate DRC
UI --> Administrator--: Here are the Departments. Select One.
deactivate UI

Administrator -> UI: Select Department
activate UI #E1F5FE
UI -> RC: POST /api/teacher
activate RC #E1F5FE

RC -> TA: toDomain(TeacherDTO)
activate TA #E1F5FE
TA --> RC: teacherAcronym, name, email, nif, phoneNumber,\n academicBackground,street,postalcode,location,country, departmentID
deactivate TA


RC -> TS: registerATeacherInTheSystem(TeacherDTO)
activate TS #E1F5FE


TS -> IDepartmentRepository: isDepartmentInDepartmentRepository(departmentID)
activate IDepartmentRepository #E1F5FE
ref over IDepartmentRepository
    Convert Domain to DataModel
end ref
IDepartmentRepository -> IDepartmentRepository:containsOfIdentity(DepartmentID)

IDepartmentRepository --> TS : True
deactivate IDepartmentRepository
TS -> TF :createTeacher(teacherID, name, email, nif, phoneNumber, \n academicBackground, street, postalCode, location, country, departmentID)
activate TF #E1F5FE
TF --> TS : Teacher
deactivate TF

TS -> TR : existsByTeacherIdOrNif(teacher.identity(), nif)
activate TR #E1F5FE
TR --> TS : False
deactivate TR
TS -> TR : save(teacher)
activate TR #E1F5FE
TR --> TS : void
deactivate TR
TS -> RC : True
deactivate TS

RC --> UI: 201 Created
deactivate RC
UI --> Client: Teacher successfully registered!
deactivate UI

@enduml
