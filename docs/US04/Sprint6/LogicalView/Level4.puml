@startuml
scale 0.8
skinparam ranksep 20
skinparam nodesep 150
skinparam linetype ortho
skinparam classBackgroundColor #E1F5FE

title US04:As an Administrator, i want to register a Teacher in the System.

'===== CONTROLLER =======
class US04_RegisterATeacherInTheSystemController {
    +US04_RegisterATeacherInTheSystemController(teacherService: ITeacherService)
    +configureAccessMethod(accessMethoDTO: AccessMethodRequestDTO): AccessMethodResponseDTO
}


package "Factory"{
class TeacherFactoryImpl #lightblue{
    +createTeacher(TeacherID:TeacherID,\n name:Name, email:Email, nif:NIF,\n phoneNumber:PhoneNumber, academicBackground:AcademicBackground,\n street:Street, postalCode:PostalCode,\n location:Location, country:Country,\n teacherCategory:TeacherCategory,\n department:Department):Teacher
    +createAddress(street:Street,\n postalCode:PostalCode,\n location:Location, country:Country)
}
interface ITeacherFactory #lightblue{
    +createTeacher(acronym:Acronym, TeacherID:TeacherID,\n name:Name, email:Email, nif:NIF,\n phoneNumber:PhoneNumber, academicBackground:AcademicBackground,\n street:Street, postalCode:PostalCode,\n location:Location, country:Country,\n \n departmentAcronym:DepartmentAcronym):Optional<Teacher>
}
}

package "Service"{
class TeacherServiceImpl{
   +registerTeacher(acronym:Acronym, TeacherID:TeacherID,\n name:Name, email:Email, nif:NIF,\n phoneNumber:PhoneNumber, academicBackground:AcademicBackground,\n street:Street, postalCode:PostalCode,\n location:Location, country:Country,\n departmentAcronym:DepartmentAcronym):Optional<Teacher>
 }
 interface ITeacherService{
    +registerTeacher(acronym:Acronym, TeacherID:TeacherID,\n name:Name, email:Email, nif:NIF,\n phoneNumber:PhoneNumber, academicBackground:AcademicBackground,\n street:Street, postalCode:PostalCode,\n location:Location, country:Country,\n departmentAcronym:DepartmentAcronym):boolean
 }
 }

 package "Mapper Aggregates" {
class TeacherMapperImpl{
+ ToDomain(teacherDataModel:TeacherDataModel)Teacher
+toDataModel(teacher:Teacher)TeacherDataModel
}

interface ITeacherMapper{
+ ToDomain(teacherDataModel:TeacherDataModel)Teacher
+toDataModel(teacher:Teacher)TeacherDataModel
}
}

class TeacherIDMapperImpl {
  +toDomain(teacherDataModel) : TeacherID
  +toDataModel(teacher) : TeacherDataModel
}

interface ITeacherIDMapper

package "DataModel" {
class TeacherDataModel{
-_acronym:TeacherAcronym
        -_name:String
        -_email:String
        -_nif:String
        -_street:String
        -_postalCode:PostalCode
        -_location:Location
        -_country:Country
        -_phoneNumber:PhoneNumber
        -_academicBackground:AcademicBackground
        -_departmentID:DepartmentID
}
}
package "Repository"{
class TeacherRepositorySpringDataImpl{
+addTeacher (acronym:String, TeacherID:String,\n name:String, email:String, nif:String,\n phoneNumber:String, academicBackground:String,\n street:String, postalCode:String,\n location:String, country:String,\n \n departmentID:String):Teacher

}

interface IDepartmentRepository #lightblue{
    +departmentExists(department:Department):boolean
    +FindDepartmentByID(departementID:DepartmentID):\n Optional<Department>
}

interface ITeacherRepository #lightblue{
    +save(teacher: Teacher):teacher

}
interface JPARepository{}

interface ITeacherRepositorySpringData{
+save(teacher: Teacher)teacher
+existsByTeacherIdOrNif(TeacherID teacherID, NIF nif) boolean
}
}

'===DTO===

class TeacherRequestDTO <<Record>>{
    - teacherName: String
}
class TeacherResponseDTO <<Record>>{
    - acronym: String
    - name: String
    - email:Email
    -_nif:NIF
    -_street:Street
    -_postalCode:PostalCode
  -_location:Location
  -_country:Country
  -_phoneNumber:PhoneNumber
  -_academicBackground:AcademicBackground
  -_departmentID:DepartmentID
    + getByName(): String
}

package "Teacher Aggregates"  {
    entity "<<Root>>Teacher" #lightblue{
        -_acronym:TeacherAcronym
        -_name:Name
        -_email:Email
        -_nif:NIF
        -_street:Street
        -_postalCode:PostalCode
        -_location:Location
        -_country:Country
        -_phoneNumber:PhoneNumber
        -_academicBackground:AcademicBackground
        -_departmentID:DepartmentID
     }
}

' ======= VALUE OBJECTS =======

class TeacherID <<VO>> {
 -_teacherAcronym : TeacherAcronym
}

class TeacherAcronym <<VO>> {
 -_acronym : String
}

class Name <<VO>> {
 -_name : String
}

class Email <<VO>> {
 -_email : String
}

class NIF <<VO>> {
 -_NIF : String
}

class PhoneNumber <<VO>> {
 -_countryCode : String
 -_phoneNumber : String
}

class Street <<VO>> {
 -_street : String
}

class PostalCode <<VO>> {
 -_postalCode : String
}

class Location <<VO>> {
 -_location : String
}

class Country <<VO>> {
 -_country : String
}

class AcademicBackground <<VO>> {
 -_academicBackground : String
}

class DepartmentID <<VO>> {
 -_acronym : DepartmentAcronym
}


US04_RegisterATeacherInTheSystemController "1"-u->"1..*" ITeacherService
US04_RegisterATeacherInTheSystemController "1"..> "1" TeacherRequestDTO
US04_RegisterATeacherInTheSystemController "1"..> "1" TeacherResponseDTO

ITeacherService <|.."Implements" TeacherServiceImpl
TeacherServiceImpl ..> ITeacherRepository
TeacherServiceImpl ..> IDepartmentRepository

TeacherServiceImpl"1" ..>"1" ITeacherFactory
ITeacherFactory <|..TeacherFactoryImpl
"<<Root>>Teacher" "1"..>"1" TeacherFactoryImpl
ITeacherRepositorySpringData ..|> "extends"JPARepository
TeacherRepositorySpringDataImpl "1"..|> ITeacherRepositorySpringData
ITeacherRepositorySpringData <|.. ITeacherRepository

TeacherRepositorySpringDataImpl"1" ->"*" TeacherDataModel
ITeacherMapper "1"<.. "1"TeacherRepositorySpringDataImpl
ITeacherMapper ..> ITeacherFactory
TeacherMapperImpl ..|> ITeacherMapper
TeacherMapperImpl..>"maps to" TeacherDataModel
TeacherMapperImpl..>"maps to""<<Root>>Teacher"

'Value Object Composition'
"<<Root>>Teacher" "1" --> "_teacherID" TeacherID
"<<Root>>Teacher" "1" --> "_acronym" TeacherAcronym
"<<Root>>Teacher" "1" --> "_name" Name
"<<Root>>Teacher" "1" --> "_email" Email
"<<Root>>Teacher" "1" --> "_nif" NIF
"<<Root>>Teacher" "1" --> "_phoneNumber" PhoneNumber
"<<Root>>Teacher" "1" --> "_academicBackground" AcademicBackground
"<<Root>>Teacher" "1" --> "_street" Street
"<<Root>>Teacher" "1" --> "_postalCode" PostalCode
"<<Root>>Teacher" "1" --> "_location" Location
"<<Root>>Teacher" "1" --> "_country" Country
"<<Root>>Teacher" "1" --> "_departmentID" DepartmentID

TeacherIDMapperImpl "1" --> "1" TeacherID
TeacherMapperImpl "1" ..> "1" TeacherIDMapperImpl
ITeacherIDMapper <|.. "1" TeacherIDMapperImpl : <<implements>>
TeacherRepositorySpringDataImpl "1" ..> "1" TeacherIDMapperImpl

@enduml