@startuml
!pragma layout smetana
'left to right direction

class US04_IWantToRegisterATeacherInTheSystemController{
        +US04_IWantToRegisterATeacherInTheSystemController(TeacherRepository teacherRepository,
        teacherCategoryRepository: TeacherCategoryRepository, departmentRepository: DepartmentRepository)
        +registerATeacherInTheSystem(acronym: String, name: String , email:  String , nif: String, phoneNumber: String,
        academicBackground: String, street: String, postalCode: String, location: String, country: String, date: String,
        category: TeacherCategory, workingPercentage: int, department: Department) : boolean
}

class Department {
    -_acronym:String
    -_name:String
    +Department(departmentAcronym: String, departmentName: String)
    +Department(departmentAcronym: String, departmentName: String, teacherDirector: Teacher)
    +hasSameAcronym(department: Department) : boolean
    +hasSameName(department: Department) : boolean
    +changeDirector(furtherDirector: Teacher) : boolean
    +equals(objToCompare: Object) : boolean
}

class DepartmentRepository {
    +departmentRepository(departmentFactory: DepartmentFactory)
    +registerDepartment(departmentAcronym: String, departmentName: String) : boolean
    +getDepartmentList(): List<Department>
    +departmentExists(department: Department): boolean
    +updateOfDepartmentDirector(department: Department, furtherDirector: Teacher): boolean
}

class TeacherCategory {
    -_name:String
    + TeacherCategory (name:String)
    +getName(): String
    +equals(objToCompare: Object): boolean
    +hashCode(): int
}

class TeacherCategoryRepository {
    +TeacherCategoryRepository()
    +TeacherCategoryRepository(doubleTeacherCategoryFactory: TeacherCategoryFactory)
    +registerTeacherCategory (teacherCategoryName: String) : boolean
    +isTeacherCategoryRegistered(teacherCategory: TeacherCategory) : boolean
    +getTeacherCategoryByName(name: String): Optional<TeacherCategory>
    +getTeacherCategoryList(): List<TeacherCategory>
}

class Teacher {
     -_acronym:String
     -_name:String
     -_email:String
     -_nif:String
     -_phoneNumber:String
     -_academicBackground:String
     +Teacher(acronym: String, name:String, email: String, nif: String, phoneNumber:String,
     academicBackground: String, street: String, postalCode: String, location: String, country: String, date: String, teacherCategory: TeacherCategory, workingPercentage: int, department: Department)
     +hasSameAcronym(teacher: Teacher) : boolean
     +hasSameNif(teacher: Teacher) : boolean
     +isInDepartment(department: Department) : boolean
     +hasThisNif(nif: String): boolean
     +updateWorkingPercentageInTeacherCareerProgression(date: String, workingPercentage: int): boolean
     +updateTeacherCategoryInTeacherCareer(date: String, teacherCategory: TeacherCategory): boolean
}

class TeacherRepository {
    +teacherRepository()
    +registerTeacher(acronym: String, name:String, email: String, nif: String, phoneNumber:String,
    address: Address, teacherCategory: TeacherCategory, department: Department) : boolean
}

class Address {
     -_street:String
     -_postalCode: String
     -_location: String
     -_country: String
     +Address(street: String, postalCode: String, location: String, country: String)
}
US04_IWantToRegisterATeacherInTheSystemController "1" ..> "1  " TeacherRepository
US04_IWantToRegisterATeacherInTheSystemController "1" ..> "1  " TeacherCategoryRepository
US04_IWantToRegisterATeacherInTheSystemController "1" ..> "1" DepartmentRepository
Teacher "1" --> "_address 1 " Address
Teacher "1     " --> "1 _teacherCategory  " TeacherCategory
Teacher "1..*" --> "_department 1" Department
Teacher " * _listOfTeachers" <-- "1    " TeacherRepository
Department "_listOfDepartments *  " <-- "1   " DepartmentRepository
TeacherCategory "  * _listOfTeacherCategories" <-- "1" TeacherCategoryRepository
@enduml
