@startuml
skinparam ranksep 100
skinparam nodesep 100

class US19_CreateCourseEditionController {
    -_programmeEditionRepository: ProgrammeEditionRepository
    -_courseEditionRepository: CourseEditionRepository
    -_programmeRepository: ProgrammeRepository
    +US19_CreateCourseEditionController(programmeEditionRepository: ProgrammeEditionRepository,
    courseEditionRepository: CourseEditionRepository, programmeList: ProgrammeList)
    +getAllProgrammeEditions()
    +getCourseList(programmeEdition: ProgrammeEdition)
}

class ProgrammeRepository {
     +registerProgramme(String : name, String : acronym, int : quantityOfEcts,
     int quantityOfSemesters, int degreeType: DegreeType; Department : department, Teacher programmeDirector)
     +changeProgrammeDirector(Programme programme, Teacher newDirector)
     +getAllProgrammes()
     +getCourseList(programme: Programme)
}

class Programme {
     - name: string
     - acronym: string
     - quantityOfEcts: int
     - quantityOfSemesters: int
     - degreeType: DegreeType
     - department: Department
     - programmeDirector: Teacher
     -StudyPlan: _studyPlan

     + equals()
     + addCourseToProgramme (course: Course)
     + newProgrammeDirector(): boolean
     +enrolStudentInProgramme(Student: student, accessMethod: AccessMethod, amr: AccessMethodRepository)
     +isStudentEnrolled(student: Student)
     +isInDepartment(department: Department)
     +getCourseList()
     +getQuantityOfSemester()
     +getQuantityOfEcts()
}

class ProgrammeEditionRepository {
    +ProgrammeEditionRepository()
    +createProgrammeEdition(programme: Programme, schoolYear: SchoolYear)
    +findProgrammeInProgrammeEdition(programmeEdition: ProgrammeEdition)
    +findProgrammeEditionBySchoolYearAndProgramme(programme: Programme, schoolYear: SchoolYear)
    +getAllProgrammeEditions()
}

class ProgrammeEdition {
    -_programme: Programme
    -_schoolYear: SchoolYear
    +programmeEdition(programme: Programme,schoolYear: SchoolYear)
    +equals(object: Object)
    +findProgrammeInProgrammeEdition()
    +findSchoolYearInProgrammeEdition()
    +isEditionAssociatedToDepartmentAndSchoolYear(department: Department, schoolYear: SchoolYear)
}

class Course {
    -_name: String
    -_acronym: String
    -_quantityCreditsEcts: double
    -_durationCourseInSemester: int
    +Course(name: String, acronym: String, quantityCreditsECTS: double, durationCourseInSemester: int)
    +getQuantityCreditsEcts()
    +getDurationInSemester()
    +getName()
    +getAcronym()
}

class CourseEditionRepository {
    +CourseEditionRepository()
    +createCourseEdition(course: Course, programmeEdition: ProgrammeEdition)
    +isCourseEditionAlreadyInRepository (courseEdition: CourseEdition)
    +findWhichProgrammeEditionBelongsToACourseEdition(courseEdition: CourseEdition)
    +setRucInACourseEdition(CourseEdition: courseEdition,Teacher: ruc)
    +getCourseEditions(): List<CourseEdition>
    +findCourseEditionsByProgrammeEdition(ProgrammeEdition programmeEdition)
}

class CourseEdition {
    -_programmeEdition: ProgrammeEdition
    -_course: Course
    -_ruc: Teacher
    +CourseEdition(programmeEdition: ProgrammeEdition, course: Course)
    +Equals(objectToCompare: Object)
    +setRuc(Teacher: ruc)
    +whatProgrammeEditionBelongsThisCourseEdition ()
}

interface CourseEditionFactory {
    +createCourseEdition(programmeEdition: ProgrammeEdition, course: Course)
}

class CourseEditionFactoryImpl {
    +createCourseEdition(programmeEdition: ProgrammeEdition, course: Course)
}

interface CourseEditionListFactory {
    +newList()
}

class CourseEditionArrayListFactoryImpl {
    +newList()
}





US19_CreateCourseEditionController "1" ..> "1" ProgrammeEditionRepository
US19_CreateCourseEditionController "1" ..> "1" CourseEditionRepository
US19_CreateCourseEditionController "1" ..> "1" CourseInStudyPlanRepository
CourseEditionRepository "1" ..> "1" CourseEditionFactory
CourseEditionRepository "1" --> "_courseEditions" CourseEdition
ProgrammeEditionRepository "1" --> "_programmeEditions" ProgrammeEdition
ProgrammeRepository "1" --> "_programmes" Programme
Programme "1" --> "_courses" Course
CourseEdition "*" --> "1" ProgrammeEdition
CourseEdition "1..*" --> "1..*" Course
CourseEdition "0..*" ..> "1" CourseEditionFactory
CourseEditionFactoryImpl "1" ..|> "1" CourseEditionFactory
CourseEditionListFactory "1" <.. "1" CourseEditionRepository
CourseEditionArrayListFactoryImpl "1" ..|> "1" CourseEditionListFactory




@enduml
