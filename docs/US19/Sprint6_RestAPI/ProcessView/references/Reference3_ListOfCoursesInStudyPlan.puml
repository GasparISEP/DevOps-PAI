@startuml
title Detailed Flow: Retrieve Courses in Study Plan by Programme ID \n(GET /course-in-study-plan/{name}/{acronym})
skinparam sequence {
    LifeLineBorderColor Grey
    LifeLineBackgroundColor HoneyDew
}
skinparam defaultTextAlignment center
skinparam shadowing true
participant "<<component>>\n:Router" as Router #E1F5FE
participant "<<component>>\n:CourseInStudyPlanRestController\n(REST Controller)" as Controller #E1F5FE
participant "<<component>>\n:IStudyPlanService\n(Service)" as SPService #E1F5FE
participant "<<component>>\n:ICourseInStudyPlanService\n(Service)" as CSPService #E1F5FE
participant "<<component>>\n:IStudyPlanRepository\n(Repository)" as StudyPlanRepo #E1F5FE
participant "<<component>>\n:ICourseInStudyPlanRepository\n(Repository)" as CourseInSPRepo #E1F5FE
participant "<<component>>\n:ICourseInStudyPlanAssembler\n(Assembler)" as Assembler #E1F5FE
database "Database" as DB #E1F5FE

-> Router: GET /course-in-study-plan/{name}/{acronym}
activate Router

Router -> Controller: getCoursesInStudyPlanByProgrammeID(name, acronym)
activate Controller

note right: Controller creates ProgrammeID VO from name and acronym

Controller -> SPService: getLatestStudyPlanIDByProgrammeID(programmeID)
activate SPService

SPService -> StudyPlanRepo: findAll()
activate StudyPlanRepo

StudyPlanRepo -> DB: SELECT * FROM study_plans
activate DB
DB --> StudyPlanRepo: List<StudyPlanDataModel>
deactivate DB

StudyPlanRepo --> SPService: List<StudyPlan>
deactivate StudyPlanRepo

note over SPService #EEEEEE
Filters StudyPlans by ProgrammeID
Returns the latest (most recent) one
end note

SPService --> Controller: latestStudyPlanID
deactivate SPService

Controller -> CSPService: getCourseSummariesByStudyPlanID(latestStudyPlanID)
activate CSPService

CSPService -> CourseInSPRepo: findAll()
activate CourseInSPRepo

CourseInSPRepo -> DB: SELECT * FROM courses_in_study_plan
activate DB
DB --> CourseInSPRepo: List<CourseInStudyPlanDataModel>
deactivate DB

CourseInSPRepo --> CSPService: List<CourseInStudyPlan>
deactivate CourseInSPRepo

note over CSPService #EEEEEE
Filters CourseInStudyPlan by StudyPlanID
Converts to CourseInStudyPlanServiceDTO via assembler
end note

loop for each filtered CourseInStudyPlan
    CSPService -> Assembler: toServiceDTO(courseInStudyPlan)
    activate Assembler
    Assembler --> CSPService: CourseInStudyPlanServiceDTO
    deactivate Assembler
end

CSPService --> Controller: List<CourseInStudyPlanServiceDTO>
deactivate CSPService

note over Controller #EEEEEE
Converts service DTOs to response DTOs via assembler
end note

loop for each CourseInStudyPlanServiceDTO
    Controller -> Assembler: toDTO(serviceDTO)
    activate Assembler
    Assembler --> Controller: CourseInStudyPlanResponseDTO
    deactivate Assembler
end

Controller --> Router: 200 OK + List<CourseInStudyPlanResponseDTO> (JSON)
deactivate Controller

<-- Router: Response
deactivate Router

@enduml
