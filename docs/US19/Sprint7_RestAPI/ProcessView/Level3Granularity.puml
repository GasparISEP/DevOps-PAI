@startuml
title: US19: As an ASC, I want to create a course edition\n(Process View - Level 3 - Backend)
autonumber

skinparam {
  ActivityPadding 2
  ActivityMargin 2
  BoxPadding 2
}
skinparam sequence {
    LifeLineBorderColor Grey
    LifeLineBackgroundColor HoneyDew
}
skinparam defaultTextAlignment center
skinparam shadowing true

participant "<<component>>\n:Router" as Router #E1F5FE
participant "<<component>>\n:Controller" as Controller #E1F5FE
participant "<<component>>\n:Service" as Service #E1F5FE
participant "<<component>>\n:Domain" as Domain #E1F5FE
participant "<<component>>\n:Repository" as Repository #E1F5FE


[o-> Router: POST /course-editions + body {...}
activate Router
note over Router #EEEEEE
Spring converts JSON into
CourseEditionRequestDTO
end note
Router -> Controller: createCourseEdition(requestDTO)
activate Controller

note over Controller #EEEEEE
Controller calls assembler.toCommand()
to convert to CreateCourseEditionCommand
end note



Controller -> Service: createCourseEdition(command)
activate Service


Service -> Domain: createCourseEditionToDomain\n(courseInStudyPlanID,\n programmeEditionID)
activate Domain
Domain --> Service: CourseEdition
deactivate Domain
Service -> Domain: identity()
activate Domain
Domain --> Service: courseEditionID
deactivate Domain

Service -> Repository: containsOfIdentity(courseEditionID)
activate Repository
Repository --> Service: false
deactivate Repository

Service -> Repository: save(courseEdition)
activate Repository

Repository ->o] : INSERT INTO course_editions (...)
Repository <--o]: courseEdition saved

Repository --> Service: courseEdition saved
deactivate Repository




    Service --> Controller: courseEditionResponseDTO
    deactivate Service


    Controller --> Router: 201 Created + body {courseEditionResponseDTO + hypermedia}



deactivate Controller

[o<-- Router: 201 Created + body {courseEditionResponseDTO + hypermedia}
deactivate Router
@enduml