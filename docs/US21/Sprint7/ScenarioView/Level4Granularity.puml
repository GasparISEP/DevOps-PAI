@startuml US21

title US21: As an ASC, I want to get the number of students enrolled in a programme edition\n(Scenario View - Level 4 Full Backend Flow)

participant Router as ":Router"<<Component>> #fff2cc
participant ProgrammeEditionRestController as ":ProgrammeEditionRESTController"<<Component>> #d0e0e3
participant ProgrammeEditionService as ":IProgrammeEditionService"<<Component>> #d9ead3
participant ProgrammeEditionRepository as ":IProgrammeEditionRepository"<<Component>> #fce5cd
participant ProgrammeEditionEnrolmentSpringData as ":IProgrammeEditionEnrolmentRepositorySpringData"<<Component>> #fce5cd
participant ":IProgrammeEditionEnrolmentMapper"<<Component>> #ead1dc
participant ":IProgrammeEditionEnrolmentFactory"<<Component>> #d9d2e9
participant ProgrammeEditionIDMapper as ":IProgrammeEditionIDMapper"<<Component>>
autonumber

skinparam defaultTextAlignment center
skinparam shadowing true
skinparam sequence {
    ActorBorderColor black
    ParticipantBorderColor black
    LifeLineBorderColor black
    LifeLineBackgroundColor #ffffff
}

-> Router  : I want to get the number of students\n enrolled in a programme edition!
activate Router

note over Router: The conversion from JSON to DTO is done\n automatically through the Spring Boot Framework

Router -> ProgrammeEditionRestController ++: GET/programme-editions {}

ProgrammeEditionRestController -> ProgrammeEditionService ++: getAllProgrammeEditions()

ProgrammeEditionService -> ProgrammeEditionRepository: findAll()

activate ProgrammeEditionRepository
ProgrammeEditionRepository --> ProgrammeEditionService --: List<programmeEdition>\n programmeEditions

ref over ProgrammeEditionService: Conversion from Domain to ServiceDTO

ProgrammeEditionService --> ProgrammeEditionRestController --: List<programmeEditionServiceDTO>\n programmeEditionsServiceDTO

ref over ProgrammeEditionRestController: Conversion from ServiceDTO to ResponseDTO

ProgrammeEditionRestController --> Router --: List<programmeEditionResponseDTO>\n programmeEditionsResponseDTO

note over Router: The conversion from DTO to JSON is done\n automatically through the Spring Boot Framework

<--Router : Which Programme Edition?
deactivate Router

 -> Router : This Programme Edition!
 activate Router

note over Router: The conversion from JSON to DTO is done\n automatically through the Spring Boot Framework

Router -> ProgrammeEditionRestController  : GET/programme-editions/\n{id}/{schoolYearID}/students
activate ProgrammeEditionRestController

ProgrammeEditionRestController -> ProgrammeEditionService ++: countTotalNumberOfStudentsInAProgrammeEdition\n(programmeEditionRequestDTO)

ref over ProgrammeEditionService: Conversion from RequestDTO to ServiceDTO

ProgrammeEditionService -> ProgrammeEditionEnrolmentSpringData ++: getAllProgrammeEditionsEnrolmentByProgrammeEditionID\n(programmeEdition)

ProgrammeEditionEnrolmentSpringData -> ProgrammeEditionIDMapper ++: toDataModel(programmeEditionId)

ProgrammeEditionIDMapper --> ProgrammeEditionEnrolmentSpringData --: programmeEditionIdDataModel

ProgrammeEditionEnrolmentSpringData -> ProgrammeEditionEnrolmentSpringData : findProgrammeEditionIDByProgrammeIDAndSchoolYearID\n(programmeEditionDataModel)

loop for each ProgrammeEditionEnrolmentDataModel
    ProgrammeEditionEnrolmentSpringData -> ":IProgrammeEditionEnrolmentMapper" ++: toDomain(dataModel)
    ":IProgrammeEditionEnrolmentMapper" -> ":IProgrammeEditionEnrolmentFactory"++: newProgrammeEditionEnrolment\n(studentId, programmeEditionId)
    create "pEE1:ProgrammeEditionEnrolment" as ProgrammeEditionEnrolment1
    ":IProgrammeEditionEnrolmentFactory" -> ProgrammeEditionEnrolment1: <create>
    ":IProgrammeEditionEnrolmentFactory" --> ":IProgrammeEditionEnrolmentMapper": programmeEditionEnrolment\n(studentId, programmeEditionId,\n programmeEditionEnrolmentGeneratedID)
    deactivate ":IProgrammeEditionEnrolmentFactory"
    ":IProgrammeEditionEnrolmentMapper" --> ProgrammeEditionEnrolmentSpringData --: Optional<programmeEditionEnrolment>
    ProgrammeEditionEnrolmentSpringData -> ProgrammeEditionEnrolmentSpringData: add to List<ProgrammeEditionEnrolment>
end

ProgrammeEditionEnrolmentSpringData --> ProgrammeEditionService --: List<ProgrammeEditionEnrolment>\n programmeEditionEnrolments

ProgrammeEditionService --> ProgrammeEditionService: Convert from List to Size of List

ProgrammeEditionService --> ProgrammeEditionRestController --: int
ProgrammeEditionRestController --> Router --: int

<--Router: Total of Students Enrolled\n in the specified ProgrammeEdition
deactivate Router

@enduml  make the participants/actors have diferent colours