@startuml
title Register Study Plan (Backend - Granularity 3)
skinparam sequenceLifeLineBackgroundColor lightblue
skinparam sequenceMessageAlign center
autonumber

participant ":ProgrammeRestController" as RestController <<controller>> #82CFFD
participant ":StudyPlanService" as Service <<service>> #F6CBA5
participant ":Domain" as Domain <<domain>> #C4E29A
participant ":ProgrammeSpringDataRepository" as ProgrammeRepository <<repository>> #F6F1E7
participant ":DegreeTypeSpringDataRepository" as DegreeTypeRepository <<repository>> #F6F1E7
participant ":StudyPlanSpringDataRepository" as Repository <<repository>> #F6F1E7


-> RestController: **(POST) registerStudyPlan**\n(programmeName, programmeAcronym, startDate)
activate RestController
RestController -> Service: **registerStudyPlan**(studyPlanCommand)
activate Service
Service -> ProgrammeRepository ++: **ofIdentity**(programmeID)
ProgrammeRepository -> : **findById**(programmeIDDM)
ProgrammeRepository <-- : programmeDM
ProgrammeRepository --> Service --: programme

Service -> DegreeTypeRepository ++: **ofIdentity**(degreeTypeId)
DegreeTypeRepository -> : **findById**(degreeTypeIdDM)
DegreeTypeRepository <-- : degreeTypeDM
DegreeTypeRepository --> Service --: degreeType
Service -> Domain ++: **programme.getQuantSemesters**()
Domain --> Service --: quantityOfSemesters
Service -> Domain ++: **degreeType.getMaxEcts()**
Domain --> Service --: maxEcts

Service -> domain: createStudyPlan(programmeID, startDate, quantityOfSemesters, maxEcts)
activate domain
domain --> Service: studyPlan1
deactivate domain
|||
Service -> Repository: save(studyPlan)
activate Repository
Repository -> : findById(degreeTypeIdDM)
Repository <-- : degreeTypeIdDM
Repository --> Service: degreeType
deactivate Repository
|||
Service -> Domain: createStudyPlan(programmeID, startDate,\ndurationInYears, quantityOfEcts)
activate Domain
Domain --> Service: studyPlan
deactivate Domain
|||
Service -> Repository: save(studyPlan)
activate Repository
Repository -> : save(studyPlanDM)
Repository <-- : True
Repository --> Service: studyPlan
deactivate Repository
|||
Service --> RestController: StudyPlanDTO
deactivate Service
<-- RestController: 201 Created \n+ \nStudyPlanResponseDTO\t
deactivate RestController
note left RestController
  Send as
  StudyPlanResponseDTO,
  Converted to JSON
end note











|||
ref over StudyPlanRepository
       \t\t\t\t **Save Study Plan in Database**:
    \t \t \t Convert domain object to
    \t\t\t\t     DataModel and persist using JPA\t

end ref

StudyPlanRepository --> StudyPlanService: studyPlan
deactivate StudyPlanRepository
|||
ref over StudyPlanService
  \t\t    **Convert Study Plan to DTO**

end ref
StudyPlanService --> RestController: studyPlanDTO1
deactivate StudyPlanService
|||
ref over RestController
  \t\t\t    **Convert DTO to ResponseDTO**\t

end ref
<-- RestController: 201 Created \n+ \nstudyPlanResponseDTO1\t
deactivate RestController
note left RestController
  Send as
  ProgrammeStudyPlanResponseDTO,
  Converted to JSON
end note

@enduml