@startuml
title US08: I want to register a Student in the system


class US08_IWantToRegisterAStudentInTheSystemController {
    + registerStudent(uniqueNumber : String, name : String, NIF : String, phone : String, email : String, address : Address) : boolean
}

class StudentRepository {
    - _studentFactoryImpl : IStudentFactory
    - _students : List<Student>
    + registerStudent(uniqueNumber : String, name : String, NIF : String, phone : String, email : String, address : Address) : boolean
    + getStudentByUniqueNumber(uniqueNumber : String) : Optional<Student>
}

package "Student Aggregate" {
    class Student <<Root>> <<Entity>> {
        - StudentID : StudentID
        - _name : Name
        - _NIF : NIF
        - _phone : Phone
        - _email : Email
        - _address : Address
        - _institutionalEmail : InstitutionalEmail
        + hasSameUniqueNumber(student : Student) : boolean
        + hasSameNIF(student : Student) : boolean
        + getUniqueNumber() : String
        + hasThisUniqueNumber(uniqueNumber : String) : boolean
    }

    class Address <<Value Object>> {
        - _street : Street
        - _postalCode : PostalCode
        - _location : Location
        - _country : Country
        + getStreet() : String
        + getPostalCode() : String
        + getLocation() : String
        + getCountry() : String
    }

    class StudentID <<Value Object>> {
        -_uniqueNumber : int
        -_NIF : String
        +StudentID()
        +areIdentifiersValid()
    }

    class Name <<Value Object>> {
        -_name : String
        +Name()
        +isNameValid
    }

    class NIF <<Value Object>> {
        -_NIF : String
        +NIF()
        +isNIFInvalid()
    }

    class Phone <<Value Object>> {
        -_phone : String
        + Phone()
        +isPhoneNumberValid
    }

    class Email <<Value Object>> {
        -_email : String
        +Email()
    }

    class InstitutionalEmail <<Value Object>> {
        -_institutionalEmail : String
        + InstitutionalEmail()
        + generateInstitutionalEmail(uniqueNumber)
    }

    class Street <<Value Object>> {
        -_street
        +validStreet
    }

    class PostalCode <<Value Object>> {
        -_postalCode
        +validPostalCode
    }

    class Location <<Value Object>> {
        -_location
        +validLocation
    }

    class Country <<Value Object>> {
        -_country
        +validCountry
    }
}

interface IStudentFactory <<Interface>> {
    + newStudent(uniqueNumber : String, name : String, NIF : String, phone : String, email : String, address : Address) : Student
}

class StudentFactoryImpl {
    + newStudent(uniqueNumber : String, name : String, NIF : String, phone : String, email : String, address : Address) : Student
}

interface IStudentListFactory <<Interface>> {
    + newArrayList() : List<Student>
}

class StudentListFactoryImpl {
    + newArrayList() : List<Student>
}

interface IAddressFactory <<Interface>> {
    + createAddress(street : String, postalCode : String, location : String, country : String) : Address
}

class AddressFactoryImpl {
    + createAddress(street : String, postalCode : String, location : String, country : String) : Address
}

interface List<Student> <<Interface>> {}

interface IStudentRepository <<Interface>> {}


US08_IWantToRegisterAStudentInTheSystemController "1" ---> "1 " StudentRepository
StudentRepository "1" ..> "1" IStudentFactory
StudentRepository "1" ---> "_students\n*" Student
StudentRepository "1" ..> "1" IStudentListFactory
IStudentListFactory "1 " ..> "1  " List: <<create>>
Student "1" --> "1  " Address
StudentFactoryImpl "*" ..|> "1     " IStudentFactory
StudentListFactoryImpl "*" ..|> "1     " IStudentListFactory
AddressFactoryImpl "*" ..|> "1  " IAddressFactory
IAddressFactory "1" .l.> "1" Address: <<create>>
IStudentFactory "1" ..> "1" Student: <<create>>
Student "*" ----> "1" StudentID
Student "*" ----> "1" Name
Student "*" ----> "1  " Email
Student "*" ----> "1   " InstitutionalEmail
Student "*" ----> "1 " Phone
Address "*" ----> "1" Street
Address "*" ----> "1" PostalCode
Address "*" ----> "1" Location
Address "*" ----> "1" Country

@enduml