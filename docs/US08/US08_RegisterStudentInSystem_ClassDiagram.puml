@startuml

class US08_IWantToRegisterAStudentInTheSystemController {
    + registerStudent(uniqueNumber : String, name : String, NIF : String, phone : String, email : String, address : Address) : boolean
}

class StudentRepository {
    - _studentFactoryImpl : StudentFactory
    - _students : List<Student>
    + registerStudent(uniqueNumber : String, name : String, NIF : String, phone : String, email : String, address : Address) : boolean
    + getStudentByUniqueNumber(uniqueNumber : String) : Optional<Student>
}

class Student {
    - _uniqueNumber : String
    - _name : String
    - _NIF : String
    - _phone : String
    - _email : String
    - _address : Address
    - _institutionalEmail : String
    + hasSameUniqueNumber(student : Student) : boolean
    + hasSameNIF(student : Student) : boolean
    + getUniqueNumber() : String
    + hasThisUniqueNumber(uniqueNumber : String) : boolean
}

interface StudentFactory {
    + newStudent(uniqueNumber : String, name : String, NIF : String, phone : String, email : String, address : Address) : Student
}

class StudentFactoryImpl {
    + newStudent(uniqueNumber : String, name : String, NIF : String, phone : String, email : String, address : Address) : Student
}

interface StudentListFactory {
    + newArrayList() : List<Student>
}

class StudentListFactoryImpl {
    + newArrayList() : List<Student>
}

class Address {
    - _street : String
    - _postalCode : String
    - _location : String
    - _country : String
    + getStreet() : String
    + getPostalCode() : String
    + getLocation() : String
    + getCountry() : String
}

interface AddressFactory {
    + createAddress(street : String, postalCode : String, location : String, country : String) : Address
}

class AddressFactoryImpl {
    + createAddress(street : String, postalCode : String, location : String, country : String) : Address
}

interface List<Student> <<interface>> {}

US08_IWantToRegisterAStudentInTheSystemController "1" ---> "1 " StudentRepository
StudentRepository "1" ..> "1" StudentFactory
StudentRepository "1" ---> "List<student>\n*" Student
StudentRepository "1" ..> "1" StudentListFactory
StudentListFactory "1 " ..> "1  " List: <<create>>
Student "1" --> "1  " Address
StudentFactoryImpl "*" ..|> "1     " StudentFactory
StudentListFactoryImpl "*" ..|> "1     " StudentListFactory
AddressFactoryImpl "*" ..|> "1  " AddressFactory
AddressFactory "1" .l.> "1" Address: <<create>>
StudentFactory "1" ..> "1" Student: <<create>>
@enduml