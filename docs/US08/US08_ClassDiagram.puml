@startuml
title US08: I want to register a Student in the system


class US08_IWantToRegisterAStudentInTheSystemController {
    + registerStudent(studentID : StudentID, name : Name, NIF : NIF, phone : Phone, email : Email, address : Address) : boolean
}

class StudentRepository {
    - _studentFactoryImpl : IStudentFactory
    - _students : List<Student>
    + registerStudent(studentID : StudentID, name : Name, NIF : NIF, phone : Phone, email : Email, address : Address) : boolean
    + getStudentByID(studentID : StudentID) : Optional<Student>
}

package "Student Aggregate" {
    class Student <<Root>> <<Entity>> {
        - StudentID : StudentID
        - _name : Name
        - _NIF : NIF
        - _phone : Phone
        - _email : Email
        - _address : Address
        - _institutionalEmail : InstitutionalEmail
        + hasSameUniqueNumber(student : Student) : boolean
        + hasSameNIF(student : Student) : boolean
        + getUniqueNumber() : String
        + hasThisUniqueNumber(uniqueNumber : String) : boolean
    }
}

package "Address Aggregate" {
    class Address <<Root>> <<Value Object>> {
        - _street : Street
        - _postalCode : PostalCode
        - _location : Location
        - _country : Country
        + getStreet() : Street
        + getPostalCode() : PostalCode
        + getLocation() : Location
        + getCountry() : Country
    }
}

class StudentID <<Value Object>> {
    -_uniqueNumber : int
    + StudentID(uniqueNumber : int)
    + isUniqueNumberValid(uniqueNumber)
    + getUniqueNumber()
}

class Name <<Value Object>> {
    -_name : String
    + Name(name : String)
    + isNameValid(name)
}

class NIF <<Value Object>> {
    -_NIF : String
    + NIF(NIF : String)
    + isNIFInvalid(NIF)
}

class Phone <<Value Object>> {
    -_phone : String
    + Phone(phone : String)
    + isPhoneNumberValid
}

class Email <<Value Object>> {
    -_email : String
    + Email(email : String)
}

class InstitutionalEmail <<Value Object>> {
    -_institutionalEmail : String
    + InstitutionalEmail(institutionalEmail : String)
    + generateInstitutionalEmail(uniqueNumber)
}

class Street <<Value Object>> {
    -_street : String
    + Street(street : String)
    + validStreet
}

class PostalCode <<Value Object>> {
    -_postalCode : String
    + PostalCode(postalCode : String)
    + validPostalCode
}

class Location <<Value Object>> {
    -_location : String
    + Location(location : String)
    + validLocation()
}

class Country <<Value Object>> {
    -_country : String
    + Country(country : String)
    + validCountry()
}

interface IStudentFactory <<Interface>> {
    + newStudent(StudentID : StudentID, name : Name, NIF : Name, phone : Phone, email : Email, street : Street, postalCode : PostalCode, location : Location, country : Country) : Student
}

class StudentFactoryImpl {
    + newStudent(uniqueNumber : String, name : String, NIF : String, phone : String, email : String, street : Street, postalCode : PostalCode, location : Location, country : Country) : Student
}

interface IStudentListFactory <<Interface>> {
    + newArrayList() : List<Student>
}

class StudentListFactoryImpl {
    + newArrayList() : List<Student>
}

interface IAddressFactory <<Interface>> {
    + createAddress(street : Street, postalCode : PostalCode, location : Location, country : Country) : Address
}

class AddressFactoryImpl {
    + createAddress(street : Street, postalCode : PostalCode, location : Location, country : Country) : Address
}

class List<Student> <<Interface>> {}

interface IStudentRepository <<Interface>> {
    +registerStudent
    +isStudentRegistered
    +getStudentByID
}


US08_IWantToRegisterAStudentInTheSystemController "1" ---> "1 " StudentRepository
StudentRepository "1" ..> "1" IStudentFactory
StudentRepository "1" ---> "_students\n*" Student
StudentRepository "1" ..> "1" IStudentListFactory
IStudentListFactory "1 " ..> "1  " List: <<create>>
Student "1" --> "1" Address
StudentFactoryImpl "*" ..|> "1     " IStudentFactory
StudentListFactoryImpl "*" ..|> "1     " IStudentListFactory
AddressFactoryImpl "*" ..|> "1  " IAddressFactory
IAddressFactory "1" .l.> "1" Address: <<create>>
IStudentFactory "1" ..> "1" Student: <<create>>
IStudentFactory "1" ..> "1" IAddressFactory
StudentRepository ..|> IStudentRepository
Student "*" ----> "1" StudentID
Student "*" ----> "1" Name
Student "\n *" ----> "1  " Email
Student "\n *" ----> "1   " InstitutionalEmail
Student "\n *" ----> "1 " Phone
Student "\n *" ----> "1 " NIF
Address "\n *" ----> "1" Street
Address "\n *" ----> "1" PostalCode
Address "\n *" ----> "1" Location
Address "\n *" ----> "1" Country

@enduml