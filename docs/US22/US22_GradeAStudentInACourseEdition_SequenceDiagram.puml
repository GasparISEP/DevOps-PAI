@startuml
actor RUC
participant ":UI" as UI
participant ":US22_iWantToGradeAStudentInACourseEditionController" as ctr
participant "g1:Grade «Value Object»" as G
participant "LocalDate «ValueObject»" as D
participant "StudentID «ValueObject»" as S
participant "CourseEditionID «ValueObject»" as CE
participant ":CourseEditionEnrolmentRepository" as CEER
participant ":GradeStudentRepository" as GR
participant ":GradeStudentFactory" as GSF


participant "gs1:StudentGrade" as GS

autonumber

RUC -> UI ++ #application: I want to grade a Student in a Course Edition
UI --> RUC --: Grade, Date, CourseEdition, Student?
RUC -> UI ++ #application: Grade, Date, CourseEdition, Student!
UI -> ctr ++ #application : IWantToGradeStudent (Grade, Date, Student, CourseEdition)
create G
ctr -> G ++ #application : <Create> new(grade)
G -> G : isGradeValid()
G -> ctr :  gradeVO1
deactivate G
create D
ctr -> D ++ #application : <Create> new(Date)
D -> D : isDateValid()
D --> ctr : dateVO1
deactivate D
create S
ctr -> S ++ #application : <Create> new(StudentID)
S -> S : isGradeValid()
S -> ctr :  studentIdVO1
deactivate S
create CE
ctr -> CE ++ #application : <Create> new(CourseEditionID)
CE -> CE : isGradeValid()
CE -> ctr :  ceIdVO1
deactivate CE

ctr -> CEER ++ #application : isStudentEnrolledInCourseEdition (studentIdVO1, ceIdVO1)
CEER --> ctr -- : true


ctr -> GR ++ #application : addGradeToStudent (gradeVO1,dateVO1,studentIdVO1,ceIdVO1)
GR -> GR : !hasStudentAlreadyGradeAtThisCourseEdition(studentIdVO1,ceIdVO1)
GR -> GSF ++ #application : newStudentGrade (gradeVO1,dateVO1,studentIdVO1,ceIdVO1)

create GS
GSF -> GS ++ #application : <Create> (gradeVO1,dateVO1,studentIdVO1,ceIdVO1)
GS --> GSF -- : true
GSF --> GR -- : true


GR -> GR : addGrade(true)
GR --> ctr --: true
ctr --> UI --: true
UI --> RUC --: Succeed

@enduml