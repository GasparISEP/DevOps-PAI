@startuml
autonumber

skinparam sequence {
    LifelineBorderColor black
    LifelineBackgroundColor LightBlue
    ActorBorderColor black
    ActorBackgroundColor LightGray
}

title As a RUC, I want to grade a Student in a Course Edition \n Process View â€“ Level 3 (HATEOAS + Persistence with Spring Data JPA)

actor "RUC" as RUC
participant ":Frontend" as FE
participant ":Router" as Router
participant ":CourseEditionRestController" as Controller
participant ":GradeAStudentServiceImpl" as Service
participant ":StudentGradeRepositorySpringDataImpl" as RepositoryAdapter
participant ":IStudentGradeRepositorySpringData" as SpringDataRepo
database "Database" as DB

RUC -> FE ++ : Request to grade a student
FE --> RUC -- : Request grading data
RUC -> FE ++ : Enter grading data

FE -> Router ++ : HTTP POST /courseeditions/studentgrades/register \n with GradeAStudentRequestDTO
Router -> Controller ++ : gradeAStudent(GradeAStudentRequestDTO)

Controller -> Service ++ : gradeAStudent(GradeAStudentCommand)

Service -> RepositoryAdapter ++ : validate constraints \n (isEnrolled, isDateWithinSchoolYear, notAlreadyGraded)
RepositoryAdapter --> Service -- : validation ok

Service -> Service ++ : create StudentGrade \n via factory
Service --> Service -- : new StudentGrade

Service -> RepositoryAdapter ++ : save(StudentGrade)
RepositoryAdapter -> SpringDataRepo ++ : save(StudentGradeDM)
SpringDataRepo -> DB ++ : INSERT INTO student_grades
DB --> SpringDataRepo -- : persisted
SpringDataRepo --> RepositoryAdapter -- : StudentGradeDM
RepositoryAdapter --> Service -- : StudentGrade

Service --> Controller -- : GradeAStudentResponseDTO

Controller --> Router -- : Response 201 Created + \n EntityModel<GradeAStudentResponseDTO> + HATEOAS (_links: self, courseEdition, student)
Router --> FE -- : Response 201 Created + entity model
FE --> RUC -- : Student graded successfully!

@enduml
