@startuml
title As a RUC, I want to grade a Student \n in a Course Edition (Process View L4 â€“ Code View with HATEOAS)

actor RUC

participant "CourseEditionRestController" as controller <<@RestController>> #lightblue
participant "GradeAStudentServiceImpl" as service <<@Service>> #lightyellow
participant "StudentGradeFactoryImpl" as factory <<@Component>> #lightgreen
participant "StudentGradeRepositorySpringDataImpl" as repoAdapter <<@Repository>> #thistle
participant "StudentGradeMapperImpl" as mapper <<@Component>> #mistyrose
participant "StudentGrade" as domain <<Aggregate>> #wheat
participant "StudentGradeDM" as dataModel <<@Entity>> #lightgray
participant "StudentGradeRepresentationModelAssembler" as assembler <<@Component>> #pink
database "H2 Database" as db

RUC -> controller : POST /courseeditions/studentgrades/register \n (GradeAStudentRequestDTO)
activate controller

controller -> service : gradeAStudent(GradeAStudentCommand)
activate service

service -> repoAdapter : containsOfIdentity(StudentGradeID)
repoAdapter -> db : SELECT * FROM student_grade WHERE id = ...
db --> repoAdapter : Optional<StudentGradeDM>

service -> factory : newGradeStudent(...)
activate factory
factory --> service : StudentGrade
deactivate factory

service -> repoAdapter : save(StudentGrade)
activate repoAdapter

repoAdapter -> mapper : toDataModel(StudentGrade)
mapper --> repoAdapter : StudentGradeDM

repoAdapter -> db : INSERT INTO student_grade
db --> repoAdapter : persisted StudentGradeDM

repoAdapter -> mapper : toDomain(StudentGradeDM)
mapper --> repoAdapter : StudentGrade

repoAdapter --> service : StudentGrade
deactivate repoAdapter

service --> controller : GradeAStudentResponseDTO
deactivate service

controller -> assembler : toModel(GradeAStudentResponseDTO)
activate assembler
assembler --> controller : EntityModel<GradeAStudentResponseDTO> \n (_links: self, student, courseEdition)
deactivate assembler

controller --> RUC : HTTP 201 Created \n body: EntityModel<GradeAStudentResponseDTO>
deactivate controller
@enduml
