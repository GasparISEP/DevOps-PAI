@startuml
title As a RUC, I want to grade a Student in a Course Edition \n (Process View Level 4 – with HATEOAS)
skinparam sequencemessagealign center
autonumber

actor RUC
participant ":UI" as ui #application
participant ":CourseEditionRestController" as ctrlrREST #business
participant ":GradeAStudentServiceImpl" as service #motivation
participant ":StudentGradeAssembler" as dtoAssembler #orchid
participant ":StudentGradeRepresentationModelAssembler" as hateoasAssembler #lightblue
participant ":StudentGradeRepositorySpringDataImpl" as sgr #lightgreen
participant ":StudentGradeMapperImpl" as sgmp #mistyrose
participant ":IStudentGradeRepositorySpringData" as repoSpringData #khaki

RUC -> ui : I want to **grade a Student** in a Course Edition
activate ui

ref over ui : \t    **Interaction Use #1** \n \n \t **(GET)** \n \t \t Retrieves all Course Editions \n \t where the student is enrolled

ui --> RUC : Which CourseEdition?
RUC -> ui : Select this CourseEdition!

ui --> RUC : Fill in the **grading form** with: \n studentUniqueNumber, grade, date, programmeAcronym, etc.
RUC -> ui : Submit!

note over ui : Spring Boot deserializes JSON → `GradeAStudentRequestDTO`

ui -> ctrlrREST : **(POST)** \n gradeAStudent(GradeAStudentRequestDTO)
activate ctrlrREST

ctrlrREST -> dtoAssembler : toDomain(dto)
activate dtoAssembler
dtoAssembler --> ctrlrREST : GradeAStudentCommand
deactivate dtoAssembler

ctrlrREST -> service : gradeAStudent(command)
activate service

ref over service : Validates: \n - Student is enrolled \n - No duplicate grade \n - Dates are valid \n Then creates `StudentGrade` aggregate

service -> sgr : save(studentGrade)
activate sgr

sgr -> sgmp : toData(studentGrade)
activate sgmp
sgmp --> sgr : StudentGradeDataModel
deactivate sgmp

sgr -> repoSpringData : save(StudentGradeDataModel)
activate repoSpringData
repoSpringData -> : INSERT INTO `student_grade`
repoSpringData <-- : persisted StudentGradeDataModel
deactivate repoSpringData

sgr -> sgmp : toDomain(StudentGradeDataModel)
activate sgmp
sgmp --> sgr : StudentGrade
deactivate sgmp

sgr --> service : StudentGrade
deactivate sgr

service -> hateoasAssembler : toModel(responseDTO)
activate hateoasAssembler
note over hateoasAssembler : Adds `_links`: \n - self \n - averageGrade \n - approval-rate
hateoasAssembler --> service : EntityModel<GradeAStudentResponseDTO>
deactivate hateoasAssembler

service --> ctrlrREST : EntityModel<GradeAStudentResponseDTO>
deactivate service

ctrlrREST --> ui : HTTP 201 Created \n body: DTO + _links
deactivate ctrlrREST

note over ui : Spring serializes EntityModel as HAL-compliant JSON

ui --> RUC : Student graded successfully!
deactivate ui
@enduml
