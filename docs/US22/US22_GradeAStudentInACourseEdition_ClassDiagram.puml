@startuml
title US22: I want to grade a student in a CourseEdition
'left to right direction

class US22_IWantToGradeAStudentInACourseEdition {
    +US22_IWantToGradeAStudentInACourseEdition(gradeStudentRepository : GradeStudentRepository, courseEditionEnrolmentRepository : CourseEditionEnrolmentRepository)
    +isStudentEnrolledInCourseEdition(courseEdition : CourseEdition, student : Student): boolean
    +iWantToGradeAStudent(grade : int, date : String student : Student, courseEdition : CourseEdition): GradeStudent

}

class CourseEditionEnrolmentRepository {
    +CourseEditionEnrolmentRepository (courseEditionEnrolmentFactory: CourseEditionEnrolmentFactory, courseEditionEnrolmentListFactory: CourseEditionEnrolmentListFactory)
    +enrolStudentInACourseEdition (student: Student, courseEdition: CourseEdition): boolean
    +isStudentEnrolledInCourseEdition (student: Student, courseEdition: CourseEdition): boolean
    +findByStudentAndEdition (student: Student, courseEdition: CourseEdition): CourseEditionEnrolment
    +numberOfStudentsEnrolledInCourseEdition (CourseEdition : CourseEdition): int
    +removeEnrolment (student : Student): boolean
    +enrolStudentInProgrammeCourseEdition(student : Student, List<CourseEdition> courseEdition)
}

class CourseEditionEnrolment {
    -_enrolmentDate: LocalDate
    - _isActive: boolean
    +CourseEditionEnrolment(student:Student, courseEdition: CourseEdition)
    +equals (obj: Object): boolean
    +knowStudent(): Student
    +knowCourseEdition(): CourseEdition
    +deactivateEnrollment()
}


class List<GradeStudent> {

}

package "StudentGrade" {
entity "<<root>>\nGradeStudent"  {
    +hasThisCourseEdition(CourseEdition : CourseEdition)
    +knowCourseEdition()
    +get_student()
    +get_courseEdition()
    +equals (objectToCompare: Object)

    }
    class Grade <<ValueObject>> {
        -grade: double
        +knowGrade()
    }
    class LocalDate <<ValueObject>> {
            -date: String
            +isDateValid(String date)
            +get_date()
        }
}


class GradeStudentRepository {
    -gradeStudentList: List<GradeStudent>
    - _gradeStudentFactory: GradeStudentFactory
    +addGradeToStudent()
    +knowAverageGrade()
    +knowApprovalRate()
}

Interface GradeStudentRepositoryInterface {
    +addGradeToStudent()
    +knowAverageGrade()
    +knowApprovalRate()
}

interface GradeStudentFactory {
    +newGradeStudent()
}

interface GradeStudentListFactory {
    +newArrayList()
}

class GradeStudentListFactoryImpl {
    +newArrayList()
}

class GradeStudentFactoryImpl {
    +newGradeStudent()
}

class Student {
    -_uniqueNumber:String
    -_name:String
    -_NIF:String
    -_phone:String
    -_email:String
    -_institutionalEmail:String
    +Student(uniqueNumber: String, name: String, NIF: String, phone: String, email: String, address: Address)
    +isStudentRepeated(students: List<Student>)
    +hasSameUniqueNumber(Student student)
    +hasSameNIF (Student student)
    +getUniqueNumber(): String
    +hasThisUniqueNumber(String uniqueNumber)
}

class CourseEdition {
    -_programmeEdition: ProgrammeEdition
    -_course: Course
    -_ruc: Teacher
    +Equals(objectToCompare: Object)
    +setRuc(Teacher: ruc)
    +whatProgrammeEditionBelongsThisCourseEdition ()
    +getCourse()
}


"<<root>>\nGradeStudent" "*" --> "1" Grade
"<<root>>\nGradeStudent" "*" --> "1" LocalDate
"<<root>>\nGradeStudent" --> "1" Student: belongs
"<<root>>\nGradeStudent" --> "1" CourseEdition: refers to
GradeStudentRepositoryInterface "1" ....> GradeStudentFactory
GradeStudentFactory "1" ....> "Creates" "<<root>>\nGradeStudent"
GradeStudentRepositoryInterface "1" ....>  GradeStudentListFactory
GradeStudentListFactoryImpl ..|>  GradeStudentListFactory
GradeStudentFactory  <|..  GradeStudentFactoryImpl
GradeStudentRepository <|.. GradeStudentRepositoryInterface
GradeStudentListFactory ..|> List
"<<root>>\nGradeStudent" <-- List
List <-- GradeStudentRepositoryInterface
CourseEditionEnrolmentRepository "1" --> "*" CourseEditionEnrolment
CourseEditionEnrolment "*" --> "1" Student
CourseEditionEnrolment "*" -up-> "1" CourseEdition


GradeStudentRepositoryInterface "1" ....> "*" "<<root>>\nGradeStudent"


US22_IWantToGradeAStudentInACourseEdition "1" ..left..> "1    " CourseEditionEnrolmentRepository
US22_IWantToGradeAStudentInACourseEdition "1" ..> "1    " GradeStudentRepositoryInterface

@enduml