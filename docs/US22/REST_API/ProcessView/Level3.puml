@startuml

autonumber
title As a RUC, I want to grade a Student in a Course Edition \n (Process View Level 3)
skinparam sequencemessagealign center
autonumber


participant ":Router" as router <<Component>> #application
participant ":Controller" as controller <<Component>> #motivation
participant ":Service" as service <<Component>> #business
participant ":Repository" as repo <<Component>> #technology
participant ":Domain" as domain <<Component>> #implementation

 -> router : Select **Student grading** in a **CourseEdition** functionality
activate router
router -> controller : **(GET)** \n /courseeditions
activate controller
controller -> service : findAllCourseEditions()
activate service
service -> repo : findAllCourseEditions()
activate repo
repo ->  : findAll()
repo <--  : List <CourseEditionResponseDTO>

repo --> service : All Course Editions
deactivate repo
service --> controller : All Course Editions
deactivate service
controller --> router : All Course Editions
deactivate controller


 <-- router : Which Course Edition?
 -> router : This Course Edition!
 <-- router : Fill in the **Student grading** information
 -> router : **(POST)** \n Submit Student grading information \n (grade, date, studentID, courseEditionID)
router -> controller : **(POST)** \n studentgrades/register

activate controller
controller -> service : <Create> StudentGrade \n (grade, date, studentID, courseEditionID)

activate service
service -> repo : Validate grading constraints
activate repo
repo --> service : validated
deactivate repo

service -> domain : <Create> StudentGrade
activate domain
domain --> service : studentGrade
deactivate domain

service -> repo : save(studentGrade)
activate repo
repo -> : **Insert**
repo <--  : saved!
repo --> service : studentGrade!
deactivate repo

service --> controller : Student Grade saved!
deactivate service

controller --> router : Student Grade saved!
deactivate controller

 <-- router : Student graded successfully!
deactivate router

@enduml