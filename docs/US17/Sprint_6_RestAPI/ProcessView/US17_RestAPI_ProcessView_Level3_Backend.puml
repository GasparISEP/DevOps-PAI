@startuml

' US17 - Backend Granular Flow
' Process View - Level 3 Backend

autonumber

title US17: Enrol a Student in a ProgrammeEdition \n (Process View - Level 3 - Backend Only)

participant ":StudentProgrammeEditionEnrolmentRestController" as controller <<component>> <<RESTController>>
participant ":ProgrammeEditionEnrolmentRequest" as requestDTO <<component>> <<DTO>>
participant ":StudentProgrammeEditionEnrolmentServiceImpl" as service <<component>> <<Service>>
participant ":IProgrammeEnrolmentRepository" as programmeEnrRepo <<component>> <<Repository>>
participant ":IProgrammeEditionRepository" as editionRepo <<component>> <<Repository>>
participant ":IProgrammeEditionEnrolmentRepository" as enrolmentRepo <<component>> <<Repository>>
participant ":IProgrammeEditionEnrolmentFactory" as factory <<component>> <<Factory>>

-> controller: POST /students/programme-edition-enrolments
activate controller

controller -> requestDTO: deserialize JSON into DTO
requestDTO --> controller: studentId, programmeAcronym, programmeName, schoolYearId

controller -> service: enrolStudentInProgrammeEdition(studentId, programmeId, schoolYearId)
activate service

service -> programmeEnrRepo: findProgrammesByStudent(studentId)
programmeEnrRepo --> service: List<ProgrammeID>

service -> editionRepo: findByID(new ProgrammeEditionID(programmeId, schoolYearId))
editionRepo --> service: ProgrammeEdition

service -> enrolmentRepo: existsByID(ProgrammeEditionEnrolmentID)
enrolmentRepo --> service: false

service -> factory: create(ProgrammeEditionEnrolmentID, studentId, programmeEditionId)
factory --> service: ProgrammeEditionEnrolment

service -> enrolmentRepo: save(ProgrammeEditionEnrolment)
enrolmentRepo --> service: OK

service --> controller: void
controller --> : return 200 OK

@enduml
