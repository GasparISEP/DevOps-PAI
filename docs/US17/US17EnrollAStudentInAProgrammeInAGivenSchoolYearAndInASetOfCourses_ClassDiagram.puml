@startuml
!pragma layout smetana
'left to right direction


class US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController {
    +US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController(programmeEditionEnrollmentRepo: ProgrammeEditionEnrollmentRepo, programmeEditionRepository: ProgrammeEditionRepository, programmeList ProgrammeList,
    courseEditionEnrollmentRepository: CourseEditionEnrollmentRepository, courseEditionRepository: CourseEditionRepository, schoolYearRepository: SchoolYearRepository, programmeEnrolmentRepository: ProgrammeEnrolmentRepository)
    +enrollStudentInProgrammeEditionAndSetOfCoursesEditionsController(student: Student, programme: Programme, schoolYear: SchoolYear)
    +getAllProgrammes(): List<Programme>
    +getAllSchoolYears(): List<SchoolYear>
}
class CourseEditionEnrollment {
    -_enrollmentDate: LocalDate
    +CourseEditionEnrollment(student:Student, courseEdition: CourseEdition, enrollmentDate: LocalDate)
    +findStudentInCourseEditionEnrollment () : Student
    +findCourseEditionInEnrollment () : CourseEdition
}

class CourseEditionEnrollmentRepository {
    +CourseEditionEnrollmentRepository ()
    +enrollStudentInACourseEdition (student: Student, courseEdition: CourseEdition,  enrollmentDate: LocalDate) : boolean
    +findByStudentAndEdition (student: Student, courseEdition: CourseEdition) : Optional <CourseEditionEnrollment>
    +enrollStudentInProgrammeEditionCoursesEditions (student: Student, courseEditions: List<CourseEdition>) : void
}

class ProgrammeEditionEnrollment {
    -_enrollmentDate: LocalDate
    +ProgrammeEditionEnrollment(student:Student, programmeEdition: ProgrammeEdition, enrollmentDate: LocalDate)
    +getStudentUniqueNumber() : int
    +equals (obj: Object) : boolean
    +findProgrammeEditionInEnrollment () : ProgrammeEdition
}

class ProgrammeEditionEnrollmentRepo {
    +ProgrammeEditionEnrollmentRepo(programmeEditionEnrollmentFactory: ProgrammeEditionEnrollmentFactory)
    +enrollStudentInProgrammeEdition (student: Student, programmeEdition: ProgrammeEdition,localDate: LocalDate) : boolean
    +isStudentEnrolledInThisProgrammeEdition(student: Student, programmeEdition: ProgrammeEdition) : boolean
}

class ProgrammeEditionEnrollmentFactory {
    +newProgrammeEditionEnrollment(student: Student, programmeEdition: ProgrammeEdition, enrollmentDate: LocalDate)

}

class Programme {
     - name: string
     - acronym: string
     - quantityOfEcts: int
     - quantityOfSemesters: int
     + Programme (name : String, acronym : String, quantityOfEcts: int, quantityOfSemesters : int,
     degreeType : DegreeType, department : Department, programmeDirector : Teacher)
 }

class ProgrammeList {
     +ProgrammeList(programmeFactory: ProgrammeFactory)
     +getAllProgrammes() : List<Programme>
}

class SchoolYear {
    -_description:String
    -_startData:String
    -_endDate:String
    +SchoolYear(description: String, StartDate: String, EndDate: String)
    +isSameSchoolYear(otherSchoolYear: SchoolYear) : boolean
    +getEndDate() : LocalDate
    +getStartDate() : LocalDate
    +equals(Object: o) : boolean
}

class SchoolYearRepository {
    +schoolYearRepository()
    +getAllSchoolYears() : List<SchoolYear>
}

class ProgrammeEnrollment {
    +ProgrammeEnrolment(student: Student, accessMethod: AccessMethod)
    +findStudentInEnrollments() : Student
    +getProgramme() : Programme
}

class ProgrammeEnrolmentRepository {
    +ProgrammeEnrolmentRepository()
    +isStudentEnrolled(student: Student, programme: Programme) : boolean
}

class Student {
    -_uniqueNumber:int
    -_name:String
    -_NIF:String
    -_phone:String
    -_email:String
    +Student(uniqueNumber: int, name: String, NIF: String, phone: String, email: String, address: Address)
    +getUniqueNumber() : int
}

class Address {
     -_street:String
     -_postalCode: String
     -_location: String
     -_country: String
     +Address(street: String, postalCode: String, location: String, country: String)
}

class CourseEdition {
    +CourseEdition(programmeEdition: ProgrammeEdition, course: Course)
    +whatProgrammeEditionBelongsThisCourseEdition() : ProgrammeEdition
}

class CourseEditionRepository {
    +CourseEditionRepository(courseEditionFactory: CourseEditionFactory)
    +findCourseEditionsByProgrammeEdition(ProgrammeEdition programmeEdition) : List<CourseEdition>
}

class ProgrammeEdition {
    +ProgrammeEdition(programme: Programme,schoolYear: SchoolYear)
    +findProgrammeInProgrammeEdition() : Programme
    +findSchoolYearInProgrammeEdition() : SchoolYear
}

class ProgrammeEditionRepository {
    +ProgrammeEditionRepository(programmeEditionFactory: ProgrammeEditionFactory))
    +findProgrammeEditionBySchoolYearAndProgramme(programme: Programme, schoolYear: SchoolYear) : Optional<ProgrammeEdition>
    +getAllProgrammeEditions() : List<ProgrammeEdition>
}

US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1 " ..> "1  " ProgrammeEditionEnrollmentRepo
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1                         " ProgrammeEditionRepository
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1                   " ..> "1" ProgrammeList
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1 " ..> "1  " CourseEditionEnrollmentRepository
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1 " ..> "1  " CourseEditionRepository
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1   " SchoolYearRepository
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "_programmeEnrolmentRepository 1 " ProgrammeEnrolmentRepository
Student "1        " --> "_address 1  " Address
Programme " 1 "  --> "  1 _listOfEnrollments " ProgrammeEnrollment
Student "_student  1 " <-u- "* " ProgrammeEnrollment
SchoolYearRepository "1 " --> "_listOfSchoolYears   *  " SchoolYear
ProgrammeEdition "* " -->"_schoolYear 1   " SchoolYear
CourseEditionRepository "1 " --> " * _listCourseEditions" CourseEdition
Student "_student 1" <-- "*" CourseEditionEnrollment
CourseEditionEnrollment "*" --> "1 _courseEdition" CourseEdition
CourseEditionEnrollment "_listOfCourseEditionEnrollment *  " <-- "1" CourseEditionEnrollmentRepository
ProgrammeEdition "_programmeEdition 1                " <-- " * " ProgrammeEditionEnrollment
ProgrammeEditionEnrollment "* " --> "_student 1   " Student
ProgrammeEditionEnrollment "_programmeEditionEnrollmentFactory 1" <-- "1      " ProgrammeEditionEnrollmentFactory
ProgrammeEditionEnrollmentFactory " _programmeEditionEnrollmentFactory  1" <-- "1           " ProgrammeEditionEnrollmentRepo
ProgrammeList "1     " --> " _listOfProgrammes *" Programme
CourseEdition "_courseEdition *  " <-- "1   " ProgrammeEdition

ProgrammeEnrolmentRepository "1" --> "*" ProgrammeEnrollment
@enduml
