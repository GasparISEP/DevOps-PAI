@startuml
!pragma layout smetana
'left to right direction


class US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController {
    +US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController(programmeEditionEnrollmentRepo: ProgrammeEditionEnrollmentRepo, programmeEditionRepository: ProgrammeEditionRepository, programmeRepository ProgrammeRepository,
    courseEditionEnrollmentRepository: CourseEditionEnrollmentRepository, courseEditionRepository: CourseEditionRepository, schoolYearRepository: SchoolYearRepository, programmeEnrolmentRepository: ProgrammeEnrolmentRepository)
    +enrollStudentInProgrammeEditionAndSetOfCoursesEditionsController(student: Student, programme: Programme, schoolYear: SchoolYear)
    +getAllProgrammes(): List<Programme>
    +getAllSchoolYears(): List<SchoolYear>
}
class CourseEditionEnrollment {
    +CourseEditionEnrollment(student:Student, courseEdition: CourseEdition)
    +hasStudent (student: Student) : boolean
    +hasCourseEdition (courseEdition: CourseEdtion) : boolean
}

class CourseEditionEnrollmentRepository {
    +CourseEditionEnrollmentRepository ()
    +enrollStudentInACourseEdition (student: Student, courseEdition: CourseEdition) : boolean
    +findByStudentAndEdition (student: Student, courseEdition: CourseEdition) : Optional <CourseEditionEnrollment>
    +enrollStudentInProgrammeEditionCoursesEditions (student: Student, courseEditions: List<CourseEdition>) : void
}

class CourseEditionEnrollmentListFactory {
    +newArrayList(): List<CourseEditionEnrollment>
}

class HashSet{
    + add(): boolean
}

class ProgrammeEditionEnrollment {
    +ProgrammeEditionEnrollment(student:Student, programmeEdition: ProgrammeEdition)
    +getStudentUniqueNumber() : String
    +equals (obj: Object) : boolean
    +findProgrammeEditionInEnrollment () : ProgrammeEdition
}

class ProgrammeEditionEnrollmentRepo {
    +ProgrammeEditionEnrollmentRepo(programmeEditionEnrollmentFactory: ProgrammeEditionEnrollmentFactory, programmeEditionEnrollmentListFactory: ProgrammeEditionEnrollmentListFactory)
    +enrollStudentInProgrammeEdition (student: Student, programmeEdition: ProgrammeEdition) : boolean
    +isStudentEnrolledInThisProgrammeEdition(student: Student, programmeEdition: ProgrammeEdition) : boolean
}

class ProgrammeEditionEnrollmentFactory {
    +newProgrammeEditionEnrollment(student: Student, programmeEdition: ProgrammeEdition)
}

interface ProgrammeEditionEnrollmentFactoryInterface{
    +newProgrammeEditionEnrollment(student: Student, programmeEdition: ProgrammeEdition)
}

class ProgrammeEditionEnrollmentListFactory{
    +newProgrammeEditionEnrollmentList(): Set<ProgrammeEditionEnrollment>
}

class ProgrammeEditionEnrollmentArrayList{
     +add(programmeEditionEnrollment: ProgrammeEditionEnrollment): boolean
}

interface ProgrammeEditionEnrollmentListFactoryInterface {
    +newProgrammeEditionEnrollmentList(): Set<ProgrammeEditionEnrollment>
}

class Programme {
     - name: string
     - acronym: string
     - quantityOfEcts: int
     - quantityOfSemesters: int
     + Programme (name : String, acronym : String, quantityOfEcts: int, quantityOfSemesters : int,
     degreeType : DegreeType, department : Department, programmeDirector : Teacher, programmeCourseListFactory: ProgrammeCourseListFactory)
 }

class ProgrammeRepository {
    +ProgrammeRepository(programmeFactory: ProgrammeFactory)
    +getAllProgrammes() : List<Programme>
}

class ProgrammeRepositoryListFactoryImpl {
    +copyProgrammeArrayList(List<Programme>)
}

interface ProgrammeRepositoryListFactory {
    +copyProgrammeArrayList(List<Programme>)
}

class ProgrammeArrayList {
    +add(): boolean
}

class SchoolYear {
    -_description:String
    -_startData:String
    -_endDate:String
    +SchoolYear(description: String, StartDate: String, EndDate: String)
}

class SchoolYearRepository {
    +schoolYearRepository(schoolYearFactory: SchoolYearFactory, schoolYearListFactory: SchoolYearListFactory)
    +getAllSchoolYears() : List<SchoolYear>
}

class SchoolYearListFactory {
    +copySchoolYearArrayList(List<SchoolYear>)
}

class SchoolYearArrayList {
    +add(): boolean
}

interface SchoolYearListFactoryInterface {
    +copySchoolYearArrayList(List<SchoolYear>)

}

class ProgrammeEnrollment {
    +ProgrammeEnrolment(student: Student, accessMethod: AccessMethod)
    +getStudentFromEnrolment() : Student
    +getProgrammeFromEnrolment() : Programme
}

class ProgrammeEnrolmentRepository {
    +ProgrammeEnrolmentRepository()
    +isStudentEnrolled(student: Student, programme: Programme) : boolean
}

class Student {
    -_uniqueNumber:String
    -_name:String
    -_NIF:String
    -_phone:String
    -_email:String
    _institutionalEmail:String
    +Student(uniqueNumber: String, name: String, NIF: String, phone: String, email: String, address: Address)
    +getUniqueNumber() : String
}

class Address {
     -_street:String
     -_postalCode: String
     -_location: String
     -_country: String
     +Address(street: String, postalCode: String, location: String, country: String)
}

class CourseEdition {
    +CourseEdition(programmeEdition: ProgrammeEdition, course: Course)
    +whatProgrammeEditionBelongsThisCourseEdition() : ProgrammeEdition
}

class CourseEditionRepository {
    +CourseEditionRepository(courseEditionFactory: CourseEditionFactory)
    +findCourseEditionsByProgrammeEdition(ProgrammeEdition programmeEdition) : List<CourseEdition>
}

class CourseEditionListFactory{
    + newArrayList(CourseEdition)
}

class CourseEditionArrayList{
     +add(): boolean
}


class ProgrammeEdition {
    +ProgrammeEdition(programme: Programme,schoolYear: SchoolYear)
    +findProgrammeInProgrammeEdition() : Programme
    +findSchoolYearInProgrammeEdition() : SchoolYear
}

class ProgrammeEditionRepository {
    +ProgrammeEditionRepository(programmeEditionFactory: ProgrammeEditionFactory))
    +findProgrammeEditionBySchoolYearAndProgramme(programme: Programme, schoolYear: SchoolYear) : Optional<ProgrammeEdition>
}

US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1 " ..> "1  " ProgrammeEditionEnrollmentRepo
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1                         " ProgrammeEditionRepository
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1                   " ..> "1" ProgrammeRepository
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1 " ..> "1     " CourseEditionEnrollmentRepository
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1 " ..> "1  " CourseEditionRepository
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1   " SchoolYearRepository
US17_EnrollStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "_programmeEnrolmentRepository 1 " ProgrammeEnrolmentRepository
Student "1        " --> "_address 1  " Address
Student "_student  1 " <-u- "* " ProgrammeEnrollment
Programme " 1 "  --> "  1 _listOfEnrollments " ProgrammeEnrollment

ProgrammeEdition "* " -->"_schoolYear 1      " SchoolYear
CourseEditionRepository "1 " -u-> "* _listCourseEditions" CourseEdition
CourseEditionRepository" 1     " -u-> "1  " CourseEditionListFactory
CourseEditionRepository "1   " --> "1" CourseEditionArrayList
CourseEditionArrayList "1 " <.. "1   " CourseEditionListFactory
CourseEditionArrayList "arrayOfCourseEdition  1         " <.u. "*  " CourseEdition
Student "_student 1" <-- "*" CourseEditionEnrollment
CourseEditionEnrollment "_listOfCourseEditionEnrollment *  " <-- " 1 " CourseEditionEnrollmentRepository
CourseEditionEnrollmentRepository"1" --> "1" CourseEditionEnrollmentListFactory
CourseEditionEnrollmentRepository"1" --> "1" HashSet
HashSet "1  " <.. "1   " CourseEditionEnrollmentListFactory
HashSet "1         " <.u. "*  " SchoolYear
CourseEditionEnrollment "*" --> "1 _listOfcourseEdition              " CourseEdition

ProgrammeEdition "_programmeEdition 1                " <-- " * " ProgrammeEditionEnrollment
ProgrammeEditionEnrollment "* " --> "_student 1   " Student
ProgrammeEditionEnrollmentRepo ..> ProgrammeEditionEnrollment
ProgrammeEditionEnrollmentRepo "1" --> "1    " ProgrammeEditionEnrollmentArrayList
ProgrammeEditionEnrollmentFactoryInterface <.. ProgrammeEditionEnrollmentRepo
ProgrammeEditionEnrollmentArrayList "1         " .u.> " *  " ProgrammeEditionEnrollment
ProgrammeEditionEnrollmentRepo "1"..> "1" ProgrammeEditionEnrollmentListFactory
ProgrammeEditionEnrollmentRepo ..> ProgrammeEditionEnrollmentListFactoryInterface
ProgrammeEditionEnrollmentListFactoryInterface ..> ProgrammeEditionEnrollmentArrayList
CourseEdition "_listOfCourseEdition *  " <-- "1   " ProgrammeEdition
ProgrammeEditionEnrollmentFactoryInterface <|.. ProgrammeEditionEnrollmentFactory
ProgrammeEditionEnrollmentListFactoryInterface <|.. ProgrammeEditionEnrollmentListFactory
ProgrammeEnrolmentRepository "1" --> "*" ProgrammeEnrollment

ProgrammeRepository ..> ProgrammeRepositoryListFactory
ProgrammeRepository ..> Programme
ProgrammeRepository "1" --> "1" ProgrammeArrayList
ProgrammeArrayList "1" --> " _programme * " Programme
ProgrammeRepositoryListFactory ..> ProgrammeArrayList
ProgrammeRepositoryListFactoryImpl ..|> ProgrammeRepositoryListFactory

SchoolYearRepository  ..> SchoolYearListFactoryInterface
SchoolYearListFactory ..|> SchoolYearListFactoryInterface
SchoolYearListFactoryInterface ..> SchoolYearArrayList
SchoolYearRepository  ..>  SchoolYear
SchoolYearRepository "1" --> "1" SchoolYearArrayList
SchoolYearArrayList "1" --> " _schoolYear *          "SchoolYear
@enduml
