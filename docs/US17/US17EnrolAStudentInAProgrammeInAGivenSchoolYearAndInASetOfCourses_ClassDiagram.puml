@startuml
!pragma layout smetana
'left to right direction

class US17_EnrolStudentInProgrammeEditionAndSetOfCoursesEditionsController {
    +US17_EnrolStudentInProgrammeEditionAndSetOfCoursesEditionsController(
          programmeEditionEnrolmentRepo: IProgrammeEditionEnrolmentRepo,
          programmeEditionRepository: IProgrammeEditionRepository,
          programmeRepository: IProgrammeRepository,
          courseEditionEnrolmentRepository: ICourseEditionEnrolmentRepository,
          courseEditionRepository: ICourseEditionRepository,
          schoolYearRepository: ISchoolYearRepository,
          programmeEnrolmentRepository: IProgrammeEnrolmentRepository)
    +enrolStudentInProgrammeEditionAndSetOfCoursesEditionsController(student: Student, programme: Programme, schoolYear: SchoolYear)
    +getAllProgrammes(): List<Programme>
    +getAllSchoolYears(): List<SchoolYear>
}

' Interfaces dos repositórios
interface IProgrammeEditionEnrolmentRepo {
    +enrolStudentInProgrammeEdition(student: Student, programmeEdition: ProgrammeEdition) : boolean
    +isStudentEnrolledInThisProgrammeEdition(student: Student, programmeEdition: ProgrammeEdition) : boolean
}

interface IProgrammeEditionRepository {
    +findProgrammeEditionBySchoolYearAndProgramme(programme: Programme, schoolYear: SchoolYear) : Optional<ProgrammeEdition>
}

interface IProgrammeRepository {
    +getAllProgrammes() : List<Programme>
}

interface ICourseEditionEnrolmentRepository {
    +enrolStudentInACourseEdition (student: Student, courseEdition: CourseEdition) : boolean
    +findByStudentAndEdition (student: Student, courseEdition: CourseEdition) : Optional<CourseEditionEnrolment>
    +enrolStudentInProgrammeEditionCoursesEditions (student: Student, courseEditions: List<CourseEdition>) : void
}

interface ICourseEditionRepository {
    +findCourseEditionsByProgrammeEdition(ProgrammeEdition programmeEdition): List<CourseEdition>
}

interface ISchoolYearRepository {
    +getAllSchoolYears() : List<SchoolYear>
}

interface IProgrammeEnrolmentRepository {
    +isStudentEnrolled(student: Student, programme: Programme) : boolean
}



' Repositórios concretos e suas implementações
class ProgrammeEditionEnrolmentRepo {
    +ProgrammeEditionEnrolmentRepo(programmeEditionEnrolmentFactory: ProgrammeEditionEnrolmentFactory,
          programmeEditionEnrolmentListFactory: ProgrammeEditionEnrolmentListFactory)
    +enrolStudentInProgrammeEdition(student: Student, programmeEdition: ProgrammeEdition) : boolean
    +isStudentEnrolledInThisProgrammeEdition(student: Student, programmeEdition: ProgrammeEdition) : boolean
}

class ProgrammeEditionRepository {
    +ProgrammeEditionRepository(programmeEditionFactory: ProgrammeEditionFactory)
    +findProgrammeEditionBySchoolYearAndProgramme(programme: Programme, schoolYear: SchoolYear) : Optional<ProgrammeEdition>
}

class ProgrammeRepository {
    +ProgrammeRepository(programmeFactory: ProgrammeFactory)
    +getAllProgrammes() : List<Programme>
}

class CourseEditionEnrolmentRepository {
    +CourseEditionEnrolmentRepository ()
    +enrolStudentInACourseEdition(student: Student, courseEdition: CourseEdition) : boolean
    +findByStudentAndEdition(student: Student, courseEdition: CourseEdition) : Optional<CourseEditionEnrolment>
    +enrolStudentInProgrammeEditionCoursesEditions(student: Student, courseEditions: List<CourseEdition>) : void
}

class CourseEditionRepository {
    +CourseEditionRepository(courseEditionFactory: CourseEditionFactory)
    +findCourseEditionsByProgrammeEdition(programmeEdition: ProgrammeEdition) : List<CourseEdition>
}

class SchoolYearRepository {
    +schoolYearRepository(schoolYearFactory: SchoolYearFactory, schoolYearListFactory: SchoolYearListFactory)
    +getAllSchoolYears() : List<SchoolYear>
}

class ProgrammeEnrolmentRepository {
    +ProgrammeEnrolmentRepository()
    +isStudentEnrolled(student: Student, programme: Programme) : boolean
}

' Ligações entre interfaces e repositórios concretos (implementações)
IProgrammeEditionEnrolmentRepo <|.. ProgrammeEditionEnrolmentRepo
IProgrammeEditionRepository <|.. ProgrammeEditionRepository
IProgrammeRepository <|.. ProgrammeRepository
ICourseEditionEnrolmentRepository <|.. CourseEditionEnrolmentRepository
ICourseEditionRepository <|.. CourseEditionRepository
ISchoolYearRepository <|.. SchoolYearRepository
IProgrammeEnrolmentRepository <|.. ProgrammeEnrolmentRepository

' Resto do diagrama permanece igual (entidades, factories, etc.)
class CourseEditionEnrolment {
    +CourseEditionEnrolment(student:Student, courseEdition: CourseEdition)
    +hasStudent (student: Student) : boolean
    +hasCourseEdition (courseEdition: CourseEdition) : boolean
}

class CourseEditionEnrolmentListFactory {
    +newArrayList(): List<CourseEditionEnrolment>
}

class HashSet{
    + add(): boolean
}

class ProgrammeEditionEnrolment {
    +ProgrammeEditionEnrolment(student:Student, programmeEdition: ProgrammeEdition)
    +getStudentUniqueNumber() : String
    +equals (obj: Object) : boolean
    +findProgrammeEditionInEnrollment () : ProgrammeEdition
}

class ProgrammeEditionEnrolmentFactory {
    +newProgrammeEditionEnrolment(student: Student, programmeEdition: ProgrammeEdition)
}

interface IProgrammeEditionEnrolmentFactory{
    +newProgrammeEditionEnrolment(student: Student, programmeEdition: ProgrammeEdition)
}

class ProgrammeEditionEnrolmentListFactory{
    +newProgrammeEditionEnrolmentList(): Set<ProgrammeEditionEnrolment>
}

class ProgrammeEditionEnrolmentArrayList{
     +add(programmeEditionEnrolment: ProgrammeEditionEnrolment): boolean
}

class Programme {
     - name: string
     - acronym: string
     - quantityOfEcts: int
     - quantityOfSemesters: int
     + Programme(name : String, acronym : String, quantityOfEcts: int, quantityOfSemesters : int,
          degreeType : DegreeType, department : Department, programmeDirector : Teacher, programmeCourseListFactory: ProgrammeCourseListFactory)
 }

class ProgrammeRepositoryListFactoryImpl {
    +copyProgrammeArrayList(List<Programme>): List<Programme>
}

interface IProgrammeRepositoryListFactory {
    +copyProgrammeArrayList(List<Programme>)
}

class ProgrammeArrayList {
    +add(): boolean
}

class SchoolYear {
    -_description:String
    -_startData:String
    -_endDate:String
    +SchoolYear(description: String, StartDate: String, EndDate: String)
}

class SchoolYearListFactory {
    +copySchoolYearArrayList(List<SchoolYear>) : List<SchoolYear>
}

class SchoolYearArrayList {
    +add(): boolean
}

interface ISchoolYearListFactory {
    +copySchoolYearArrayList(List<SchoolYear>)
}

class ProgrammeEnrolment {
    +ProgrammeEnrolment(student: Student, accessMethod: AccessMethod)
    +getStudentFromEnrolment() : Student
    +getProgrammeFromEnrolment() : Programme
}

class Student {
    -_uniqueNumber:String
    -_name:String
    -_NIF:String
    -_phone:String
    -_email:String
    _institutionalEmail:String
    +Student(uniqueNumber: String, name: String, NIF: String, phone: String, email: String, address: Address)
    +getUniqueNumber() : String
}

class Address {
     -_street:String
     -_postalCode: String
     -_location: String
     -_country: String
     +Address(street: String, postalCode: String, location: String, country: String)
}

class CourseEdition {
    +CourseEdition(programmeEdition: ProgrammeEdition, course: Course)
    +whatProgrammeEditionBelongsThisCourseEdition() : ProgrammeEdition
}

class CourseEditionListFactory{
    +newArrayList(CourseEdition)
}

class CourseEditionArrayList{
     +add(): boolean
}

class ProgrammeEdition {
    +ProgrammeEdition(programme: Programme, schoolYear: SchoolYear)
    +findProgrammeInProgrammeEdition() : Programme
    +findSchoolYearInProgrammeEdition() : SchoolYear
}

class ProgrammeEditionRepository {
    +ProgrammeEditionRepository(programmeEditionFactory: ProgrammeEditionFactory)
    +findProgrammeEditionBySchoolYearAndProgramme(programme: Programme, schoolYear: SchoolYear) : Optional<ProgrammeEdition>
}

' Controller - interfacesRepo
US17_EnrolStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1" IProgrammeEditionEnrolmentRepo
US17_EnrolStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1" IProgrammeEditionRepository
US17_EnrolStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1" IProgrammeRepository
US17_EnrolStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1" ICourseEditionEnrolmentRepository
US17_EnrolStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1" ICourseEditionRepository
US17_EnrolStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1" ISchoolYearRepository
US17_EnrolStudentInProgrammeEditionAndSetOfCoursesEditionsController "1" ..> "1" IProgrammeEnrolmentRepository

' Other connections
Student "1" --> "1 _address" Address
Student "_student" <-u- "*" ProgrammeEnrolment
Programme "1" --> "1 _listOfEnrollments" ProgrammeEnrolment
ProgrammeEdition "*" --> "_schoolYear 1" SchoolYear
CourseEditionRepository "1" -u-> "_listOfCE" CourseEdition
CourseEditionRepository "1" -u-> "1" CourseEditionListFactory
CourseEditionRepository "1" --> "1" CourseEditionArrayList
CourseEditionArrayList "1" <.. "1" CourseEditionListFactory
CourseEditionArrayList "1 arrayOfCourseEdition" <.u. "*" CourseEdition
Student "_student" <-- "*" CourseEditionEnrolment
CourseEditionEnrolment " " ..> " " ICourseEditionEnrolmentRepository
CourseEditionEnrolmentRepository "1" --> "1" CourseEditionEnrolmentListFactory
CourseEditionEnrolmentRepository "1" --> "1" HashSet
HashSet "1" <.. "1" CourseEditionEnrolmentListFactory
HashSet "1" <.u. "*" SchoolYear
CourseEditionEnrolment "*" --> "1 _cE" CourseEdition
ProgrammeEdition "_" <-- "*" ProgrammeEditionEnrolment
ProgrammeEditionEnrolment "*" --> "_student 1" Student
ProgrammeEditionEnrolmentRepo "1" --> "1" ProgrammeEditionEnrolmentArrayList
IProgrammeEditionEnrolmentFactory <.. ProgrammeEditionEnrolmentRepo
ProgrammeEditionEnrolmentArrayList "1" .u.> "*" ProgrammeEditionEnrolment
ProgrammeEditionEnrolmentRepo "1" ..> "1" ProgrammeEditionEnrolmentListFactory
ProgrammeEditionEnrolmentRepo ..> ProgrammeEditionEnrolmentListFactoryInterface
ProgrammeEditionEnrolmentListFactoryInterface ..> ProgrammeEditionEnrolmentArrayList
CourseEdition "*" <-- "1 _listOfCE" ProgrammeEdition
IProgrammeEditionEnrolmentFactory <|.. ProgrammeEditionEnrolmentFactory
ProgrammeEditionEnrolmentListFactoryInterface <|.. ProgrammeEditionEnrolmentListFactory
ProgrammeEnrolmentRepository "1" --> "*" ProgrammeEnrolment
ProgrammeRepository ..> IProgrammeRepositoryListFactory
ProgrammeRepository ..> Programme
ProgrammeRepository "1" --> "1" ProgrammeArrayList
ProgrammeArrayList "1" --> " _programme *" Programme
IProgrammeRepositoryListFactory ..> ProgrammeArrayList
ProgrammeRepositoryListFactoryImpl ..|> IProgrammeRepositoryListFactory
SchoolYearRepository ..> ISchoolYearListFactoryInterface
SchoolYearListFactory ..|> ISchoolYearListFactoryInterface
ISchoolYearListFactoryInterface ..> SchoolYearArrayList
SchoolYearRepository ..> SchoolYear
SchoolYearRepository "1" --> "1" SchoolYearArrayList
SchoolYearArrayList "1" --> " _schoolYear *" SchoolYear

@enduml
