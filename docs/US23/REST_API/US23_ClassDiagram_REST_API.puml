@startuml
title US23: I want to know the approval percentage of a CourseEdition

class CourseEditionRESTController {
    +CourseEditionRESTController(gradeStudentRepository : IGradeStudentRepository, courseEditionEnrolmentRepository : ICourseEditionEnrolmentRepository)
    +findApprovalPercentage (CourseEdition : CourseEdition) : ApprovalPercentage
}

interface IStudentGradeService {
        +addGradeToStudent(Grade, Date, StudentID, CourseEditionID)
        +knowAverageGrade(CourseEditionID)
        +knowApprovalRate(CourseEditionID)
        +findIdByStudent (StudentGrade studentGrade)
        +save(StudentGrade entity)
        +findAll()
        +ofIdentity(StudentGradeID id)
        +containsOfIdentity(StudentGradeID id)
}

class StudentGradeService {
        +addGradeToStudent(Grade, Date, StudentID, CourseEditionID)
        +knowAverageGrade(CourseEditionID)
        +knowApprovalRate(CourseEditionID)
        +findIdByStudent (StudentGrade studentGrade)
        +save(StudentGrade entity)
        +findAll()
        +ofIdentity(StudentGradeID id)
        +containsOfIdentity(StudentGradeID id)
}

class StudentGradeResponseDTO {
      -studentGradeId : String
      -courseEditionId : String
      -programmeEditionId : String
      -courseInStudyPlanID : String
      -programmeId : String
      -schoolYearId : String
      -courseId : String
      -studyPlanId : String
      -studentUniqueNumber : int
      -grade : int
      -date : String
}


package "StudentGrade" {
    entity "<<root>>\nGradeStudent" {
        +hasThisCourseEdition(CourseEdition : CourseEdition)
        +knowCourseEdition()
        +get_student()
        +get_courseEdition()
        +equals(objectToCompare: Object)
    }
}

class Grade <<ValueObject>> {
    -grade: double
    +knowGrade()
}

class LocalDate <<ValueObject>> {
    -date: String
    +isDateValid(String date)
    +get_date()
}

class StudentGradeId <<ValueObject>> {
    -courseEditionID
    -studentID
    +equals()
    +toString()
}

class StudentGradeRepository {
    +addGradeToStudent(Grade, Date, student, CourseEdition)
    +knowAverageGrade(CourseEdition)
    +knowApprovalRate(CourseEdition)
    +findIdByStudent(StudentGrade studentGrade)
    +save(StudentGrade entity)
    +findAll()
    +ofIdentity(StudentGradeID id)
    +containsOfIdentity(StudentGradeID id)
}

interface IStudentGradeRepositoryInterface {
    +addGradeToStudent(Grade, Date, student, CourseEdition)
    +knowAverageGrade(CourseEdition)
    +knowApprovalRate(CourseEdition)
    +findIdByStudent(StudentGrade studentGrade)
    +save(StudentGrade entity)
    +findAll()
    +ofIdentity(StudentGradeID id)
    +containsOfIdentity(StudentGradeID id)
}

interface IStudentGradeFactory {
    +newGradeStudent()
}

class StudentGradeFactoryImpl {
    +newGradeStudent()
}

class StudentId <<ValueObject>> {
    uniqueNumber: int
    +equals()
    +getUniqueNumber()
    +isEquals()
}

package "Student" {
    entity "<<root>>\nStudent" {
        +Student(uniqueNumber: String, name: String, NIF: String, phone: String, email: String, address: Address)
        +isStudentRepeated(students: List<Student>)
        +hasSameUniqueNumber(Student student)
        +hasSameNIF(Student student)
        +getUniqueNumber(): String
        +hasThisUniqueNumber(String uniqueNumber)
    }
}

class Name <<ValueObject>> {
    -Name: String
    +getName()
    +equals()
    +hashCode()
}

class NIF <<ValueObject>> {
    -NIF: String
}

class Phone <<ValueObject>> {
    -CountryCode: String
    -Number: String
}

class Email <<ValueObject>> {
    -Email: String
}

class Address <<ValueObject>> {
    -Street
    -PostalCode
    -Location
    -Country
}

class CourseEditionId <<ValueObject>> {
    -ProgrammeEditionID
    -CourseInStudyPlanID
    +toString()
    +equals()
}

package "CourseEdition" {
    entity "<<root>>\nCourseEdition" {
        +Equals(objectToCompare: Object)
        +setRuc(Teacher: ruc)
        +whatProgrammeEditionBelongsThisCourseEdition()
        +getCourse()
    }
}

"<<root>>\nStudent" "*" --> "1" Name
"<<root>>\nStudent" "*" --> "1" NIF
"<<root>>\nStudent" "*" --> "1" Email
"<<root>>\nStudent" "*" --> "1" Phone
"<<root>>\nStudent" "*" --> "1" Address
"<<root>>\nGradeStudent" "*" --> "1" Grade
"<<root>>\nGradeStudent" "*" --> "1" LocalDate
"<<root>>\nGradeStudent" --> "1" StudentId : belongs
"<<root>>\nGradeStudent" --> "1" CourseEditionId : refers to
IStudentGradeService "1" ....> IStudentGradeFactory
IStudentGradeFactory "1" ....> "Creates" "<<root>>\nGradeStudent"
IStudentGradeFactory <|.. StudentGradeFactoryImpl

"<<root>>\nGradeStudent" --> "1" StudentGradeId
"<<root>>\nCourseEdition" --> "1" CourseEditionId
"<<root>>\nStudent" --> "1" StudentId
IStudentGradeService <|.. StudentGradeService
IStudentGradeRepositoryInterface <|.. StudentGradeRepository
IStudentGradeRepositoryInterface ....> IStudentGradeFactory
IStudentGradeService "1" ....> "*" "<<root>>\nGradeStudent"
IStudentGradeService "1" ..|> IStudentGradeRepositoryInterface
CourseEditionRESTController "*" ..> "1" IStudentGradeService
StudentGradeService ..> StudentGradeResponseDTO

@enduml
