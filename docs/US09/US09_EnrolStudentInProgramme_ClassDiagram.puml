@startuml
'https://plantuml.com/sequence-diagram

skinparam ranksep 180
skinparam nodesep 180

class Student {
    -_uniqueNumber:String
    -_name:String
    -_NIF:String
    -_phone:String
    -_email:String
    -_institutionalEmail:String
    +hasThisUniqueNumber(uniqueNumber: String)
}

class AccessMethod {
    -_name:String
    +hasThisAccessMethodName(name: String)
}

class List<ProgrammeEnrolment> {
}

class Programme {
     - name: string
     - acronym: string
     - quantityOfEcts: int
     - quantityOfSemesters: int
     - degreeType: DegreeType
     - department: Department
     - programmeDirector: Teacher
     -StudyPlan: _studyPlan
     +hasThisProgrammeName(name: String)
 }

 class ProgrammeEnrolment {
     -enrolmentDate: LocalDate
     +ProgrammeEnrolment(student: Student, accessMethod: AccessMethod, programme: Programme, date: LocalDate)
     +hasSameStudent(student: Student)
     +hasSameEnrolment(programmeEnrolment: ProgrammeEnrolment)
     +hasSameProgramme(programme: Programme)
 }

 class ProgrammeEnrolmentFactoryImpl {
    +createProgrammeEnrolment(student: Student, accessMethod: AccessMethod, programme: Programme, date: String)
 }

interface ProgrammeEnrolmentFactory {
    +createProgrammeEnrolment(student: Student, accessMethod: AccessMethod, programme: Programme, date: String)
}

class ProgrammeEnrolmentRepository {
    -programmeEnrolmentFactory: ProgrammeEnrolmentFactory
    -programmeEnrolmentList: ProgrammeEnrolmentListFactory
     +ProgrammeEnrolmentRepository(programmeEnrolmentFactory: ProgrammeEnrolmentFactoryImpl, programmeEnrolmentRepositoryListFactory ProgrammeEnrolmentRepositoryList
     +enrolStudents (student : Student, accessMethod : AccessMethod, programme : Programme, enrolmentDate: String)
}

class ProgrammeEnrolmentRepositoryListFactoryImpl {
    +newArrayList()
}

interface ProgrammeEnrolmentListFactory {
    +newArrayList()
}

class US09_EnrolStudentInProgrammeController {
     + US09_EnrolStudentInProgrammeController(studentRepository: StudentRepository, accessMethodRepository: AccessMethodRepository, programmeList: ProgrammeRepository, programmeEnrolmentRepository: ProgrammeEnrolmentRepository)
     + getStudentByUniqueNumber(uniqueNumber: String)
     + getAccessMethodByName(accessMethod: String)
     + getProgrammeByName(programmeName: String)
     + enrolStudent(s1: Student, am1: AccessMethod, p1: Programme, date: String)
}

class StudentRepository {
    -studentFactoryImpl: StudentFactory
    +getStudentByUniqueNumber(uniqueNumber: String)
}

class AccessMethodRepository {
    -accessMethodFactory: AccessMethodFactory
    +getAccessMethodByName(name: String)
}

class ProgrammeRepository {
    -programmeFactory: ProgrammeFactory
     +getProgrammeByName(name: String)
}

StudentRepository "1" --> "students \n*" Student
AccessMethodRepository "1" --> "_accessMethodList \n*" AccessMethod
ProgrammeRepository "1   " ---> "_programmeList *" Programme
Student "_student \n1" <-- "*" ProgrammeEnrolment
AccessMethod "_accessmethod \n1" <-- "*" ProgrammeEnrolment
Programme "_programme \n1"  <-r- "*" ProgrammeEnrolment
US09_EnrolStudentInProgrammeController "1" .r.> "_studentRepository \n1\n" StudentRepository
US09_EnrolStudentInProgrammeController "1" ..> "_accessmethodRepository \n1" AccessMethodRepository
US09_EnrolStudentInProgrammeController "1" ..l.> "_programmeList \n1\n" ProgrammeRepository
US09_EnrolStudentInProgrammeController "1" ..> "_programmeEnrolmentRepository \n1\n" ProgrammeEnrolmentRepository
ProgrammeEnrolmentRepository"1" ..> "1"ProgrammeEnrolmentFactory
ProgrammeEnrolmentFactory"1" ..> "1..* \ncreates"ProgrammeEnrolment
ProgrammeEnrolmentFactory <|.. ProgrammeEnrolmentFactoryImpl
ProgrammeEnrolmentListFactory "_programmeEnrolmentListFactory \n1" <-- "1"ProgrammeEnrolmentRepository
ProgrammeEnrolmentListFactory <|.. ProgrammeEnrolmentRepositoryListFactoryImpl
ProgrammeEnrolmentListFactory  ..> "creates\n" List
ProgrammeEnrolmentRepository"1" --> "1"List
List --> ProgrammeEnrolment

@enduml