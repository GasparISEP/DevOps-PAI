@startuml
title US38 \n As a Programme Director, I want to define the RUC for a course edition \n (Process View - Level 3 Granularity - Backend Internal Flow)

skinparam defaultTextAlignment center
skinparam shadowing true
skinparam actorBackgroundColor #lightblue
skinparam participantBackgroundColor #lightblue/white
autonumber

participant ":Router" as router <<Component>>
participant ":RESTController" as controller <<Component>>
participant ":Service" as service <<Component>>
participant ":Domain" as domain <<Component>>
participant ":Repository" as repository <<Component>>
participant ":Drivers" as drivers <<Component>>

[o-> router: GET / course-editions {}
activate router  #E1F5FE
router -> controller: findAllCourseEditions()
activate controller  #E1F5FE

controller -> service: getAllCourseEditions()
activate service  #E1F5FE

service -> repository: findAll()
activate repository  #E1F5FE

repository -> drivers: findAll()
activate drivers  #E1F5FE
drivers ->o]: findAll()
drivers <--o] : List<CourseEdition>

drivers --> repository: List<CourseEdition>
deactivate drivers

repository --> service: List<CourseEdition>
deactivate repository

service --> controller: List<CourseEdition>
deactivate service

controller --> router: 200 OK – List<CourseEditionDTO>
deactivate controller

note over router: The conversion from DTO to JSON is done\n automatically through the Spring Boot Framework

[o<-- router: 200 OK - List<CourseEditionDTO> as JSON
deactivate router

[o-> router: GET / teachers
activate router #E1F5FE

router -> controller: getAllTeachers()
activate controller  #E1F5FE

controller -> service: getAllTeachers()
activate service  #E1F5FE

service -> repository: findAll()
activate repository  #E1F5FE

repository -> drivers: findAll()
activate drivers  #E1F5FE
drivers ->o]: findAll()
drivers <--o] : List<Teacher>
drivers --> repository: List<Teacher>
deactivate drivers

repository --> service: List<Teacher>
deactivate repository

service --> controller: List<Teacher>
deactivate service

controller --> router: 200 OK – List<TeacherDTO>
deactivate controller

note over router: The conversion from DTO to JSON is done\n automatically through the Spring Boot Framework

[o<-- router: 200 OK – List<TeacherDTO> as JSON
deactivate router

[o-> router: PATCH /{id}/ruc
activate router #E1F5FE

note over router: The conversion from JSON to DTO is done\n automatically through the Spring Boot Framework

router -> controller: defineRucForACourseEdition(DefineRucRequestDTO)
activate controller  #E1F5FE

controller -> service: assignRucToCourseEdition(courseEditionID, teacherID)
activate service  #E1F5FE

service -> domain: setRuc(teacherId)
activate domain  #E1F5FE

domain --> service: true
deactivate domain

service -> repository: save(courseEdition)
activate repository  #E1F5FE

repository -> drivers: save(courseEdition)
activate drivers  #E1F5FE
drivers ->o]: INSERT INTO course_edition (teacher_id) VALUES (courseEdition.teacherId)
drivers <--o] : courseEditionDataModel: CourseEditionDataModel
drivers --> repository: courseEditionDataModel: CourseEditionDataModel
deactivate drivers

repository --> service: true
deactivate repository

service --> controller: true
deactivate service

controller --> router:  200 OK + body {DefineRucResponseDTO + hypermedia}
deactivate controller

note over router: The conversion from DTO to JSON is done\n automatically through the Spring Boot Framework

[o<-- router: 200 OK + body {DefineRucResponseDTO + hypermedia}
deactivate router
@enduml