@startuml
title: Get Programme Edition Enrollments By Student ID\n(Code View - Level 4)

autonumber

participant ":Router" as router
participant ":StudentProgrammeEditionEnrolmentController" as peeCtrl
activate peeCtrl
participant ":ProgrammeEditionEnrolmentService" as peeService
participant ":ProgrammeEditionEnrolmentRepository" as peeRepo
participant ":SchoolYearRepository" as syRepo
participant ":ProgrammeEditionEnrolmentAssembler" as peeAssembler
participant ":ProgrammeEditionEnrolmentHateoasAssembler" as peeHateoasAssembler
database DB

router -> peeCtrl: GET /programme-edition-enrolments/students?studentId={id}
peeCtrl -> peeService ++: getProgrammeEditionEnrollmentsByStudentID(StudentID)
peeService -> peeRepo ++: findProgrammeEditionsThatStudentIsEnrolled(StudentID)
peeRepo -> DB ++: SELECT programme_edition_id FROM programme_edition_enrollments\nWHERE student_id = StudentID
DB --> peeRepo --: List<ProgrammeEditionID>

peeRepo --> peeService --: List<ProgrammeEditionID>
peeService --> peeCtrl --: List<ProgrammeEditionID>

peeCtrl -> peeHateoasAssembler ++: toCollectionModel(List<ProgrammeEditionID>, StudentID)

loop for ProgrammeEditionID[i]  
    peeHateoasAssembler -> syRepo ++: findBySchoolYearID(SchoolYearID)
    syRepo -> DB ++: SELECT * FROM school_years\nWHERE id = SchoolYearID
    DB --> syRepo --: SchoolYearDataModel
    syRepo --> peeHateoasAssembler --: SchoolYear
end
peeHateoasAssembler --> peeCtrl --: CollectionModel<ProgrammeEditionEnrolmentDetailDTO>
peeCtrl --> router: CollectionModel<ProgrammeEditionEnrolmentDetailDTO>

legend right
  DTO = Data Transfer Object
  Assembler = Convert Domain to DTO
  HATEOAS Assembler = Convert Domain to EntityModel with links
end legend

@enduml