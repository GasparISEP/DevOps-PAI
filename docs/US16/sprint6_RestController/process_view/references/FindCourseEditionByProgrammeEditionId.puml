@startuml
title: Find Course Editions By Programme Edition ID\n(Code View - Level 4)

autonumber

actor "ASC" as asc
participant ":CourseEditionRestController" as ceCtrl
activate ceCtrl
participant ":ProgrammeEditionAssembler" as peAssembler
participant ":CourseEditionEnrolmentService" as ceService
participant ":CourseEditionRepository" as ceRepo
participant ":CourseEditionAssembler" as ceAssembler
participant ":CourseEditionMapper" as ceMapper
participant ":CourseEditionFactory" as ceFactory
database DB

asc -> ceCtrl: getCourseEditionsByProgrammeEditionID(programmeEditionIdDto)
ceCtrl -> peAssembler ++: toDomain(programmeEditionIdDto)
peAssembler --> ceCtrl --: ProgrammeEditionID

ceCtrl -> ceService ++: findByProgrammeEditionId(ProgrammeEditionID)
ceService -> ceRepo ++: findCourseEditionsByProgrammeEditionID(ProgrammeEditionID)
ceRepo -> DB ++: SELECT * FROM course_editions WHERE programme_edition_id = ProgrammeEditionID
DB --> ceRepo --: List<CourseEditionDataModel>

loop for CourseEditionDataModel[i]
ceRepo -> ceMapper ++: toDomain(CourseEditionDataModel[i])
ceMapper -> ceFactory ++: newCourseEditionID(id, courseId, programmeEditionIdDto)
note over of ceFactory
    Creates a new
    CourseEditionID object
end note
ceFactory --> ceMapper --: CourseEditionID
ceMapper --> ceRepo --: List<CourseEditionID>
end

ceRepo -> ceService: List<CourseEditionID>
ceService --> ceCtrl --: List<CourseEditionID>
ceCtrl -> ceAssembler ++: toDtoList(List<CourseEditionID>)

loop for CourseEditionID[i]
    note over of ceAssembler
        Invokes CourseEditionResponseDTO
             to construct object
    end note
end
ceAssembler --> ceCtrl --: List<CourseEditionResponseDTO>
ceCtrl --> asc: List<CourseEditionResponseDTO>

legend right
  DTO = Data Transfer Object
  Mapper = Convert DataModel to Domain
  Assembler = Convert Domain to DTO
end legend

@enduml 