@startuml
!pragma layout smetana


class US16_EnrollAStudentInACourseEditionController {
    +US16_EnrollAStudentInACourseEditionController(ceeRepository: CourseEditionEnrollmentRepository,
    peeRepository: ProgrammeEditionEnrollmentRepo , courseEditionRepository: CourseEditionRepository)
    +enrollStudentInCourseEdition(student: Student, courseEdition: CourseEdition): boolean
}

class CourseEditionEnrollmentFactory{
    +createCourseEditionEnrollment(student: Student, courseEdition: CourseEdition, enrollmentDate: LocalDate)
}

class CourseEditionEnrollment {
    -_enrollmentDate: LocalDate
    +CourseEditionEnrollment(student:Student, courseEdition: CourseEdition,
     enrollmentDate: LocalDate)
    +equals (obj: Object): boolean
}

class CourseEditionEnrollmentRepository {
    +CourseEditionEnrollmentRepository (courseEditionEnrollmentFactory: CourseEditionEnrollmentFactory)
    +enrollStudentInACourseEdition (student: Student, courseEdition: CourseEdition,
    enrollmentDate: LocalDate): boolean
}

class ProgrammeEditionEnrollment {
    -_enrollmentDate: LocalDate
    +ProgrammeEditionEnrollment(student:Student, programmeEdition: ProgrammeEdition,
     enrollmentDate: LocalDate)
    +getStudentUniqueNumber() : int
    +findProgrammeEditionInEnrollment () : ProgrammeEdition
}

class ProgrammeEditionEnrollmentRepo {
    +ProgrammeEditionEnrollmentRepo(programmeEditionEnrollmentFactory: ProgrammeEditionEnrollmentFactory)
    +isStudentEnrolledInThisProgrammeEdition(student: Student, programmeEdition: ProgrammeEdition) : boolean
}

class Student {
    -_uniqueNumber:int
    -_name:String
    -_NIF:String
    -_phone:String
    -_email:String
    +Student(uniqueNumber: int, name: String, NIF: String, phone: String, email: String, address: Address)
    +getUniqueNumber () : int
}

class Address {
     -_street:String
     -_postalCode: String
     -_location: String
     -_country: String
     +Address(street: String, postalCode: String, location: String, country: String)
}

class CourseEdition {
    +CourseEdition(programmeEdition: ProgrammeEdition, course: Course)
    +Equals(objectToCompare: Object) : boolean
    +whatProgrammeEditionBelongsThisCourseEdition () : ProgrammeEdition
}

class CourseEditionRepository {
    +CourseEditionRepository(courseEditionFactory: CourseEditionFactory)
    +findWhichProgrammeEditionBelongsToACourseEdition(courseEdition: CourseEdition) : ProgrammeEdition
}

CourseEdition "_listCourseEditions  *      " <-- "1" CourseEditionRepository
Student "_student  1             " <-- "*" CourseEditionEnrollment
CourseEditionEnrollment "*" --> "_courseEdition  1        " CourseEdition
CourseEditionEnrollmentFactory "  1  " --> " _courseEditionEnrollment    1        " CourseEditionEnrollment
CourseEditionEnrollmentFactory "_courseEditionEnrollmentFactory 1          " <-- "   1 " CourseEditionEnrollmentRepository
ProgrammeEditionEnrollment " *" --> "1    _student                 " Student
ProgrammeEditionEnrollment " *  _listProgrammeEditionEnrollment    " <-- "1 " ProgrammeEditionEnrollmentRepo
US16_EnrollAStudentInACourseEditionController "1 "..> "1      " CourseEditionRepository
US16_EnrollAStudentInACourseEditionController "1 "..> "  1" ProgrammeEditionEnrollmentRepo
US16_EnrollAStudentInACourseEditionController "1"..> "1       " CourseEditionEnrollmentRepository
Address "_address  1   " <-- " 1  " Student

@enduml