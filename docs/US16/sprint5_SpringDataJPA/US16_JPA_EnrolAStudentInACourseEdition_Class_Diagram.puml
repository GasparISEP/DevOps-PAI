@startuml
skinparam ranksep 60
skinparam nodesep 60
skinparam linetype ortho
skinparam classBackgroundColor #E1F5FE


class US16_EnrolAStudentInACourseEditionController {
    +US16_EnrolAStudentInACourseEditionController(_courseEditionEnrolmentService: ICourseEditionEnrolmentService)
    +enrolStudentInCourseEdition(studentId: StudentID, courseEditionId: CourseEditionID): boolean
    +findProgrammeEditionIDsThatStudentIsEnrolled(studentId: StudentID): List<ProgrammeEditionID>
    +findCourseEditionIDsByProgrammeEdition(programmeEditionId: ProgrammeEditionID): List<CourseEditionID>
}

class CourseEditionEnrolmentServiceImpl {
    +CourseEditionEnrolmentServiceImpl (ceeFactoryInterface : ICourseEditionEnrolmentFactory, ceeRepositoryInterface : ICourseEditionEnrolmentRepository,
    peeRepositoryInterface : IProgrammeEditionEnrolmentRepository, courseEditionRepositoryInterface : ICourseEditionRepository)
    +findProgrammeEditionIDsThatStudentIsEnrolled(studentId: StudentID): List<ProgrammeEditionID>
    +findCourseEditionIDsByProgrammeEditionID(programmeEditionId: ProgrammeEditionID): List<CourseEditionID>
    +enrolStudentInCourseEdition(studentId: StudentID, courseEditionId: CourseEditionID): boolean
}

class CourseEditionEnrolmentRepositoryImpl {
    +CourseEditionEnrolmentRepository\n (springDataRepository: ICourseEditionEnrolmentRepositorySpringData,\n mapper: ICourseEditionEnrolmentMapper,\n idMapper: ICourseEditionEnrolmentIDMapper,\n iStudentIDMapper: IStudentIDMapper,
    iCourseEditionIDMapper: ICourseEditionIDMapper)
    +enrolStudentInACourseEdition\n (courseEditionEnrolment: CourseEditionEnrolment): boolean
    +isStudentEnrolledInCourseEdition\n (studentId: StudentID, (courseEditionID: CourseEditionID)): boolean
}

class CourseEditionEnrolmentRepositorySpringDataJPAImpl {
    +CourseEditionEnrolmentRepository\n(courseEditionEnrolmentFactory: ICourseEditionEnrolmentFactory,
    courseEditionEnrolmentSpringDataJPAInterface: ICourseEditionEnrolmentRepositorySpringDataJPA)
    +enrolStudentInACourseEdition\n(courseEditionEnrolment: CourseEditionEnrolment): boolean
    +isStudentEnrolledInCourseEdition\n(studentId: StudentID, (courseEditionID: CourseEditionID)): boolean
}

class ProgrammeEditionEnrolmentRepositoryImpl {
    +ProgrammeEditionEnrolmentRepository\n(programmeEditionEnrolmentFactory: IProgrammeEditionEnrolmentFactory,
    programmeEditionEnrolmentListFactory: IProgrammeEditionEnrolmentListFactory)
    +findProgrammeEditionsThatStudentIsEnrolled\n(studentId: StudentID): List<ProgrammeEditionID>
}

class ProgrammeEditionEnrolmentRepositorySpringDataJPAImpl {
    +ProgrammeEditionEnrolmentRepository \n(programmeEditionEnrolmentFactory: IProgrammeEditionEnrolmentFactory,\n programmeEditionEnrolmentSpringJPAInterface: IProgrammeEditionSpringDataJPA)
    +findProgrammeEditionsThatStudentIsEnrolled \n(studentId: StudentID): List<ProgrammeEdition>
}

class CourseEditionRepositoryImpl {
    +CourseEditionRepository(courseEditionFactory: ICourseEditionFactoryDDD, courseEditionListFactory: ICourseEditionListFactoryDDD)
    +findCourseEditionsByProgrammeEdition(programmeEditionId: ProgrammeEditionID) : List<CourseEditionID>
}

class CourseEditionRepositorySpringDataJPAImpl {
    +CourseEditionRepository(courseEditionFactory: ICourseEditionFactory, courseEditionSpringDataJPAInterface: ICourseEditionSpringDataJPA)
    +findCourseEditionsByProgrammeEdition(programmeEditionId: ProgrammeEditionID) : List<CourseEdition>
}

class CourseEditionEnrolmentFactoryImpl{
    +createCourseEditionEnrolment\n(studentId: StudentID, courseEditionId: CourseEditionID):\n CourseEditionEnrolment
    +createWithEnrolmentDate\n(studentId: StudentID, courseEditionID: CourseEditionID, enrolmentDate: Date, isActive: boolean):\n CourseEditionEnrolment
}

class CourseEditionEnrolmentListFactoryImpl {
    +getCourseEditionEnrolmentList():\n Set<CourseEditionEnrolment>
}

class ProgrammeEditionEnrolmentFactoryImpl {
    +newProgrammeEditionEnrolment \n(studentId: StudentID, programmeEditionId: ProgrammeEditionID):\nProgrammeEditionEnrolment
    +createWithEnrolmentDate\n(studentId: StudentID,\n programmeEditionId: ProgrammeEditionID,\n enrolmentDate: Date, isActive: EnrolmentStatus):\nProgrammeEditionEnrolment
}

'Interfaces

interface ICourseEditionEnrolmentService {
    +findProgrammeEditionIDsThatStudentIsEnrolled(studentId: StudentID): List<ProgrammeEditionID>
    +findCourseEditionIDsByProgrammeEdition(programmeEditionID: ProgrammeEditionID): List<CourseEditionID>
    +enrolStudentInCourseEdition(studentId: StudentID, courseEditionId: CourseEditionID): boolean
}

interface ICourseEditionEnrolmentRepository {
    +enrolStudentInACourseEdition (studentId: StudentID, courseEditionId: CourseEditionID): boolean
    +isStudentEnrolledInCourseEdition(studentId: StudentID, (courseEditionID: CourseEditionID)): boolean
}

interface ICourseEditionEnrolmentRepositorySpringDataJPA {
    +existsById_StudentIDAndId_CourseEditionIDAndIsActiveTrue\n(studentId: StudentIDDataModel, courseEditionId: CourseEditionIDDataModel): boolean
    +countById_CourseEditionIDAndIsActiveIsTrue(courseEditionId: CourseEditionID): long
    +findById_StudentIDAndId_CourseEditionID(): Optional<CourseEditionEnrolmentDataModel>
}

interface IProgrammeEditionEnrolmentRepository {
     +findProgrammeEditionsThatStudentIsEnrolled\n(studentId: StudentID): List<ProgrammeEditionID>
}

interface ICourseEditionRepository {
     +findCourseEditionsByProgrammeEdition(programmeEditionId: ProgrammeEditionID) : List<CourseEditionID>
}

interface ICourseEditionEnrolmentListFactory{
    +getCourseEditionEnrolmentList():\n Set<CourseEditionEnrolment>
}

interface ICourseEditionEnrolmentFactory{
    +createCourseEditionEnrolment\n(studentId: StudentID, courseEditionId: CourseEditionID):\n CourseEditionEnrolment
    +createWithEnrolmentDate\n(studentId: StudentID, courseEditionID: CourseEditionID, enrolmentDate: LocalDate, isActive: boolean):\n CourseEditionEnrolment
}

interface Set {
    +add(courseEditionEnrolment:\n CourseEditionEnrolment): boolean
}

interface IProgrammeEditionEnrolmentRepositorySpringDataJPA {
    +findAllById_ProgrammeEditionIdDataModel \n(programmeEditionIdDataModel: ProgrammeEditionIDDataModel): \nList<ProgrammeEditionEnrolmentDataModel>
    +findById_StudentIdDataModelAndId_ProgrammeEditionIdDataModel \n(studentId: StudentIDDataModel,\n programmeEditionId: ProgrammeEditionIdDataModel): \nOptional<ProgrammeEditionEnrolmentDataModel>
}

interface ICourseEditionRepositorySpringDataJPA {
}

interface ICourseEditionEnrolmentRepositorySpringDataJPA{
}

interface ICourseEditionRepositorySpringDataJPA{
}

interface ICourseEditionFactory {
}

interface IProgrammeEditionEnrolmentFactory {
    +newProgrammeEditionEnrolment\n(studentId: StudentID, programmeEditionId: ProgrammeEditionID):\n ProgrammeEditionEnrolment
    +createWithEnrolmentDate\n(studentId: StudentID,\n programmeEditionId: ProgrammeEditionID,\n enrolmentDate: Date,\n isActive: EnrolmentStatus):\nProgrammeEditionEnrolment
}

interface ICourseEditionIDMapper {
    +toDomain(courseEditionIDDataModel: CourseEditionIDDataModel,\n programmeEditionIdMapper: IProgrammeEditionIdMapper,\n courseInStudyPlanIDMapper: ICourseInStudyPlanIDMapper): CourseEditionID
    +toDataModel(courseEditionID: CourseEditionID)): CourseEditionIDDataModel
}

interface ICourseEditionEnrolmentMapper {
    +toDomain\n(courseEditionEnrolmentDataModel: CourseEditionEnrolmentDataModel):\n Optional<CourseEditionEnrolmentID>
    +toDataModel\n(courseEditionEnrolment: CourseEditionEnrolment):\n Optional<CourseEditionEnrolmentDataModel>
}

interface ICourseEditionEnrolmentIDMapper {
    +toDomain\n(courseEditionEnrolmentIDDataModel: CourseEditionEnrolmentIDDataModel):\n Optional<CourseEditionEnrolmentID>
    +toDataModel\n(courseEditionEnrolmentID: CourseEditionEnrolmentID):\n Optional<CourseEditionEnrolmentIDDataModel>
}

interface IProgrammeEditionEnrolmentMapper {
    +toDataModel\n(ProgrammeEditionEnrolment programmeEditionEnrolment):\n ProgrammeEditionEnrolmentDataModel
    +toDomain\n(dataModel: ProgrammeEditionEnrolmentDataModel):\n ProgrammeEditionEnrolment
}

'VO's

class "<<Value Object>>\n EnrolmentStatus" {
     -_isActive: boolean
     +EnrollmentStatus(isActive: boolean)
}

class "<<Value Object>>\n CourseEditionEnrolmentID" {
     -_courseEditionId: CourseEditionID
     -_studentId: StudentID
     +CourseEditionEnrolmentID(studentId: StudentID, courseEditionId: CourseEditionID))
     +equals (obj: Object) : boolean
     +hashCode(): int
     +toString(): String
}

class "<<Value Object>>\n CourseEditionID" {
     -_programmeEditionID: ProgrammeEditionID
     -_courseInStudyPlanID: CourseInStudyPlanID
     +CourseEditionID(programmeEditionId: ProgrammeEditionID,
     courseInStudyPlanId: CourseInStudyPlanID)
}


class "<<Value Object>>\n StudentID" {
     -_uniqueNumber: int
     +StudentID (uniqueNumber: int)
}

class "<<Value Object>>\n Name" {
     -_name: String
     +Name (name: String)
}

class "<<Value Object>>\n NIF" {
     -_NIF: String
     -_country: Country
     +NIF (nif: String, country: Country)
}

class "<<Value Object>>\n Email" {
     -_email: String
     +Email (email: String)
}

class "<<Value Object>>\n PhoneNumber" {
     -_countryCode: String
     -_number: String
     +PhoneNumber (countryCode: String, number: String)
}

class "<<Value Object>>\n Address" {
     -_street: Street
     -_country: Country
     -_postalCode: PostalCode
     -_location: Location
     +Address(street: Street, postalCode: PostalCode, location: Location, country: Country)
}

class "<<Value Object>>\n Street" {
     -_street: String
     +Street(street: String)
}

class "<<Value Object>>\n PostalCode" {
     -_postalCode: String
     +PostalCode(postalCode: String)
}

class "<<Value Object>>\n Location" {
     -_locationName: String
     +Location(locationName: String)
}

class "<<Value Object>>\n Country" {
     -_country: String
     +Country(country: String)
}
class "<<Value Object>>\n Date" {
     -localDate: LocalDate
     +Date (localDate : LocalDate)
}

class "<<Value Object>>\n ProgrammeEditionEnrolmentID" {
     -_programmeEditionId: ProgrammeEditionID
     -_studentId: StudentID
     -_schoolYearId: SchoolYearID
     +ProgrammeEditionEnrolmentID\n(programmeEditionId: ProgrammeEditionID,\n studentId: StudentID, schoolYearId: SchoolYearID)
     +equals (obj: Object): boolean
     +hashCode (): int
     +toString (): String
}

'Aggregate

package "CourseEdition Aggregate" #LightBlue{
    class CourseEdition <<Root>> <<Entity>> {
    +CourseEdition(programmeEditionId: ProgrammeEditionID, courseInStudyPlanId: CourseInStudyPlanID, courseEditionId: CourseEditionID)
    +getProgrammeEditionID() : ProgrammeEditionID
    +identity(): CourseEditionID
    }
}

package "Student Aggregate" #LightBlue{
    class Student <<Root>> <<Entity>> {
    +Student(studentID: StudentID, name: Name,
    NIF: NIF, phone: PhoneNumber, email: Email, address: Address,
    academicEmail: StudentAcademicEmail)
    }
}

package "ProgrammeEditionEnrolment Aggregate" #LightBlue {
    class ProgrammeEditionEnrolment <<Root>> <<Entity>> {
    +ProgrammeEditionEnrolment(studentId: StudentID, programmeEditionId: ProgrammeEditionID)
    +ProgrammeEditionEnrolment(studentId: StudentID, programmeEditionId: ProgrammeEditionID, enrolmentDate: Date, isActive: EnrolmentStatus)
    +findStudentInProgrammeEdition () : StudentID
    +findProgrammeEditionInEnrolment () : ProgrammeEditionID
    }
}

package "CourseEdition Aggregate" #LightBlue{
    class CourseEdition <<Root>> <<Entity>> {
    +CourseEdition(programmeEditionId: ProgrammeEditionID, courseInStudyPlanId: CourseInStudyPlanID, courseEditionId: CourseEditionID)
    +getProgrammeEditionID() : ProgrammeEditionID
    +identity(): CourseEditionID
    }
}

package "CourseEditionEnrolment Aggregate" #LightBlue {
    class CourseEditionEnrolment <<Root>> <<Entity>> {
             +CourseEditionEnrolment(studentId:StudentID,
              courseEditionId: CourseEditionID)
             +equals (obj: Object): boolean
             +hashCode(): int
             +sameAs(obj: Object): boolean
    }
}

'DataModel's

class CourseEditionEnrolmentDataModel {
    -id: CourseEditionEnrolmentIDDataModel
    -enrolmentDate: String
    -isActive: boolean
    -version: Long
    +CourseEditionEnrolmentDataModel()
    +CourseEditionEnrolmentDataModel\n(id: CourseEditionEnrolmentIDDataModel,\n enrolmentDate: String, isActive: boolean))
    +findID(): CourseEditionEnrolmentDataModel
    +findEnrolmentDate(): String
    +isActive(): boolean
    +hashCode(): int
    +equals(o: Object)): boolean
}

class CourseEditionIDDataModel {
    +CourseEditionIDDataModel\n(programmeEditionIdDataModel: ProgrammeEditionIdDataModel,\n courseInStudyPlanIDDataModel: CourseInStudyPlanIDDataModel)
}

class ProgrammeEditionEnrolmentDataModel {
    -_programmeEditionEnrolmentIDDataModel: \n ProgrammeEditionEnrolmentIDDataModel
    +ProgrammeEditionEnrolmentDataModel\n(programmeEditionEnrolmentIDDataModel: \n ProgrammeEditionEnrolmentIDDataModel,\n enrolmentDate: LocalDate, isActive: boolean)
    +equals(o: Object): boolean
    +hashCode(): int
}

'ID's

class CourseEditionEnrolmentIDDataModel {
    -studentID: int
    -courseEditionID: CourseEditionIDDataModel
    +CourseEditionEnrolmentIDDataModel\n(studentID: int, courseEditionID: CourseEditionIDDataModel)
    +findStudentID(): int
    +findCourseEditionID(): CourseEditionIDDataModel
    +equals(o: Object): boolean
    +hashCode(): int
    +toString(): String
}

class ProgrammeEditionEnrolmentIDDataModel {
    -_studentId: String
    -_programmeEditionId: String
    +ProgrammeEditionEnrolmentIDDataModel\n(studentId: String,\n programmeEditionId: String)
    +getStudentId(): String
    +getProgrammeEditionID(): String
    +equals(o: Object): boolean
    +hashCode(): int
}

class CourseEditionIDMapperImpl {
    +toDomain(courseEditionIDDataModel: CourseEditionIDDataModel,\n programmeEditionIdMapper: IProgrammeEditionIdMapper,\n courseInStudyPlanIDMapper: ICourseInStudyPlanIDMapper):\n CourseEditionID
    +toDataModel(courseEditionID: CourseEditionID):\n CourseEditionIDDataModel
}

'Mapper's

class CourseEditionEnrolmentMapperImpl{
    -idMapper ICourseEditionEnrolmentIDMapper
    -factory ICourseEditionEnrolmentFactory
    +CourseEditionEnrolmentMapperImpl \n(idMapper: ICourseEditionEnrolmentIDMapper,\n factory: ICourseEditionEnrolmentFactory)
    +toData(courseEditionEnrolment:\n CourseEditionEnrolment):\n Optional<CourseEditionEnrolmentDataModel>
    +toDomain(courseEditionEnrolmentDataModel:\n CourseEditionEnrolmentDataModel):\n Optional<CourseEditionEnrolment>
}

class CourseEditionEnrolmentIDMapperImpl {
    +toDomain(courseEditionEnrolmentIDDataModel: CourseEditionEnrolmentIDDataModel): Optional<CourseEditionEnrolmentID>
    +toDataModel(courseEditionEnrolmentID: CourseEditionEnrolmentID): Optional<CourseEditionEnrolmentIDDataModel>
}

class ProgrammeEditionEnrolmentMapper{
    +toDataModel\n(ProgrammeEditionEnrolment programmeEditionEnrolment):\n ProgrammeEditionEnrolmentDataModel
    +toDomain\n(dataModel: ProgrammeEditionEnrolmentDataModel):\n ProgrammeEditionEnrolment
}

'Controller

US16_EnrolAStudentInACourseEditionController "1   ".u.> "1    " ICourseEditionEnrolmentService

'Service

ICourseEditionEnrolmentService "1   ".u.> "1    " ICourseEditionRepository
ICourseEditionEnrolmentService "1  "..> "1       " IProgrammeEditionEnrolmentRepository
ICourseEditionEnrolmentService "1   "..> "  1    " ICourseEditionEnrolmentRepository
ICourseEditionEnrolmentService "1   "..> "  1    " ICourseEditionEnrolmentFactory
CourseEditionEnrolmentServiceImpl ..|> ICourseEditionEnrolmentService

'Course Edition Enrolment Repository

ICourseEditionEnrolmentRepository <|.. CourseEditionEnrolmentRepositoryImpl
ICourseEditionEnrolmentRepository <|.. CourseEditionEnrolmentRepositorySpringDataJPAImpl

CourseEditionEnrolmentRepositorySpringDataJPAImpl --> ICourseEditionEnrolmentRepositorySpringDataJPA
CourseEditionEnrolmentRepositorySpringDataJPAImpl --> ICourseEditionEnrolmentFactory
CourseEditionEnrolmentRepositorySpringDataJPAImpl ..> CourseEditionEnrolment
CourseEditionEnrolmentRepositorySpringDataJPAImpl --> CourseEditionEnrolmentMapperImpl
ICourseEditionEnrolmentRepositorySpringDataJPA ..> CourseEditionEnrolmentDataModel

CourseEditionEnrolmentRepositoryImpl " 1  " -u-> "_setOfCee  1       " Set
Set "   1            " -->  CourseEditionEnrolment
CourseEditionEnrolmentRepositoryImpl"   1  " ..> " *   ""CourseEditionEnrolment Aggregate"
CourseEditionEnrolmentRepositoryImpl "1  " .u.> "1  " ICourseEditionEnrolmentListFactory
CourseEditionEnrolmentRepositoryImpl "1  " -u-> "1  " ICourseEditionEnrolmentFactory

'ProgrammeEditionEnrolmentRepository

IProgrammeEditionEnrolmentRepository <|.l.  ProgrammeEditionEnrolmentRepositoryImpl
IProgrammeEditionEnrolmentRepository <|.l.  ProgrammeEditionEnrolmentRepositorySpringDataJPAImpl

ProgrammeEditionEnrolmentRepositorySpringDataJPAImpl --> ProgrammeEditionEnrolmentMapper
ProgrammeEditionEnrolmentRepositorySpringDataJPAImpl ..> ProgrammeEditionEnrolment
ProgrammeEditionEnrolmentRepositorySpringDataJPAImpl ..> ProgrammeEditionEnrolmentDataModel
ProgrammeEditionEnrolmentRepositorySpringDataJPAImpl --> IProgrammeEditionEnrolmentFactory
IProgrammeEditionEnrolmentRepositorySpringDataJPA ..> ProgrammeEditionEnrolmentDataModel
IProgrammeEditionEnrolmentRepositorySpringDataJPA <-- ProgrammeEditionEnrolmentRepositorySpringDataJPAImpl

ProgrammeEditionEnrolment " *    " <.. "1   " ProgrammeEditionEnrolmentRepositoryImpl
ProgrammeEditionEnrolmentMapper ..> IProgrammeEditionEnrolmentFactory
ProgrammeEditionEnrolmentMapper ..> ProgrammeEditionEnrolment
ProgrammeEditionEnrolmentMapper ..> ProgrammeEditionEnrolmentDataModel

'CourseEdition Repository

ICourseEditionRepository <|.. CourseEditionRepositoryImpl
ICourseEditionRepository <|.. CourseEditionRepositorySpringDataJPAImpl
CourseEdition "_listOfCE *" <-- "1       " CourseEditionRepositoryImpl
ICourseEditionRepositorySpringDataJPA ..> CourseEditionIDDataModel
ICourseEditionRepositorySpringDataJPA <-- CourseEditionRepositorySpringDataJPAImpl
CourseEditionRepositorySpringDataJPAImpl --> CourseEditionIDMapperImpl
CourseEditionRepositorySpringDataJPAImpl ..> CourseEdition
CourseEditionRepositorySpringDataJPAImpl ..> CourseEditionIDDataModel
CourseEditionIDMapperImpl ..> ICourseEditionFactory
CourseEditionIDMapperImpl ..> CourseEdition
CourseEditionIDMapperImpl ..> CourseEditionIDDataModel

CourseEditionIDMapperImpl --> ICourseEditionIDMapper

'Factory

ICourseEditionEnrolmentFactory <|.. CourseEditionEnrolmentFactoryImpl
ICourseEditionEnrolmentListFactory <|.. CourseEditionEnrolmentListFactoryImpl

ICourseEditionEnrolmentFactory "1  " ..> "1  " CourseEditionEnrolment
ICourseEditionEnrolmentListFactory "1  " .u.> "1  " Set

IProgrammeEditionEnrolmentFactory <|.. ProgrammeEditionEnrolmentFactoryImpl
IProgrammeEditionEnrolmentFactory "1"..> "1" ProgrammeEditionEnrolment

ICourseEditionFactory <|.. CourseEditionFactoryImpl
ICourseEditionFactory "1"..> "1"CourseEdition


'Domain Aggregates

Student "1" --> "1 _studentID" "<<Value Object>>\n StudentID"
Student "1" --> "1 _name" "<<Value Object>>\n Name"
Student "1" --> "1 _NIF" "<<Value Object>>\n NIF"
Student "1" --> "1 _email" "<<Value Object>>\n Email"
Student "1" --> "1 _phoneNumber" "<<Value Object>>\n PhoneNumber"
Student "1" -l-> "1 _address" "<<Value Object>>\n Address"

"<<Value Object>>\n Address" "1" -u-> "1 _street" "<<Value Object>>\n Street"
"<<Value Object>>\n Address" "1" --> "1 _postalCode" "<<Value Object>>\n PostalCode"
"<<Value Object>>\n Address" "1" --> "1 _location" "<<Value Object>>\n Location"
"<<Value Object>>\n Address" "1" --> "1 _country" "<<Value Object>>\n Country"

ProgrammeEditionEnrolment "      *  " -u-> "_studentID 1    ""<<Value Object>>\n StudentID"
ProgrammeEditionEnrolment " *    " <-- "1   " ProgrammeEditionEnrolmentRepositoryImpl
ProgrammeEditionEnrolment " 1    " --> "1  _date " "<<Value Object>>\n Date"
ProgrammeEditionEnrolment " 1    " --> "1  _peeID " "<<Value Object>>\n ProgrammeEditionEnrolmentID"

CourseEditionEnrolment "1" --> "1 _ceeID""<<Value Object>>\n CourseEditionEnrolmentID"
CourseEditionEnrolment "1" --> "  1_status  ""<<Value Object>>\n EnrolmentStatus"
CourseEditionEnrolment "1" --> "_date 1    ""<<Value Object>>\n Date"
CourseEditionEnrolment "1" -u-> "1 _studentID" "<<Value Object>>\n StudentID"
CourseEditionEnrolment "1" --> "_ceID 1    " "<<Value Object>>\n CourseEditionID"

CourseEdition "1" --> "_ceID  1" "<<Value Object>>\n CourseEditionID"

'DataModel's

CourseEditionEnrolmentIDDataModel <- CourseEditionEnrolmentDataModel

ProgrammeEditionEnrolmentIDDataModel <- ProgrammeEditionEnrolmentDataModel

CourseEditionEnrolmentIDMapperImpl --> ICourseEditionEnrolmentIDMapper

CourseEditionEnrolmentIDMapperImpl ..> ICourseEditionEnrolmentFactory

ProgrammeEditionEnrolmentMapper ..> IProgrammeEditionEnrolmentMapper

ICourseEditionEnrolmentMapper <-- CourseEditionEnrolmentMapperImpl
@enduml