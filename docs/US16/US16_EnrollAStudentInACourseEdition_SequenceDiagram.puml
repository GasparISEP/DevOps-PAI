@startuml
title US16: Enroll a student in a course edition

actor ASC
participant ":UI" as UI
ASC -> UI: I want to enroll a student in a course edition!
activate UI
UI --> ASC: What Student?
deactivate UI

ASC -> UI: Enter the student!
activate UI
participant ":US16_EnrollAStudentInACourseEditionController" as Controller
UI -> Controller: getProgrammeEditionsThatStudentIsEnrolled (student)
activate Controller
participant ":ProgrammeEditionEnrollmentRepo" as ProgrammeEditionEnrollmentRepository
Controller -> ProgrammeEditionEnrollmentRepository: getProgrammeEditionsThatStudentIsEnrolled (student)
activate ProgrammeEditionEnrollmentRepository
loop for each "pe[i]:ProgrammeEditionEnrollmentRepo" as ProgrammeEditionEnrollmentRepo
participant ":ProgrammeEditionEnrollment" as ProgrammeEditionEnrollment
ProgrammeEditionEnrollmentRepository -> ProgrammeEditionEnrollment :  findStudentInProgrammeEditionEnrollment()
activate ProgrammeEditionEnrollment
ProgrammeEditionEnrollment --> ProgrammeEditionEnrollmentRepository : pe1
deactivate ProgrammeEditionEnrollment
participant ":ProgrammeEditionEnrollmentListFactory" as ProgrammeEditionEnrollmentListFactory
ProgrammeEditionEnrollmentRepository -> ProgrammeEditionEnrollmentListFactory:  add(pe1)
activate ProgrammeEditionEnrollmentListFactory
ProgrammeEditionEnrollmentListFactory --> ProgrammeEditionEnrollmentRepository: true
deactivate ProgrammeEditionEnrollmentListFactory
end
ProgrammeEditionEnrollmentRepository --> Controller: ListOfProgrammeEditions
deactivate ProgrammeEditionEnrollmentRepository
Controller --> UI: ListOfProgrammeEditions
deactivate Controller
UI --> ASC: Here is a list of programme editions the student is enrolled in. What Programme Edition?
deactivate UI

ASC -> UI: Enter the programme edition!
activate UI
UI -> Controller: getCourseEditionsOfProgrammeEdition (programmeEdition)
activate Controller
participant ":CourseEditionRepository" as CourseEditionRepository
Controller -> CourseEditionRepository: findCourseEditionsByProgrammeEdition (programmeEdition)
activate CourseEditionRepository
loop for each "ce[i]:CourseEditionRepository" as CourseEditionRepository
CourseEditionRepository -> CourseEdition :  whatProgrammeEditionBelongsThisCourseEdition()
activate CourseEdition
CourseEdition --> CourseEditionRepository : ce1
deactivate CourseEdition
participant ":CourseEditionListFactory" as CourseEditionListFactory
CourseEditionRepository -> CourseEditionListFactory :  add(ce1)
activate CourseEditionListFactory
CourseEditionListFactory --> CourseEditionRepository: true
deactivate CourseEditionListFactory
end
CourseEditionRepository --> Controller: ListOfCourseEditions
deactivate CourseEditionRepository
Controller --> UI: ListOfCourseEditions
deactivate Controller
UI --> ASC: Here is a list of Course Editions! What Course Edition?
deactivate UI

ASC -> UI: Enter the course edition!
activate UI
UI --> ASC: Sure?
deactivate UI
ASC -> UI: Yes!
activate UI

UI -> Controller: enrollStudentInCourseEdition (student, courseEdition)
activate Controller

participant ":CourseEditionEnrollmentRepository" as CourseEditionEnrollmentRepository
Controller -> CourseEditionEnrollmentRepository: enrollStudentInCourseEdition (st1, ce1, enrollmentDate)
activate CourseEditionEnrollmentRepository
participant ":CourseEditionEnrollmentFactory" as CourseEditionEnrollmentFactory
CourseEditionEnrollmentRepository -> CourseEditionEnrollmentFactory: createCourseEditionEnrollment (st1,ce1,enrollmentDate)
activate CourseEditionEnrollmentFactory
create "cee1:CourseEditionEnrollment"
CourseEditionEnrollmentFactory -> "cee1:CourseEditionEnrollment" : createCourseEditionEnrollment (st1, ce1, enrollmentDate)
activate "cee1:CourseEditionEnrollment"
"cee1:CourseEditionEnrollment" --> CourseEditionEnrollmentFactory: cee1
deactivate "cee1:CourseEditionEnrollment"
CourseEditionEnrollmentFactory --> CourseEditionEnrollmentRepository: cee1
deactivate CourseEditionEnrollmentFactory
participant ":CourseEditionEnrollmentListFactory" as CourseEditionEnrollmentListFactory
CourseEditionEnrollmentRepository --> CourseEditionEnrollmentListFactory: add (cee1)
activate CourseEditionEnrollmentListFactory
CourseEditionEnrollmentListFactory -> CourseEditionEnrollmentRepository: true
deactivate CourseEditionEnrollmentListFactory
CourseEditionEnrollmentRepository --> Controller: True
deactivate CourseEditionEnrollmentRepository
Controller --> UI: True
deactivate Controller
UI --> ASC: OK!
deactivate UI

@enduml
