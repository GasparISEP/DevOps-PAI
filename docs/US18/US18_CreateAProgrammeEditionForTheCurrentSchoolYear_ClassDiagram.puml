@startuml

skinparam ranksep 50
skinparam nodesep 50
'skinparam linetype ortho

class US18_CreateProgrammeEditionForCurrentSchoolYearController {
    + US18_CreateProgrammeEditionForCurrentSchoolYearController(programmeEditionRepository : ProgrammeEditionRepository, schoolYearRepository : SchoolYearRepository, programmeList : ProgrammeList)
    + getAllProgrammeNames() : List<String>
    + createAProgrammeEditionForTheCurrentSchoolYear(programmeName : ProgrammeName) : boolean
}


interface IProgrammeEditionRepository {
    + createProgrammeEdition(programmeID : ProgrammeID, schoolYearID : SchoolYearID) : boolean
    + findProgrammeEditionBySchoolYearAndProgramme(programmeID : ProgrammeID, schoolYearID : SchoolYearID) : Optional <ProgrammeEdition>
    + getAllProgrammeEditions() : List<ProgrammeEdition>
}

class ProgrammeEditionRepositoryImpl {
    + ProgrammeEditionRepositoryImpl (IProgrammeEditionFactory iProgrammeEditionFactory, IProgrammeEditionListFactory iProgrammeEditionListFactory)
    + createProgrammeEdition(programmeID : ProgrammeID, schoolYearID : SchoolYearID) : boolean
    + findProgrammeEditionBySchoolYearAndProgramme(programmeID : ProgrammeID, schoolYearID : SchoolYearID) : Optional <ProgrammeEdition>
    + getAllProgrammeEditions() : List<ProgrammeEdition>
}

Interface IProgrammeEditionListFactory {
    createProgrammeEditionList() : List<ProgrammeEdition>
}

Class ProgrammeEditionListFactoryImpl {
    + createProgrammeEditionList() : List<ProgrammeEdition>
}


interface ISchoolYearRepository {
    + addSchoolYear(description : Description, date : Date, date : Date) : boolean
    + schoolYearExists(schoolYearID : SchoolYearID) : boolean
    + getCurrentSchoolYearID() : SchoolYearID
    + getAllSchoolYears() : List<SchoolYear>
}

class SchoolYearRepositoryImpl {
    + SchoolYearRepositoryImpl(ISchoolYearFactory schoolYearFactory, ISchoolYearListFactory schoolYearListFactory)
    + addSchoolYear(description : Description, date : Date, date : Date) : boolean
    + schoolYearExists(schoolYearID : SchoolYearID) : boolean
    + getCurrentSchoolYearID() : SchoolYearID
    + getAllSchoolYears() : List<SchoolYear>
}


interface IProgrammeRepository {
    + registerProgramme(name : Name, acronym : Acronym, quantEcts : QuantEcts, (...))
    + changeProgrammeDirector(programmeID : ProgrammeID, teacherID : TeacherID)
    + getAllProgrammes() : List<Programme>
    + getAllProgrammeEditions() : List<ProgrammeEdition>
    + getProgrammeByName(name : Name) : Optional<Programme>
    + getProgrammeByAcronym(acronym : Acronym) : Programme
    + getAllProgrammeNames() : List <String>
}

class ProgrammeRepositoryImpl {
    + ProgrammeRepositoryImpl(IProgrammeFactory IProgrammeFactory, IProgrammeRepositoryListFactory programmeLisListFactory)
    + registerProgramme(name : Name, acronym : Acronym, quantEcts : QuantEcts, (...))
    + changeProgrammeDirector(programmeID : ProgrammeID, teacherID : TeacherID)
    + getAllProgrammes() : List<Programme>
    + getAllProgrammeEditions() : List<ProgrammeEdition>
    + getProgrammeByName(name : Name) : Optional<Programme>
    + getProgrammeByAcronym(acronym : Acronym) : Programme
    + getAllProgrammeNames() : List <String>
}


package "ProgrammeEdition Aggregate" {
    entity "<<Root>>\n<<Entity>>\nProgrammeEdition" {
        + ProgrammeEdition(programmeID : ProgrammeID,  schoolYearID : SchoolYearID)
        + equals (object : Object) : boolean
        + findProgrammeInProgrammeEdition() : ProgrammeID
        + findSchoolYearInProgrammeEdition() : SchoolYearID
        + isEditionAssociatedToDepartmentAndSchoolYear(departmentID : DepartmentID, schoolYearID : SchoolYearID) : boolean
    }

    class "<<Value Object>>\nProgrammeEditionID" {
            - _programmeEditionID : UUID
            + ProgrammeEditionID()
            + getProgrammeEditionID() : UUID
            + equals() : boolean
            + toString() : String
    }
}


package "SchoolYear Aggregate" {
    entity "<<Root>>\n<<Entity>>\nSchoolYear" {
        +SchoolYear(descriptionVO : DescriptionVO, date : Date, date : Date)
        +getEndDate() : Date
        +getStartDate() : Date
        +equals(object : Object) : boolean
    }

    class "<<Value Object>>\nSchoolYearID" {
            - schoolYearID : int
            + getProgrammeEditionID() : int
            + equals() : boolean
    }
}


package "Programme Aggregate" {
    entity "<<Root>>\n<<Entity>>\nProgramme" {
        +Programme(name : Name, acronym : Acronym, quantityOfEcts : QuantityOfEcts (...))
        +getEndDate() : Date
        +getStartDate() : Date
        +equals(object : Object) : boolean
    }

    class "<<Value Object>>\nProgrammeID" {
            - programmeID : int
            + getProgrammeEditionID() : int
            + equals() : boolean
    }
}

interface IRepository {}

IProgrammeRepository -up-|> IRepository : extends
IProgrammeEditionRepository -up-|> IRepository : extends
ISchoolYearRepository -up-|> IRepository : extends



"<<Root>>\n<<Entity>>\nProgrammeEdition" "1" *-- "1" "<<Value Object>>\nProgrammeEditionID" : contains
"<<Root>>\n<<Entity>>\nProgramme" "*" *-- "1" "<<Value Object>>\nProgrammeID" : contains
"<<Root>>\n<<Entity>>\nSchoolYear" "1" *-- "1" "<<Value Object>>\nSchoolYearID" : contains

IProgrammeEditionRepository <|..... ProgrammeEditionRepositoryImpl
US18_CreateProgrammeEditionForCurrentSchoolYearController "1" ....> "*" IProgrammeEditionRepository : uses

ISchoolYearRepository <|..... SchoolYearRepositoryImpl
US18_CreateProgrammeEditionForCurrentSchoolYearController "1" ....> "*" ISchoolYearRepository : uses

IProgrammeRepository <|..... ProgrammeRepositoryImpl
US18_CreateProgrammeEditionForCurrentSchoolYearController "1" ....> "*" IProgrammeRepository : uses

"<<Root>>\n<<Entity>>\nProgrammeEdition" "*" <-up- "1" IProgrammeEditionRepository : contains
"<<Root>>\n<<Entity>>\nSchoolYear" "*" <-up- "1" ISchoolYearRepository : contains
"<<Root>>\n<<Entity>>\nProgramme" "*" <-up- "1" IProgrammeRepository : contains

ProgrammeEditionRepositoryImpl "1" -up-> "1" IProgrammeEditionListFactory : uses
ProgrammeEditionListFactoryImpl ..|> IProgrammeEditionListFactory

'"<<Root>>\n<<Entity>>\nProgrammeEdition" .> "<<Value Object>>\nSchoolYearID" : knows
'"<<Root>>\n<<Entity>>\nProgrammeEdition" .> "<<Value Object>>\nProgrammeID" : knows

@enduml