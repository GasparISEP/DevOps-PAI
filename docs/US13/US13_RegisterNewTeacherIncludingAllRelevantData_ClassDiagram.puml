@startuml
top to bottom direction
title US13 - As a HRC, I want to register a new teacher in the system, including all Relevant Data, Class Diagram
skinparam ranksep 180
skinparam nodesep 180

'--- Classes and interfaces ---

class US13_RegisterTeacherAndRelevantDataController {
    +US13_RegisterTeacherAndRelevantDataController(ITeacherCategoryRepository teacherCategoryRepository, IDepartmentRepository departmentRepository,
        ITeacherRepository teacherRepository, ITeacherCareerProgressionRepository teacherCareerProgressionRepository)
    +getTeacherCategoryList()
    +getDepartmentList()
    +registerTeacher(teacherId: TeacherId, name: Name, email: Email, nif: NIF, phoneNumber: PhoneNumber, academicBackground: AcademicBackground,
        street: Street, postalCode: PostalCode, location: Location, country: Country, date: Date, teacherCategoryId: TeacherCategoryId, workingPercentage: WorkingPercentage, departmentId: DepartmentId)
}

interface ITeacherCategoryRepository {
    +getTeacherCategoriesList(): List<TeacherCategory>
}

class TeacherCategoryRepository {
    +getTeacherCategoriesList(): List<TeacherCategory>
}

interface IDepartmentRepository {
    +getDepartments(): Set<Department>
}

class DepartmentRepository {
    +getDepartments(): Set<Department>
}

interface ITeacherRepository {
    +registerTeacher(teacherId: TeacherId, name: Name, email: Email, nif: NIF, phoneNumber: PhoneNumber, academicBackground: AcademicBackground,
        street: Street, postalCode: PostalCode, location: Location, country: Country, departmentId: DepartmentId)
}

class TeacherRepository {
    +registerTeacher(teacherId: TeacherId, name: Name, email: Email, nif: NIF, phoneNumber: PhoneNumber, academicBackground: AcademicBackground,
        street: Street, postalCode: PostalCode, location: Location, country: Country, departmentId: DepartmentId)
}

interface ITeacherFactory {
    +createTeacher(teacherId: TeacherId, name: Name, email: Email, nif: NIF, phoneNumber: PhoneNumber, academicBackground: AcademicBackground,
        street: Street, postalCode: PostalCode, location: Location, country: Country, departmentId: DepartmentId): Teacher
}

class TeacherFactoryImpl {
    +createTeacher(teacherId: TeacherId, name: Name, email: Email, nif: NIF, phoneNumber: PhoneNumber, academicBackground: AcademicBackground,
        street: Street, postalCode: PostalCode, location: Location, country: Country, departmentId: DepartmentId): Teacher
}

interface ITeacherListFactory {
    +newArrayList(): List<Teacher>
}

class TeacherListFactoryImpl {
    +newArrayList(): List<Teacher>
}

interface List_TeacherCareerProgression <TeacherCareerProgression> {
}

interface List_Teacher <Teacher> {
}

package Teacher_Aggregate {
    class Teacher <<root>> {
        -_teacherId: TeacherId
        -_name: Name
        -_email: Email
        -_nif: NIF
        -_phoneNumber: PhoneNumber
        -_academicBackground: AcademicBackground
        -_address: Address
        _department: DepartmentId
        +Teacher(teacherID: TeacherId, name: Name, email: Email, nif: NIF, phoneNumber: PhoneNumber, academicBackground: AcademicBackground,
            address: Address, departmentAcronym: DepartmentId)
     }
 }

interface ITeacherCareerProgressionRepository {
    +registerTeacherCareerProgression(date: Date, teacherCategoryId: Name, workingPercentage: WorkingPercentage, teacherId: TeacherId)
}

class TeacherCareerProgressionRepository {
    +registerTeacherCareerProgression(date: Date, teacherCategoryId: Name, workingPercentage: WorkingPercentage, teacherId: TeacherId)
}

interface ITeacherCareerProgressionFactory {
    +createTeacherCareerProgression(date: Date, teacherCategoryId: Name, workingPercentage: WorkingPercentage, teacherId: TeacherId)
}

class TeacherCareerProgressionFactoryImpl {
    +createTeacherCareerProgression(date: Date, teacherCategoryId: Name, workingPercentage: WorkingPercentage, teacherId: TeacherId)
}

package TeacherCareerProgression_Aggregate {
    class TeacherCareerProgression <<root>> {
        -_date: Date
        -_workingPercentage: WorkingPercentage
        +TeacherCareerProgression(date: Date, teacherCategoryId: Name, workingPercentage: WorkingPercentage, teacherId: TeacherId)
    }
}

interface ITeacherCareerProgressionListFactory {
    +newArrayList(): List<TeacherCareerProgression>
}

class TeacherCareerProgressionListFactory {
    +newArrayList(): List<TeacherCareerProgression>
}

package TeacherCategory_Aggregate {
    class TeacherCategory <<root>> {
    -_name: Name
    }
}

package Department_Aggregate {
    class Department <<root>> {
    -_acronym: Acronym
    -_name: Name
    -_director: TeacherId
    }
}

'--- VOs ---

class TeacherId <<VO>> {
}

class Name <<VO>> {
}

class Email <<VO>> {
}

class NIF <<VO>> {
}

class PhoneNumber <<VO>> {
}

class Street <<VO>> {
}

class PostalCode <<VO>> {
}

class Location <<VO>> {
}

class Country <<VO>> {
}

class AcademicBackground <<VO>> {
}

class WorkingPercentage <<VO>> {
}

class Date <<VO>> {
}

class DepartmentAcronym <<VO>> {
}

class Address <<VO>> {
-_street: Street
 -_postalCode: PostalCode
 -_location: Location
 -_country: Country
 +Address(street: Street, postalCode: PostalCode, location: Location, country: Country)
}

'--- Relations ---

US13_RegisterTeacherAndRelevantDataController "\n1" -u-> "_teacherCategoryRepository \n1" ITeacherCategoryRepository
TeacherCategoryRepository "1 " ..|> "1  " ITeacherCategoryRepository
ITeacherCategoryRepository "1\t\t" --> "_tcList\n*" TeacherCategory

US13_RegisterTeacherAndRelevantDataController "1 " --> "_departmentRepository \n1" IDepartmentRepository
DepartmentRepository "1" .l.|> " 1" IDepartmentRepository
IDepartmentRepository " 1" --> "_dptSet\n*" Department

US13_RegisterTeacherAndRelevantDataController "1" --> "_teacherRepository \n1" ITeacherRepository
TeacherRepository "1" ..|> "1         " ITeacherRepository
ITeacherRepository "1 " ..> "1 " ITeacherListFactory
ITeacherRepository "1" --> "1" List_Teacher
TeacherListFactoryImpl "1 " .l.|> "1 " ITeacherListFactory
ITeacherListFactory "1 " ..> "1" List_Teacher: <<create>>
List_Teacher "1 " --> "*" Teacher

ITeacherRepository "1" ..> "1" ITeacherFactory
TeacherFactoryImpl "1  " ..|> "1  " ITeacherFactory
ITeacherFactory "1" .u.> "1" Address: <<create>>
ITeacherFactory "1  " ..> "1  " Teacher: <<create>>

Teacher "1" --> "1" Address

US13_RegisterTeacherAndRelevantDataController "\n1" -u-> "_TeacherCareerProgressionRepository \n1" ITeacherCareerProgressionRepository
TeacherCareerProgressionRepository "1 " ..|> "1  " ITeacherCareerProgressionRepository
ITeacherCareerProgressionRepository "1" ..> "1" ITeacherCareerProgressionFactory
TeacherCareerProgressionFactoryImpl "1  " ..|> "1  " ITeacherCareerProgressionFactory
ITeacherCareerProgressionFactory "1   " ..> "1 " TeacherCareerProgression: <<create>>
ITeacherCareerProgressionRepository "1" ..> "1" ITeacherCareerProgressionListFactory
TeacherCareerProgressionListFactory "1" ..|> "1" ITeacherCareerProgressionListFactory
ITeacherCareerProgressionListFactory "1" ..> "1" List_TeacherCareerProgression: <<create>>
List_TeacherCareerProgression "1" --> "1..*\t\t" TeacherCareerProgression
ITeacherCareerProgressionRepository "1" --> "1" List_TeacherCareerProgression

'--- DTO Connections ---

Teacher "1" --> "1" TeacherId
Teacher "1" --> "1" Name
Teacher "1" --> "1" Email
Teacher "1" --> "1" NIF
Teacher "1" --> "1" PhoneNumber
Teacher "1" --> "1" AcademicBackground
Teacher "1" --> "1" DepartmentAcronym

Address "1" --> "1" Street
Address "1" --> "1" PostalCode
Address "1" --> "1" Location
Address "1" --> "1" Country

TeacherCareerProgression "1" --> "1" Date
TeacherCareerProgression "1" --> "1" Name
TeacherCareerProgression "1" --> "1" TeacherId
TeacherCareerProgression "1" --> "1" WorkingPercentage
@enduml