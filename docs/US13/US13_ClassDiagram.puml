@startuml
'https://plantuml.com/class-diagram

top to bottom direction

skinparam ranksep 180
skinparam nodesep 180

class US13_RegisterTeacherAndRelevantDataController {
+US13_RegisterTeacherAndRelevantDataController(TeacherCategoryRepository teacherCategoryRepository, DepartmentRepository departmentRepository,
TeacherRepository teacherRepository)
+getTeacherCategoryList()
+getDepartmentList()
+registerTeacher(String acronym, String name, String email, String nif, String phoneNumber, String academicBackground,
String street, String postalCode, String location, String country, String date, TeacherCategory category, int workingPercentage, Department department)
}

class TeacherCategoryRepository {
+TeacherCategoryRepository()
+registerTeacherCategory (String name)
+isTeacherCategoryRegistered(TeacherCategory teacherCategory)
+getTeacherCategoriesList()
}

class DepartmentRepository {
+DepartmentRepository()
+registerDepartment(String acronym, String name)
+getDepartmentsList()
+departmentExists (Department department)
+updateOfDepartmentDirector(Department department, Teacher furtherDirector)
}

class TeacherRepository {
+TeacherRepository()
+registerTeacher(String acronym, String name, String email, String nif, String phoneNumber, String academicBackground,
String street, String postalCode, String location, String country, String date, TeacherCategory category, int workingPercentage, Department department)
+getAllTeachers()
+getTeacherByNIF(String NIF)
}

class TeacherFactory {
+createTeacher(String acronym, String name, String email, String nif, String phoneNumber, String academicBackground,
               String street, String postalCode, String location, String country, String date, TeacherCategory category, int workingPercentage, Department department)
}

class Teacher {
-_acronym:String
 -_name:String
 -_email:String
 -_nif:String
 -_phoneNumber:String
 -_academicBackground:String
 +Teacher(acronym: String, name: String, email: String, nif: String, phoneNumber: String,
 String academicBackground, String street, String postalCode, String location, String country, date: String, category: TeacherCategory, workingPercentage: int, department: Department)
 +hasSameAcronym(teacher: Teacher)
 +hasSameNif(teacher: Teacher)
 +isInDepartment(department: Department)
 +hasThisNIF(NIF: String)
 +updateWorkingPercentageInTeacherCareerProgression(date: String, workingPercentage: int)
 +updateTeacherCategoryInTeacherCarrerProgression(date: String, teacherCategory: TeacherCategory)
}

class AddressFactory {
+createAddress(street: String, postalCode: String, location: String, country: String)
}

class Address {
-_street:String
 -_postalCode: String
 -_location: String
 -_country: String
 +Address(street: String, postalCode: String, location: String, country: String)
}

class TeacherCareerProgressionFactory {
+createTeacherCareerProgression(date: String, TeacherCategory category, workingPercentage: int)
}

class TeacherCareerProgression {
-_date: LocalDate
-_workingPercentage: int
+TeacherCareerProgression(date: String, TeacherCategory category, workingPercentage: int)
+getWorkingPercentage()
+getCategory()
+isDateAfter(tcp: TeacherCareerProgression)
}

class TeacherCategory {
-_name:String
+ TeacherCategory (name:String)
+getName()
+equals (Object objectToCompare)
}

class Department {
-_acronym:String
-_name:String
-_director:Teacher
+Department(departmentAcronym: String, departmentName: String)
+Department(departmentAcronym: String, departmentName: String,director: Teacher)
+hasSameAcronym(department: Department)
+hasSameName(department: Department)
+changeDirector(furtherDirector: Teacher)
+equals(Object obj)
}

US13_RegisterTeacherAndRelevantDataController "\n1" .r.> "_tcList \n1"TeacherCategoryRepository
US13_RegisterTeacherAndRelevantDataController "1" .l.> "_dptList \n1"DepartmentRepository
US13_RegisterTeacherAndRelevantDataController "1" .d.> "teacher \n1\n"TeacherRepository

TeacherCategoryRepository " 1" *-d- "_teacherCategory \n*" TeacherCategory
TeacherCareerProgression "\n*" *-l- "_teacherCategory \n1"TeacherCategory

TeacherRepository "1" ..d.> "teacher \n*"TeacherFactory
TeacherFactory "1 " -d-> "teacher \n*"Teacher

Teacher "1" .d.> "_address \n1\n" AddressFactory
AddressFactory "1" -d-> "_address \n1" Address

Teacher "1" ..> "_tcp \n1..*\n" TeacherCareerProgressionFactory
TeacherCareerProgressionFactory "\n1" -u-> "_tcp \n1" TeacherCareerProgression

DepartmentRepository "1" *-d- "*\n_dpt  " Department
Teacher "*" ..> "_department \n1" Department


@enduml