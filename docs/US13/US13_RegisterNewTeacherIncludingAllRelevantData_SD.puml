@startuml
skinparam sequenceMessageAlign center
autonumber
skinparam sequenceLifeLineBackgroundColor PowderBlue

title US13: As a HRC, I want to register a new teacher in the system, including all relevant data.

actor HRC
participant ":UI" as UI #Cyan/Silver
participant ":Controller" as Controller #Cyan/Silver
participant ":ITeacherCategoryRepository" as TeacherCategoryRepository <<Interface>> #Cyan/Silver
participant "tcList :List<TeacherCategories>" as tcList #Yellow/Silver
participant ":IDepartmentRepository" as DepartmentRepository <<Interface>> #Cyan/Silver
participant "deptSet :Set<Departments>" as dptList #Yellow/Silver
participant ":ITeacherRepository" as TeacherRepository <<Interface>> #Cyan/Silver
participant ":ITeacherFactory" as TeacherFactory <<Interface>> #Cyan/Silver
participant "t1 :Teacher" as Teacher #Yellow/Silver
participant "addrsVO1 :Address" as Address #Yellow/Silver
participant ":ITeacherCareerProgressionRepository" as TeacherCareerProgressionRepository <<Interface>> #Cyan/Silver
participant ":ITeacherCareerProgressionFactory" as TeacherCareerProgressionFactory <<Interface>> #Cyan/Silver
participant "tcp1 :TeacherCareerProgression" as TeacherCareerProgression #Yellow/Silver

activate HRC
HRC -> UI: I want to register a new teacher including\n all relevant data.
activate UI

UI -> Controller: **getTeacherCategoriesList()**
activate Controller

Controller -> TeacherCategoryRepository: **getTeacherCategoryList()**
activate TeacherCategoryRepository

TeacherCategoryRepository --> Controller: tcList
deactivate TeacherCategoryRepository
|||
ref over Controller
    \t \t Convert Domain to DTO \t
end ref

Controller --> UI: tcListDTO
deactivate Controller

UI --> HRC: Choose a teacher category from the list.

HRC -> UI: tc1DTO

UI -> Controller: **getDepartments()**
activate Controller

Controller -> DepartmentRepository: **getDepartments()**
activate DepartmentRepository

DepartmentRepository --> Controller: deptSet
deactivate DepartmentRepository
|||
ref over Controller
    \t \t Convert Domain to DTO \t
end ref

Controller --> UI: deptSetDTO
deactivate Controller

UI --> HRC: Choose a department from the list.
|||
HRC -> UI: dept1DTO
|||
UI --> HRC: What are the attributes?
|||
HRC -> UI: teacherAcronym, name, email, nif,\n phoneNumber, street, postalCode,\n location, country, academicBackground,\n workingPercentage, date

Note Right HRC #Pink/White
    **tc1** = Teacher Category Object
    **dpt1** = Department Object
End Note

'--- Start of registerTeacher will all inputs ---

UI -> Controller: **registerTeacher**(acronymDTO, nameDTO, emailDTO,\n nifDTO, phoneNumberDTO, streetDTO, postalCodeDTO,\n locationDTO, countryDTO, academicBackgroundDTO,\n workingPercentageDTO, dateDTO, tc1DTO, dept1DTO)
activate Controller
|||
ref over Controller
    \t \t Convert DTO to VO \t
end ref
|||
Controller -> TeacherRepository:\t **registerTeacher**(teacherAcronymVO, nameVO, emailVO, nifVO, phoneNumberVO, streetVO,\n postalCodeVO, locationVO, countryVO, academicBackgroundVO, departmentIDVO)
activate TeacherRepository

TeacherRepository -> TeacherFactory: **createTeacher** (teacherAcronymVO, nameVO, emailVO,\n nifVO, phoneNumberVO, streetVO,\n postalCodeVO, locationVO, countryVO,\n academicBackgroundVO, departmentIDVO)
activate TeacherFactory

TeacherFactory -> Address **: **createAddress** (streetVO, postalCodeVO, locationVO, countryVO)
activate Address
|||
Address --> TeacherFactory:\t addrsVO1
deactivate Address
|||
TeacherFactory -> Teacher **: **createTeacher** (teacherAcronymVO, nameVO, emailVO,\n nifVO, phoneNumberVO, addrsVO1,\n academicBackgroundVO, departmentIDVO)
activate Teacher

|||
Teacher --> TeacherFactory: \t t1
deactivate Teacher

TeacherFactory --> TeacherRepository: t1
deactivate TeacherFactory
|||
activate Teacher
ref over TeacherRepository, Teacher
    Check if a teacher is already registered
end ref
|||
TeacherRepository -> TeacherRepository: **save** (t1)
deactivate Teacher

TeacherRepository --> Controller: True
deactivate TeacherRepository
|||
Controller -> TeacherCareerProgressionRepository: **registerTeacherCareerProgression**(dateVO, tc1IDVO, WorkingPercentage, t1IDVO)
activate TeacherCareerProgressionRepository

TeacherCareerProgressionRepository -> TeacherCareerProgressionFactory: **createTeacherCareerProgression**(dateVO,\n tc1IDVO, WorkingPercentage, t1IDVO)
activate TeacherCareerProgressionFactory

TeacherCareerProgressionFactory -> TeacherCareerProgression: **createTeacherCarrerProgression**(dateVO,\n tc1IDVO, WorkingPercentage, t1IDVO)
activate TeacherCareerProgression
|||
TeacherCareerProgression --> TeacherCareerProgressionFactory: \ttcp1
deactivate TeacherCareerProgression
TeacherCareerProgressionFactory --> TeacherCareerProgressionRepository: \ttcp1
deactivate TeacherCareerProgressionFactory
|||
TeacherCareerProgressionRepository -> TeacherCareerProgressionRepository: **save** (tcp1)
TeacherCareerProgressionRepository --> Controller: True
deactivate TeacherCareerProgressionRepository
Controller --> UI: True
deactivate Controller

UI --> HRC: Success!
deactivate UI
|||
@enduml