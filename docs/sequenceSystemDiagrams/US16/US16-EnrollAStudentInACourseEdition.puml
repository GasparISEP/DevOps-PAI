 @startuml

actor ASC
participant ":UI" as UI
ASC -> UI: I want to enroll a student in a course edition
UI --> ASC: What Student?

ASC -> UI: student(uniqueNumber)
activate UI
participant ":Controller" as Controller
UI -> Controller: getStudent(uniqueNumber)
activate Controller
participant ":StudentRepository" as StudentRepository
Controller --> StudentRepository: getStudent (uniqueNumber)
activate StudentRepository
StudentRepository -> StudentRepository: getStudent (st1)
StudentRepository --> Controller: studentSelected (st1)
deactivate StudentRepository
Controller --> UI: studentSelected (st1)
deactivate Controller
deactivate UI

UI --> ASC: What SchoolYear?
ASC -> UI: schoolYear (description,startDate,endDate)
activate UI
UI -> Controller: getSchoolYear (description,startDate,endDate)
activate Controller
participant ":SchoolYearRepository" as SchoolYearRepository
Controller -> SchoolYearRepository: getSchoolYear (description,startDate,endDate)
activate SchoolYearRepository
SchoolYearRepository -> SchoolYearRepository: isSchoolYearValid(description,startDate,endDate)
SchoolYearRepository -> SchoolYearRepository: getSchoolYear(sy1)
SchoolYearRepository -> Controller: schoolYearSelected (sy1)
deactivate SchoolYearRepository
Controller --> UI: schoolYearSelected (sy1)
deactivate Controller
deactivate UI

UI --> ASC: What ProgrammeEdition?

ASC -> UI: ProgrammeEditionEnrollmentOfStudent (ProgrammeEdition,st1,enrollmentDate)
activate UI
UI -> Controller: getProgrammeEditionEnrollmentOfStudent (ProgrammeEdition,st1,enrollmentDate)
activate Controller
participant ":ProgrammeEditionEnrollmentRepository" as ProgrammeEditionEnrollmentRepository
Controller -> ProgrammeEditionEnrollmentRepository : getProgrammeEditionEnrollmentOfStudent (ProgrammeEdition,st1,enrollmentDate)
activate ProgrammeEditionEnrollmentRepository
ProgrammeEditionEnrollmentRepository -> ProgrammeEditionEnrollmentRepository: listOfStudentOfProgrammeEditionEnrollmentSelected (pee1)
ProgrammeEditionEnrollmentRepository --> Controller: listOfStudentOfProgrammeEditionEnrollmentSelected (pee1)
deactivate ProgrammeEditionEnrollmentRepository
Controller --> UI: listOfStudentOfProgrammeEditionEnrollmentSelected (pee1)
deactivate Controller
deactivate UI
UI --> ASC: What CourseEdition?

ASC -> UI: CourseEdition (course,programmeEdition)
activate UI
UI -> Controller: getCourseEdition (course,programmeEdition)
activate Controller
participant ":CourseEditionRepository" as CourseEditionRepository
Controller -> CourseEditionRepository : getCourseEdition (course,programmeEdition)
activate CourseEditionRepository
CourseEditionRepository -> CourseEditionRepository: isCourseEditionValid (course,programmeEdition)
CourseEditionRepository -> CourseEditionRepository: getCourseEdition (ce1)
CourseEditionRepository --> Controller: courseEditionSelected (ce1)
deactivate CourseEditionRepository
Controller --> UI: courseEditionSelected (ce1)
deactivate Controller
UI --> ASC: Sure?
deactivate UI

ASC -> UI: Yes!


activate UI
UI -> Controller: enrollStudentInCourseEdition (st1, ce1)
activate Controller
Controller -> Controller: isStudentInProgrammeEdition (st1, ce1)
participant ":CourseEditionEnrollmentRepository" as CourseEditionEnrollmentRepository
Controller -> CourseEditionEnrollmentRepository: enrollStudentInCourseEdition (st1, ce1, enrollmentDate)
activate CourseEditionEnrollmentRepository
create "cee1:CourseEditionEnrollment"
CourseEditionEnrollmentRepository -> "cee1:CourseEditionEnrollment" : createCourseEditionEnrollment (st1, ce1, enrollmentDate)
activate "cee1:CourseEditionEnrollment"
"cee1:CourseEditionEnrollment" --> CourseEditionEnrollmentRepository: courseEditionEnrollmentCreated (cee1)
deactivate "cee1:CourseEditionEnrollment"
CourseEditionEnrollmentRepository -> CourseEditionEnrollmentRepository: checkIfThisEnrollmentAlreadyExists (cee1)
CourseEditionEnrollmentRepository -> CourseEditionEnrollmentRepository: enrollStudentInCourseEdition (cee1)
CourseEditionEnrollmentRepository --> Controller: studentEnrolledInACourseEdition(cee1)
deactivate CourseEditionEnrollmentRepository
Controller --> UI: studentEnrolledInACourseEdition(cee1)
deactivate Controller
UI --> ASC: OK!
deactivate UI

@enduml
